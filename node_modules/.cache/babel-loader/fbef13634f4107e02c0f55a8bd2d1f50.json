{"ast":null,"code":"'use strict';var refractorMarkupTemplating=require('./markup-templating.js');module.exports=soy;soy.displayName='soy';soy.aliases=[];function soy(Prism){Prism.register(refractorMarkupTemplating);(function(Prism){var stringPattern=/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/;var numberPattern=/\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/;Prism.languages.soy={comment:[/\\/\\*[\\s\\S]*?\\*\\//,{pattern:/(\\s)\\/\\/.*/,lookbehind:true,greedy:true}],'command-arg':{pattern:/({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,lookbehind:true,alias:'string',inside:{punctuation:/\\./}},parameter:{pattern:/({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,lookbehind:true,alias:'variable'},keyword:[{pattern:/({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,lookbehind:true},/\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/],delimiter:{pattern:/^{+\\/?|\\/?}+$/,alias:'punctuation'},property:/\\w+(?==)/,variable:{pattern:/\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,inside:{string:{pattern:stringPattern,greedy:true},number:numberPattern,punctuation:/[\\[\\].?]/}},string:{pattern:stringPattern,greedy:true},function:[/\\w+(?=\\()/,{pattern:/(\\|[^\\S\\r\\n]*)\\w+/,lookbehind:true}],boolean:/\\b(?:true|false)\\b/,number:numberPattern,operator:/\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,punctuation:/[{}()\\[\\]|.,:]/};// Tokenize all inline Soy expressions\nPrism.hooks.add('before-tokenize',function(env){var soyPattern=/{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g;var soyLitteralStart='{literal}';var soyLitteralEnd='{/literal}';var soyLitteralMode=false;Prism.languages['markup-templating'].buildPlaceholders(env,'soy',soyPattern,function(match){// Soy tags inside {literal} block are ignored\nif(match===soyLitteralEnd){soyLitteralMode=false;}if(!soyLitteralMode){if(match===soyLitteralStart){soyLitteralMode=true;}return true;}return false;});});// Re-insert the tokens after tokenizing\nPrism.hooks.add('after-tokenize',function(env){Prism.languages['markup-templating'].tokenizePlaceholders(env,'soy');});})(Prism);}","map":{"version":3,"names":["refractorMarkupTemplating","require","module","exports","soy","displayName","aliases","Prism","register","stringPattern","numberPattern","languages","comment","pattern","lookbehind","greedy","alias","inside","punctuation","parameter","keyword","delimiter","property","variable","string","number","function","boolean","operator","hooks","add","env","soyPattern","soyLitteralStart","soyLitteralEnd","soyLitteralMode","buildPlaceholders","match","tokenizePlaceholders"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/soy.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = soy\nsoy.displayName = 'soy'\nsoy.aliases = []\nfunction soy(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function(Prism) {\n    var stringPattern = /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/\n    var numberPattern = /\\b\\d+(?:\\.\\d+)?(?:[eE][+-]?\\d+)?\\b|\\b0x[\\dA-F]+\\b/\n    Prism.languages.soy = {\n      comment: [\n        /\\/\\*[\\s\\S]*?\\*\\//,\n        {\n          pattern: /(\\s)\\/\\/.*/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      'command-arg': {\n        pattern: /({+\\/?\\s*(?:alias|call|delcall|delpackage|deltemplate|namespace|template)\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'string',\n        inside: {\n          punctuation: /\\./\n        }\n      },\n      parameter: {\n        pattern: /({+\\/?\\s*@?param\\??\\s+)\\.?[\\w.]+/,\n        lookbehind: true,\n        alias: 'variable'\n      },\n      keyword: [\n        {\n          pattern: /({+\\/?[^\\S\\r\\n]*)(?:\\\\[nrt]|alias|call|case|css|default|delcall|delpackage|deltemplate|else(?:if)?|fallbackmsg|for(?:each)?|if(?:empty)?|lb|let|literal|msg|namespace|nil|@?param\\??|rb|sp|switch|template|xid)/,\n          lookbehind: true\n        },\n        /\\b(?:any|as|attributes|bool|css|float|in|int|js|html|list|map|null|number|string|uri)\\b/\n      ],\n      delimiter: {\n        pattern: /^{+\\/?|\\/?}+$/,\n        alias: 'punctuation'\n      },\n      property: /\\w+(?==)/,\n      variable: {\n        pattern: /\\$[^\\W\\d]\\w*(?:\\??(?:\\.\\w+|\\[[^\\]]+]))*/,\n        inside: {\n          string: {\n            pattern: stringPattern,\n            greedy: true\n          },\n          number: numberPattern,\n          punctuation: /[\\[\\].?]/\n        }\n      },\n      string: {\n        pattern: stringPattern,\n        greedy: true\n      },\n      function: [\n        /\\w+(?=\\()/,\n        {\n          pattern: /(\\|[^\\S\\r\\n]*)\\w+/,\n          lookbehind: true\n        }\n      ],\n      boolean: /\\b(?:true|false)\\b/,\n      number: numberPattern,\n      operator: /\\?:?|<=?|>=?|==?|!=|[+*/%-]|\\b(?:and|not|or)\\b/,\n      punctuation: /[{}()\\[\\]|.,:]/\n    } // Tokenize all inline Soy expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var soyPattern = /{{.+?}}|{.+?}|\\s\\/\\/.*|\\/\\*[\\s\\S]*?\\*\\//g\n      var soyLitteralStart = '{literal}'\n      var soyLitteralEnd = '{/literal}'\n      var soyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'soy',\n        soyPattern,\n        function(match) {\n          // Soy tags inside {literal} block are ignored\n          if (match === soyLitteralEnd) {\n            soyLitteralMode = false\n          }\n          if (!soyLitteralMode) {\n            if (match === soyLitteralStart) {\n              soyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'soy')\n    })\n  })(Prism)\n}\n"],"mappings":"AAAA,aACA,GAAIA,0BAAyB,CAAGC,OAAO,CAAC,wBAAD,CAAvC,CACAC,MAAM,CAACC,OAAP,CAAiBC,GAAjB,CACAA,GAAG,CAACC,WAAJ,CAAkB,KAAlB,CACAD,GAAG,CAACE,OAAJ,CAAc,EAAd,CACA,QAASF,IAAT,CAAaG,KAAb,CAAoB,CAClBA,KAAK,CAACC,QAAN,CAAeR,yBAAf,EACC,CAAC,SAASO,KAAT,CAAgB,CAChB,GAAIE,cAAa,CAAG,gDAApB,CACA,GAAIC,cAAa,CAAG,mDAApB,CACAH,KAAK,CAACI,SAAN,CAAgBP,GAAhB,CAAsB,CACpBQ,OAAO,CAAE,CACP,kBADO,CAEP,CACEC,OAAO,CAAE,YADX,CAEEC,UAAU,CAAE,IAFd,CAGEC,MAAM,CAAE,IAHV,CAFO,CADW,CASpB,cAAe,CACbF,OAAO,CAAE,wFADI,CAEbC,UAAU,CAAE,IAFC,CAGbE,KAAK,CAAE,QAHM,CAIbC,MAAM,CAAE,CACNC,WAAW,CAAE,IADP,CAJK,CATK,CAiBpBC,SAAS,CAAE,CACTN,OAAO,CAAE,kCADA,CAETC,UAAU,CAAE,IAFH,CAGTE,KAAK,CAAE,UAHE,CAjBS,CAsBpBI,OAAO,CAAE,CACP,CACEP,OAAO,CAAE,iNADX,CAEEC,UAAU,CAAE,IAFd,CADO,CAKP,yFALO,CAtBW,CA6BpBO,SAAS,CAAE,CACTR,OAAO,CAAE,eADA,CAETG,KAAK,CAAE,aAFE,CA7BS,CAiCpBM,QAAQ,CAAE,UAjCU,CAkCpBC,QAAQ,CAAE,CACRV,OAAO,CAAE,yCADD,CAERI,MAAM,CAAE,CACNO,MAAM,CAAE,CACNX,OAAO,CAAEJ,aADH,CAENM,MAAM,CAAE,IAFF,CADF,CAKNU,MAAM,CAAEf,aALF,CAMNQ,WAAW,CAAE,UANP,CAFA,CAlCU,CA6CpBM,MAAM,CAAE,CACNX,OAAO,CAAEJ,aADH,CAENM,MAAM,CAAE,IAFF,CA7CY,CAiDpBW,QAAQ,CAAE,CACR,WADQ,CAER,CACEb,OAAO,CAAE,mBADX,CAEEC,UAAU,CAAE,IAFd,CAFQ,CAjDU,CAwDpBa,OAAO,CAAE,oBAxDW,CAyDpBF,MAAM,CAAEf,aAzDY,CA0DpBkB,QAAQ,CAAE,gDA1DU,CA2DpBV,WAAW,CAAE,gBA3DO,CAAtB,CA4DE;AACFX,KAAK,CAACsB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,CAAmC,SAASC,GAAT,CAAc,CAC/C,GAAIC,WAAU,CAAG,0CAAjB,CACA,GAAIC,iBAAgB,CAAG,WAAvB,CACA,GAAIC,eAAc,CAAG,YAArB,CACA,GAAIC,gBAAe,CAAG,KAAtB,CACA5B,KAAK,CAACI,SAAN,CAAgB,mBAAhB,EAAqCyB,iBAArC,CACEL,GADF,CAEE,KAFF,CAGEC,UAHF,CAIE,SAASK,KAAT,CAAgB,CACd;AACA,GAAIA,KAAK,GAAKH,cAAd,CAA8B,CAC5BC,eAAe,CAAG,KAAlB,CACD,CACD,GAAI,CAACA,eAAL,CAAsB,CACpB,GAAIE,KAAK,GAAKJ,gBAAd,CAAgC,CAC9BE,eAAe,CAAG,IAAlB,CACD,CACD,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CAhBH,EAkBD,CAvBD,EAuBG;AACH5B,KAAK,CAACsB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,CAAkC,SAASC,GAAT,CAAc,CAC9CxB,KAAK,CAACI,SAAN,CAAgB,mBAAhB,EAAqC2B,oBAArC,CAA0DP,GAA1D,CAA+D,KAA/D,EACD,CAFD,EAGD,CA3FA,EA2FExB,KA3FF,EA4FF"},"metadata":{},"sourceType":"module"}