{"ast":null,"code":"'use strict';module.exports=d;d.displayName='d';d.aliases=[];function d(Prism){Prism.languages.d=Prism.languages.extend('clike',{string:[// r\"\", x\"\"\n/\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/,// q\"[]\", q\"()\", q\"<>\", q\"{}\"\n/\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/,// q\"IDENT\n// ...\n// IDENT\"\n/\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/,// q\"//\", q\"||\", etc.\n/\\bq\"(.)[\\s\\S]*?\\1\"/,// Characters\n/'(?:\\\\'|\\\\?[^']+)'/,/([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/],number:[// The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n// Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n/\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,{pattern:/((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,lookbehind:true}],// In order: $, keywords and special tokens, globally defined symbols\nkeyword:/\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,operator:/\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/});Prism.languages.d.comment=[// Shebang\n/^\\s*#!.+/,// /+ +/\n{// Allow one level of nesting\npattern:/(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,lookbehind:true}].concat(Prism.languages.d.comment);Prism.languages.insertBefore('d','comment',{'token-string':{// Allow one level of nesting\npattern:/\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,alias:'string'}});Prism.languages.insertBefore('d','keyword',{property:/\\B@\\w*/});Prism.languages.insertBefore('d','function',{register:{// Iasm registers\npattern:/\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,alias:'variable'}});}","map":{"version":3,"names":["module","exports","d","displayName","aliases","Prism","languages","extend","string","number","pattern","lookbehind","keyword","operator","comment","concat","insertBefore","alias","property","register"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/d.js"],"sourcesContent":["'use strict'\n\nmodule.exports = d\nd.displayName = 'd'\nd.aliases = []\nfunction d(Prism) {\n  Prism.languages.d = Prism.languages.extend('clike', {\n    string: [\n      // r\"\", x\"\"\n      /\\b[rx]\"(?:\\\\[\\s\\S]|[^\\\\\"])*\"[cwd]?/, // q\"[]\", q\"()\", q\"<>\", q\"{}\"\n      /\\bq\"(?:\\[[\\s\\S]*?\\]|\\([\\s\\S]*?\\)|<[\\s\\S]*?>|\\{[\\s\\S]*?\\})\"/, // q\"IDENT\n      // ...\n      // IDENT\"\n      /\\bq\"([_a-zA-Z][_a-zA-Z\\d]*)(?:\\r?\\n|\\r)[\\s\\S]*?(?:\\r?\\n|\\r)\\1\"/, // q\"//\", q\"||\", etc.\n      /\\bq\"(.)[\\s\\S]*?\\1\"/, // Characters\n      /'(?:\\\\'|\\\\?[^']+)'/,\n      /([\"`])(?:\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1[cwd]?/\n    ],\n    number: [\n      // The lookbehind and the negative look-ahead try to prevent bad highlighting of the .. operator\n      // Hexadecimal numbers must be handled separately to avoid problems with exponent \"e\"\n      /\\b0x\\.?[a-f\\d_]+(?:(?!\\.\\.)\\.[a-f\\d_]*)?(?:p[+-]?[a-f\\d_]+)?[ulfi]*/i,\n      {\n        pattern: /((?:\\.\\.)?)(?:\\b0b\\.?|\\b|\\.)\\d[\\d_]*(?:(?!\\.\\.)\\.[\\d_]*)?(?:e[+-]?\\d[\\d_]*)?[ulfi]*/i,\n        lookbehind: true\n      }\n    ],\n    // In order: $, keywords and special tokens, globally defined symbols\n    keyword: /\\$|\\b(?:abstract|alias|align|asm|assert|auto|body|bool|break|byte|case|cast|catch|cdouble|cent|cfloat|char|class|const|continue|creal|dchar|debug|default|delegate|delete|deprecated|do|double|else|enum|export|extern|false|final|finally|float|for|foreach|foreach_reverse|function|goto|idouble|if|ifloat|immutable|import|inout|int|interface|invariant|ireal|lazy|long|macro|mixin|module|new|nothrow|null|out|override|package|pragma|private|protected|public|pure|real|ref|return|scope|shared|short|static|struct|super|switch|synchronized|template|this|throw|true|try|typedef|typeid|typeof|ubyte|ucent|uint|ulong|union|unittest|ushort|version|void|volatile|wchar|while|with|__(?:(?:FILE|MODULE|LINE|FUNCTION|PRETTY_FUNCTION|DATE|EOF|TIME|TIMESTAMP|VENDOR|VERSION)__|gshared|traits|vector|parameters)|string|wstring|dstring|size_t|ptrdiff_t)\\b/,\n    operator: /\\|[|=]?|&[&=]?|\\+[+=]?|-[-=]?|\\.?\\.\\.|=[>=]?|!(?:i[ns]\\b|<>?=?|>=?|=)?|\\bi[ns]\\b|(?:<[<>]?|>>?>?|\\^\\^|[*\\/%^~])=?/\n  })\n  Prism.languages.d.comment = [\n    // Shebang\n    /^\\s*#!.+/, // /+ +/\n    {\n      // Allow one level of nesting\n      pattern: /(^|[^\\\\])\\/\\+(?:\\/\\+[\\s\\S]*?\\+\\/|[\\s\\S])*?\\+\\//,\n      lookbehind: true\n    }\n  ].concat(Prism.languages.d.comment)\n  Prism.languages.insertBefore('d', 'comment', {\n    'token-string': {\n      // Allow one level of nesting\n      pattern: /\\bq\\{(?:\\{[^}]*\\}|[^}])*\\}/,\n      alias: 'string'\n    }\n  })\n  Prism.languages.insertBefore('d', 'keyword', {\n    property: /\\B@\\w*/\n  })\n  Prism.languages.insertBefore('d', 'function', {\n    register: {\n      // Iasm registers\n      pattern: /\\b(?:[ABCD][LHX]|E[ABCD]X|E?(?:BP|SP|DI|SI)|[ECSDGF]S|CR[0234]|DR[012367]|TR[3-7]|X?MM[0-7]|R[ABCD]X|[BS]PL|R[BS]P|[DS]IL|R[DS]I|R(?:[89]|1[0-5])[BWD]?|XMM(?:[89]|1[0-5])|YMM(?:1[0-5]|\\d))\\b|\\bST(?:\\([0-7]\\)|\\b)/,\n      alias: 'variable'\n    }\n  })\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,CAAjB,CACAA,CAAC,CAACC,WAAF,CAAgB,GAAhB,CACAD,CAAC,CAACE,OAAF,CAAY,EAAZ,CACA,QAASF,EAAT,CAAWG,KAAX,CAAkB,CAChBA,KAAK,CAACC,SAAN,CAAgBJ,CAAhB,CAAoBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,CAAgC,CAClDC,MAAM,CAAE,CACN;AACA,oCAFM,CAEgC;AACtC,4DAHM,CAGwD;AAC9D;AACA;AACA,gEANM,CAM4D;AAClE,oBAPM,CAOgB;AACtB,oBARM,CASN,yCATM,CAD0C,CAYlDC,MAAM,CAAE,CACN;AACA;AACA,sEAHM,CAIN,CACEC,OAAO,CAAE,sFADX,CAEEC,UAAU,CAAE,IAFd,CAJM,CAZ0C,CAqBlD;AACAC,OAAO,CAAE,s0BAtByC,CAuBlDC,QAAQ,CAAE,mHAvBwC,CAAhC,CAApB,CAyBAR,KAAK,CAACC,SAAN,CAAgBJ,CAAhB,CAAkBY,OAAlB,CAA4B,CAC1B;AACA,UAF0B,CAEd;AACZ,CACE;AACAJ,OAAO,CAAE,gDAFX,CAGEC,UAAU,CAAE,IAHd,CAH0B,EAQ1BI,MAR0B,CAQnBV,KAAK,CAACC,SAAN,CAAgBJ,CAAhB,CAAkBY,OARC,CAA5B,CASAT,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,GAA7B,CAAkC,SAAlC,CAA6C,CAC3C,eAAgB,CACd;AACAN,OAAO,CAAE,4BAFK,CAGdO,KAAK,CAAE,QAHO,CAD2B,CAA7C,EAOAZ,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,GAA7B,CAAkC,SAAlC,CAA6C,CAC3CE,QAAQ,CAAE,QADiC,CAA7C,EAGAb,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA6B,GAA7B,CAAkC,UAAlC,CAA8C,CAC5CG,QAAQ,CAAE,CACR;AACAT,OAAO,CAAE,qNAFD,CAGRO,KAAK,CAAE,UAHC,CADkC,CAA9C,EAOD"},"metadata":{},"sourceType":"module"}