{"ast":null,"code":"module.exports=function(hljs){var CPP_PRIMITIVE_TYPES={className:'keyword',begin:'\\\\b[a-z\\\\d_]*_t\\\\b'};var STRINGS={className:'string',variants:[{begin:'(u8?|U|L)?\"',end:'\"',illegal:'\\\\n',contains:[hljs.BACKSLASH_ESCAPE]},{begin:/(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\((?:.|\\n)*?\\)\\1\"/},{begin:'\\'\\\\\\\\?.',end:'\\'',illegal:'.'}]};var NUMBERS={className:'number',variants:[{begin:'\\\\b(0b[01\\']+)'},{begin:'(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)'},{begin:'(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)'}],relevance:0};var PREPROCESSOR={className:'meta',begin:/#\\s*[a-z]+\\b/,end:/$/,keywords:{'meta-keyword':'if else elif endif define undef warning error line '+'pragma ifdef ifndef include'},contains:[{begin:/\\\\\\n/,relevance:0},hljs.inherit(STRINGS,{className:'meta-string'}),{className:'meta-string',begin:/<[^\\n>]*>/,end:/$/,illegal:'\\\\n'},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE]};var FUNCTION_TITLE=hljs.IDENT_RE+'\\\\s*\\\\(';var CPP_KEYWORDS={keyword:'int float while private char catch import module export virtual operator sizeof '+'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace '+'unsigned long volatile static protected bool template mutable if public friend '+'do goto auto void enum else break extern using asm case typeid '+'short reinterpret_cast|10 default double register explicit signed typename try this '+'switch continue inline delete alignof constexpr decltype '+'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary '+'atomic_bool atomic_char atomic_schar '+'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong '+'atomic_ullong new throw return '+'and or not',built_in:'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream '+'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set '+'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos '+'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp '+'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper '+'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow '+'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp '+'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan '+'vfprintf vprintf vsprintf endl initializer_list unique_ptr',literal:'true false nullptr NULL'};var EXPRESSION_CONTAINS=[CPP_PRIMITIVE_TYPES,hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,NUMBERS,STRINGS];return{aliases:['c','cc','h','c++','h++','hpp','hh','hxx','cxx'],keywords:CPP_KEYWORDS,illegal:'</',contains:EXPRESSION_CONTAINS.concat([PREPROCESSOR,{begin:'\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<',end:'>',keywords:CPP_KEYWORDS,contains:['self',CPP_PRIMITIVE_TYPES]},{begin:hljs.IDENT_RE+'::',keywords:CPP_KEYWORDS},{// This mode covers expression context where we can't expect a function\n// definition and shouldn't highlight anything that looks like one:\n// `return some()`, `else if()`, `(x*sum(1, 2))`\nvariants:[{begin:/=/,end:/;/},{begin:/\\(/,end:/\\)/},{beginKeywords:'new throw return else',end:/;/}],keywords:CPP_KEYWORDS,contains:EXPRESSION_CONTAINS.concat([{begin:/\\(/,end:/\\)/,keywords:CPP_KEYWORDS,contains:EXPRESSION_CONTAINS.concat(['self']),relevance:0}]),relevance:0},{className:'function',begin:'('+hljs.IDENT_RE+'[\\\\*&\\\\s]+)+'+FUNCTION_TITLE,returnBegin:true,end:/[{;=]/,excludeEnd:true,keywords:CPP_KEYWORDS,illegal:/[^\\w\\s\\*&]/,contains:[{begin:FUNCTION_TITLE,returnBegin:true,contains:[hljs.TITLE_MODE],relevance:0},{className:'params',begin:/\\(/,end:/\\)/,keywords:CPP_KEYWORDS,relevance:0,contains:[hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRINGS,NUMBERS,CPP_PRIMITIVE_TYPES,// Count matching parentheses.\n{begin:/\\(/,end:/\\)/,keywords:CPP_KEYWORDS,relevance:0,contains:['self',hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,STRINGS,NUMBERS,CPP_PRIMITIVE_TYPES]}]},hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,PREPROCESSOR]},{className:'class',beginKeywords:'class struct',end:/[{;:]/,contains:[{begin:/</,end:/>/,contains:['self']},// skip generic stuff\nhljs.TITLE_MODE]}]),exports:{preprocessor:PREPROCESSOR,strings:STRINGS,keywords:CPP_KEYWORDS}};};","map":{"version":3,"names":["module","exports","hljs","CPP_PRIMITIVE_TYPES","className","begin","STRINGS","variants","end","illegal","contains","BACKSLASH_ESCAPE","NUMBERS","relevance","PREPROCESSOR","keywords","inherit","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE","FUNCTION_TITLE","IDENT_RE","CPP_KEYWORDS","keyword","built_in","literal","EXPRESSION_CONTAINS","aliases","concat","beginKeywords","returnBegin","excludeEnd","TITLE_MODE","preprocessor","strings"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/cpp.js"],"sourcesContent":["module.exports = function(hljs) {\n  var CPP_PRIMITIVE_TYPES = {\n    className: 'keyword',\n    begin: '\\\\b[a-z\\\\d_]*_t\\\\b'\n  };\n\n  var STRINGS = {\n    className: 'string',\n    variants: [\n      {\n        begin: '(u8?|U|L)?\"', end: '\"',\n        illegal: '\\\\n',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      { begin: /(?:u8?|U|L)?R\"([^()\\\\ ]{0,16})\\((?:.|\\n)*?\\)\\1\"/ },\n      {\n        begin: '\\'\\\\\\\\?.', end: '\\'',\n        illegal: '.'\n      }\n    ]\n  };\n\n  var NUMBERS = {\n    className: 'number',\n    variants: [\n      { begin: '\\\\b(0b[01\\']+)' },\n      { begin: '(-?)\\\\b([\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)(u|U|l|L|ul|UL|f|F|b|B)' },\n      { begin: '(-?)(\\\\b0[xX][a-fA-F0-9\\']+|(\\\\b[\\\\d\\']+(\\\\.[\\\\d\\']*)?|\\\\.[\\\\d\\']+)([eE][-+]?[\\\\d\\']+)?)' }\n    ],\n    relevance: 0\n  };\n\n  var PREPROCESSOR =       {\n    className: 'meta',\n    begin: /#\\s*[a-z]+\\b/, end: /$/,\n    keywords: {\n      'meta-keyword':\n        'if else elif endif define undef warning error line ' +\n        'pragma ifdef ifndef include'\n    },\n    contains: [\n      {\n        begin: /\\\\\\n/, relevance: 0\n      },\n      hljs.inherit(STRINGS, {className: 'meta-string'}),\n      {\n        className: 'meta-string',\n        begin: /<[^\\n>]*>/, end: /$/,\n        illegal: '\\\\n',\n      },\n      hljs.C_LINE_COMMENT_MODE,\n      hljs.C_BLOCK_COMMENT_MODE\n    ]\n  };\n\n  var FUNCTION_TITLE = hljs.IDENT_RE + '\\\\s*\\\\(';\n\n  var CPP_KEYWORDS = {\n    keyword: 'int float while private char catch import module export virtual operator sizeof ' +\n      'dynamic_cast|10 typedef const_cast|10 const for static_cast|10 union namespace ' +\n      'unsigned long volatile static protected bool template mutable if public friend ' +\n      'do goto auto void enum else break extern using asm case typeid ' +\n      'short reinterpret_cast|10 default double register explicit signed typename try this ' +\n      'switch continue inline delete alignof constexpr decltype ' +\n      'noexcept static_assert thread_local restrict _Bool complex _Complex _Imaginary ' +\n      'atomic_bool atomic_char atomic_schar ' +\n      'atomic_uchar atomic_short atomic_ushort atomic_int atomic_uint atomic_long atomic_ulong atomic_llong ' +\n      'atomic_ullong new throw return ' +\n      'and or not',\n    built_in: 'std string cin cout cerr clog stdin stdout stderr stringstream istringstream ostringstream ' +\n      'auto_ptr deque list queue stack vector map set bitset multiset multimap unordered_set ' +\n      'unordered_map unordered_multiset unordered_multimap array shared_ptr abort abs acos ' +\n      'asin atan2 atan calloc ceil cosh cos exit exp fabs floor fmod fprintf fputs free frexp ' +\n      'fscanf isalnum isalpha iscntrl isdigit isgraph islower isprint ispunct isspace isupper ' +\n      'isxdigit tolower toupper labs ldexp log10 log malloc realloc memchr memcmp memcpy memset modf pow ' +\n      'printf putchar puts scanf sinh sin snprintf sprintf sqrt sscanf strcat strchr strcmp ' +\n      'strcpy strcspn strlen strncat strncmp strncpy strpbrk strrchr strspn strstr tanh tan ' +\n      'vfprintf vprintf vsprintf endl initializer_list unique_ptr',\n    literal: 'true false nullptr NULL'\n  };\n\n  var EXPRESSION_CONTAINS = [\n    CPP_PRIMITIVE_TYPES,\n    hljs.C_LINE_COMMENT_MODE,\n    hljs.C_BLOCK_COMMENT_MODE,\n    NUMBERS,\n    STRINGS\n  ];\n\n  return {\n    aliases: ['c', 'cc', 'h', 'c++', 'h++', 'hpp', 'hh', 'hxx', 'cxx'],\n    keywords: CPP_KEYWORDS,\n    illegal: '</',\n    contains: EXPRESSION_CONTAINS.concat([\n      PREPROCESSOR,\n      {\n        begin: '\\\\b(deque|list|queue|stack|vector|map|set|bitset|multiset|multimap|unordered_map|unordered_set|unordered_multiset|unordered_multimap|array)\\\\s*<', end: '>',\n        keywords: CPP_KEYWORDS,\n        contains: ['self', CPP_PRIMITIVE_TYPES]\n      },\n      {\n        begin: hljs.IDENT_RE + '::',\n        keywords: CPP_KEYWORDS\n      },\n      {\n        // This mode covers expression context where we can't expect a function\n        // definition and shouldn't highlight anything that looks like one:\n        // `return some()`, `else if()`, `(x*sum(1, 2))`\n        variants: [\n          {begin: /=/, end: /;/},\n          {begin: /\\(/, end: /\\)/},\n          {beginKeywords: 'new throw return else', end: /;/}\n        ],\n        keywords: CPP_KEYWORDS,\n        contains: EXPRESSION_CONTAINS.concat([\n          {\n            begin: /\\(/, end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            contains: EXPRESSION_CONTAINS.concat(['self']),\n            relevance: 0\n          }\n        ]),\n        relevance: 0\n      },\n      {\n        className: 'function',\n        begin: '(' + hljs.IDENT_RE + '[\\\\*&\\\\s]+)+' + FUNCTION_TITLE,\n        returnBegin: true, end: /[{;=]/,\n        excludeEnd: true,\n        keywords: CPP_KEYWORDS,\n        illegal: /[^\\w\\s\\*&]/,\n        contains: [\n          {\n            begin: FUNCTION_TITLE, returnBegin: true,\n            contains: [hljs.TITLE_MODE],\n            relevance: 0\n          },\n          {\n            className: 'params',\n            begin: /\\(/, end: /\\)/,\n            keywords: CPP_KEYWORDS,\n            relevance: 0,\n            contains: [\n              hljs.C_LINE_COMMENT_MODE,\n              hljs.C_BLOCK_COMMENT_MODE,\n              STRINGS,\n              NUMBERS,\n              CPP_PRIMITIVE_TYPES,\n              // Count matching parentheses.\n              {\n                begin: /\\(/, end: /\\)/,\n                keywords: CPP_KEYWORDS,\n                relevance: 0,\n                contains: [\n                  'self',\n                  hljs.C_LINE_COMMENT_MODE,\n                  hljs.C_BLOCK_COMMENT_MODE,\n                  STRINGS,\n                  NUMBERS,\n                  CPP_PRIMITIVE_TYPES\n                ]\n              }\n            ]\n          },\n          hljs.C_LINE_COMMENT_MODE,\n          hljs.C_BLOCK_COMMENT_MODE,\n          PREPROCESSOR\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class struct', end: /[{;:]/,\n        contains: [\n          {begin: /</, end: />/, contains: ['self']}, // skip generic stuff\n          hljs.TITLE_MODE\n        ]\n      }\n    ]),\n    exports: {\n      preprocessor: PREPROCESSOR,\n      strings: STRINGS,\n      keywords: CPP_KEYWORDS\n    }\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}