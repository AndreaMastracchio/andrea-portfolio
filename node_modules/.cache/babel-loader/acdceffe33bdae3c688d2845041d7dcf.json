{"ast":null,"code":"'use strict';module.exports=ebnf;ebnf.displayName='ebnf';ebnf.aliases=[];function ebnf(Prism){Prism.languages.ebnf={comment:/\\(\\*[\\s\\S]*?\\*\\)/,string:{pattern:/\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,greedy:true},special:{pattern:/\\?[^?\\r\\n]*\\?/,greedy:true,alias:'class-name'},definition:{pattern:/^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,lookbehind:true,alias:['rule','keyword']},rule:/[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,punctuation:/\\([:/]|[:/]\\)|[.,;()[\\]{}]/,operator:/[-=|*/!]/};}","map":{"version":3,"names":["module","exports","ebnf","displayName","aliases","Prism","languages","comment","string","pattern","greedy","special","alias","definition","lookbehind","rule","punctuation","operator"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/ebnf.js"],"sourcesContent":["'use strict'\n\nmodule.exports = ebnf\nebnf.displayName = 'ebnf'\nebnf.aliases = []\nfunction ebnf(Prism) {\n  Prism.languages.ebnf = {\n    comment: /\\(\\*[\\s\\S]*?\\*\\)/,\n    string: {\n      pattern: /\"[^\"\\r\\n]*\"|'[^'\\r\\n]*'/,\n      greedy: true\n    },\n    special: {\n      pattern: /\\?[^?\\r\\n]*\\?/,\n      greedy: true,\n      alias: 'class-name'\n    },\n    definition: {\n      pattern: /^(\\s*)[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*(?=\\s*=)/im,\n      lookbehind: true,\n      alias: ['rule', 'keyword']\n    },\n    rule: /[a-z]\\w*(?:[ \\t]+[a-z]\\w*)*/i,\n    punctuation: /\\([:/]|[:/]\\)|[.,;()[\\]{}]/,\n    operator: /[-=|*/!]/\n  }\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,IAAjB,CACAA,IAAI,CAACC,WAAL,CAAmB,MAAnB,CACAD,IAAI,CAACE,OAAL,CAAe,EAAf,CACA,QAASF,KAAT,CAAcG,KAAd,CAAqB,CACnBA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAuB,CACrBK,OAAO,CAAE,kBADY,CAErBC,MAAM,CAAE,CACNC,OAAO,CAAE,yBADH,CAENC,MAAM,CAAE,IAFF,CAFa,CAMrBC,OAAO,CAAE,CACPF,OAAO,CAAE,eADF,CAEPC,MAAM,CAAE,IAFD,CAGPE,KAAK,CAAE,YAHA,CANY,CAWrBC,UAAU,CAAE,CACVJ,OAAO,CAAE,6CADC,CAEVK,UAAU,CAAE,IAFF,CAGVF,KAAK,CAAE,CAAC,MAAD,CAAS,SAAT,CAHG,CAXS,CAgBrBG,IAAI,CAAE,8BAhBe,CAiBrBC,WAAW,CAAE,4BAjBQ,CAkBrBC,QAAQ,CAAE,UAlBW,CAAvB,CAoBD"},"metadata":{},"sourceType":"module"}