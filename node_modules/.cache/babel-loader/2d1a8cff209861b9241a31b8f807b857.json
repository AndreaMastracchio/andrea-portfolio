{"ast":null,"code":"'use strict';var refractorMarkupTemplating=require('./markup-templating.js');module.exports=smarty;smarty.displayName='smarty';smarty.aliases=[];function smarty(Prism){Prism.register(refractorMarkupTemplating)/* TODO\nAdd support for variables inside double quoted strings\nAdd support for {php}\n*/;(function(Prism){Prism.languages.smarty={comment:/\\{\\*[\\s\\S]*?\\*\\}/,delimiter:{pattern:/^\\{|\\}$/i,alias:'punctuation'},string:/([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,number:/\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,variable:[/\\$(?!\\d)\\w+/,/#(?!\\d)\\w+#/,{pattern:/(\\.|->)(?!\\d)\\w+/,lookbehind:true},{pattern:/(\\[)(?!\\d)\\w+(?=\\])/,lookbehind:true}],function:[{pattern:/(\\|\\s*)@?(?!\\d)\\w+/,lookbehind:true},/^\\/?(?!\\d)\\w+/,/(?!\\d)\\w+(?=\\()/],'attr-name':{// Value is made optional because it may have already been tokenized\npattern:/\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,inside:{variable:{pattern:/(=\\s*)(?!\\d)\\w+/,lookbehind:true},operator:/=/}},punctuation:[/[\\[\\]().,:`]|->/],operator:[/[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,/\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,/\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/],keyword:/\\b(?:false|off|on|no|true|yes)\\b/};// Tokenize all inline Smarty expressions\nPrism.hooks.add('before-tokenize',function(env){var smartyPattern=/\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g;var smartyLitteralStart='{literal}';var smartyLitteralEnd='{/literal}';var smartyLitteralMode=false;Prism.languages['markup-templating'].buildPlaceholders(env,'smarty',smartyPattern,function(match){// Smarty tags inside {literal} block are ignored\nif(match===smartyLitteralEnd){smartyLitteralMode=false;}if(!smartyLitteralMode){if(match===smartyLitteralStart){smartyLitteralMode=true;}return true;}return false;});});// Re-insert the tokens after tokenizing\nPrism.hooks.add('after-tokenize',function(env){Prism.languages['markup-templating'].tokenizePlaceholders(env,'smarty');});})(Prism);}","map":{"version":3,"names":["refractorMarkupTemplating","require","module","exports","smarty","displayName","aliases","Prism","register","languages","comment","delimiter","pattern","alias","string","number","variable","lookbehind","function","inside","operator","punctuation","keyword","hooks","add","env","smartyPattern","smartyLitteralStart","smartyLitteralEnd","smartyLitteralMode","buildPlaceholders","match","tokenizePlaceholders"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/smarty.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = smarty\nsmarty.displayName = 'smarty'\nsmarty.aliases = []\nfunction smarty(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  /* TODO\nAdd support for variables inside double quoted strings\nAdd support for {php}\n*/\n  ;(function(Prism) {\n    Prism.languages.smarty = {\n      comment: /\\{\\*[\\s\\S]*?\\*\\}/,\n      delimiter: {\n        pattern: /^\\{|\\}$/i,\n        alias: 'punctuation'\n      },\n      string: /([\"'])(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n      variable: [\n        /\\$(?!\\d)\\w+/,\n        /#(?!\\d)\\w+#/,\n        {\n          pattern: /(\\.|->)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        {\n          pattern: /(\\[)(?!\\d)\\w+(?=\\])/,\n          lookbehind: true\n        }\n      ],\n      function: [\n        {\n          pattern: /(\\|\\s*)@?(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /^\\/?(?!\\d)\\w+/,\n        /(?!\\d)\\w+(?=\\()/\n      ],\n      'attr-name': {\n        // Value is made optional because it may have already been tokenized\n        pattern: /\\w+\\s*=\\s*(?:(?!\\d)\\w+)?/,\n        inside: {\n          variable: {\n            pattern: /(=\\s*)(?!\\d)\\w+/,\n            lookbehind: true\n          },\n          operator: /=/\n        }\n      },\n      punctuation: [/[\\[\\]().,:`]|->/],\n      operator: [\n        /[+\\-*\\/%]|==?=?|[!<>]=?|&&|\\|\\|?/,\n        /\\bis\\s+(?:not\\s+)?(?:div|even|odd)(?:\\s+by)?\\b/,\n        /\\b(?:eq|neq?|gt|lt|gt?e|lt?e|not|mod|or|and)\\b/\n      ],\n      keyword: /\\b(?:false|off|on|no|true|yes)\\b/\n    } // Tokenize all inline Smarty expressions\n    Prism.hooks.add('before-tokenize', function(env) {\n      var smartyPattern = /\\{\\*[\\s\\S]*?\\*\\}|\\{[\\s\\S]+?\\}/g\n      var smartyLitteralStart = '{literal}'\n      var smartyLitteralEnd = '{/literal}'\n      var smartyLitteralMode = false\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'smarty',\n        smartyPattern,\n        function(match) {\n          // Smarty tags inside {literal} block are ignored\n          if (match === smartyLitteralEnd) {\n            smartyLitteralMode = false\n          }\n          if (!smartyLitteralMode) {\n            if (match === smartyLitteralStart) {\n              smartyLitteralMode = true\n            }\n            return true\n          }\n          return false\n        }\n      )\n    }) // Re-insert the tokens after tokenizing\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'smarty')\n    })\n  })(Prism)\n}\n"],"mappings":"AAAA,aACA,GAAIA,0BAAyB,CAAGC,OAAO,CAAC,wBAAD,CAAvC,CACAC,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,EAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrBA,KAAK,CAACC,QAAN,CAAeR,yBAAf,CACA;AACF;AACA;AACA,EAJE,CAKC,CAAC,SAASO,KAAT,CAAgB,CAChBA,KAAK,CAACE,SAAN,CAAgBL,MAAhB,CAAyB,CACvBM,OAAO,CAAE,kBADc,CAEvBC,SAAS,CAAE,CACTC,OAAO,CAAE,UADA,CAETC,KAAK,CAAE,aAFE,CAFY,CAMvBC,MAAM,CAAE,kCANe,CAOvBC,MAAM,CAAE,0DAPe,CAQvBC,QAAQ,CAAE,CACR,aADQ,CAER,aAFQ,CAGR,CACEJ,OAAO,CAAE,kBADX,CAEEK,UAAU,CAAE,IAFd,CAHQ,CAOR,CACEL,OAAO,CAAE,qBADX,CAEEK,UAAU,CAAE,IAFd,CAPQ,CARa,CAoBvBC,QAAQ,CAAE,CACR,CACEN,OAAO,CAAE,oBADX,CAEEK,UAAU,CAAE,IAFd,CADQ,CAKR,eALQ,CAMR,iBANQ,CApBa,CA4BvB,YAAa,CACX;AACAL,OAAO,CAAE,0BAFE,CAGXO,MAAM,CAAE,CACNH,QAAQ,CAAE,CACRJ,OAAO,CAAE,iBADD,CAERK,UAAU,CAAE,IAFJ,CADJ,CAKNG,QAAQ,CAAE,GALJ,CAHG,CA5BU,CAuCvBC,WAAW,CAAE,CAAC,iBAAD,CAvCU,CAwCvBD,QAAQ,CAAE,CACR,kCADQ,CAER,gDAFQ,CAGR,gDAHQ,CAxCa,CA6CvBE,OAAO,CAAE,kCA7Cc,CAAzB,CA8CE;AACFf,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,CAAmC,SAASC,GAAT,CAAc,CAC/C,GAAIC,cAAa,CAAG,gCAApB,CACA,GAAIC,oBAAmB,CAAG,WAA1B,CACA,GAAIC,kBAAiB,CAAG,YAAxB,CACA,GAAIC,mBAAkB,CAAG,KAAzB,CACAtB,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCqB,iBAArC,CACEL,GADF,CAEE,QAFF,CAGEC,aAHF,CAIE,SAASK,KAAT,CAAgB,CACd;AACA,GAAIA,KAAK,GAAKH,iBAAd,CAAiC,CAC/BC,kBAAkB,CAAG,KAArB,CACD,CACD,GAAI,CAACA,kBAAL,CAAyB,CACvB,GAAIE,KAAK,GAAKJ,mBAAd,CAAmC,CACjCE,kBAAkB,CAAG,IAArB,CACD,CACD,MAAO,KAAP,CACD,CACD,MAAO,MAAP,CACD,CAhBH,EAkBD,CAvBD,EAuBG;AACHtB,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,CAAkC,SAASC,GAAT,CAAc,CAC9ClB,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCuB,oBAArC,CAA0DP,GAA1D,CAA+D,QAA/D,EACD,CAFD,EAGD,CA3EA,EA2EElB,KA3EF,EA4EF"},"metadata":{},"sourceType":"module"}