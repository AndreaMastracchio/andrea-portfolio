{"ast":null,"code":"'use strict';module.exports=makefile;makefile.displayName='makefile';makefile.aliases=[];function makefile(Prism){Prism.languages.makefile={comment:{pattern:/(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,lookbehind:true},string:{pattern:/([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:true},// Built-in target names\nbuiltin:/\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,// Targets\nsymbol:{pattern:/^[^:=\\r\\n]+(?=\\s*:(?!=))/m,inside:{variable:/\\$+(?:[^(){}:#=\\s]+|(?=[({]))/}},variable:/\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,keyword:[// Directives\n/-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/,// Functions\n{pattern:/(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,lookbehind:true}],operator:/(?:::|[?:+!])?=|[|@]/,punctuation:/[:;(){}]/};}","map":{"version":3,"names":["module","exports","makefile","displayName","aliases","Prism","languages","comment","pattern","lookbehind","string","greedy","builtin","symbol","inside","variable","keyword","operator","punctuation"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/makefile.js"],"sourcesContent":["'use strict'\n\nmodule.exports = makefile\nmakefile.displayName = 'makefile'\nmakefile.aliases = []\nfunction makefile(Prism) {\n  Prism.languages.makefile = {\n    comment: {\n      pattern: /(^|[^\\\\])#(?:\\\\(?:\\r\\n|[\\s\\S])|[^\\\\\\r\\n])*/,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n      greedy: true\n    },\n    // Built-in target names\n    builtin: /\\.[A-Z][^:#=\\s]+(?=\\s*:(?!=))/,\n    // Targets\n    symbol: {\n      pattern: /^[^:=\\r\\n]+(?=\\s*:(?!=))/m,\n      inside: {\n        variable: /\\$+(?:[^(){}:#=\\s]+|(?=[({]))/\n      }\n    },\n    variable: /\\$+(?:[^(){}:#=\\s]+|\\([@*%<^+?][DF]\\)|(?=[({]))/,\n    keyword: [\n      // Directives\n      /-include\\b|\\b(?:define|else|endef|endif|export|ifn?def|ifn?eq|include|override|private|sinclude|undefine|unexport|vpath)\\b/, // Functions\n      {\n        pattern: /(\\()(?:addsuffix|abspath|and|basename|call|dir|error|eval|file|filter(?:-out)?|findstring|firstword|flavor|foreach|guile|if|info|join|lastword|load|notdir|or|origin|patsubst|realpath|shell|sort|strip|subst|suffix|value|warning|wildcard|word(?:s|list)?)(?=[ \\t])/,\n        lookbehind: true\n      }\n    ],\n    operator: /(?:::|[?:+!])?=|[|@]/,\n    punctuation: /[:;(){}]/\n  }\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,QAAjB,CACAA,QAAQ,CAACC,WAAT,CAAuB,UAAvB,CACAD,QAAQ,CAACE,OAAT,CAAmB,EAAnB,CACA,QAASF,SAAT,CAAkBG,KAAlB,CAAyB,CACvBA,KAAK,CAACC,SAAN,CAAgBJ,QAAhB,CAA2B,CACzBK,OAAO,CAAE,CACPC,OAAO,CAAE,4CADF,CAEPC,UAAU,CAAE,IAFL,CADgB,CAKzBC,MAAM,CAAE,CACNF,OAAO,CAAE,gDADH,CAENG,MAAM,CAAE,IAFF,CALiB,CASzB;AACAC,OAAO,CAAE,+BAVgB,CAWzB;AACAC,MAAM,CAAE,CACNL,OAAO,CAAE,2BADH,CAENM,MAAM,CAAE,CACNC,QAAQ,CAAE,+BADJ,CAFF,CAZiB,CAkBzBA,QAAQ,CAAE,iDAlBe,CAmBzBC,OAAO,CAAE,CACP;AACA,4HAFO,CAEuH;AAC9H,CACER,OAAO,CAAE,uQADX,CAEEC,UAAU,CAAE,IAFd,CAHO,CAnBgB,CA2BzBQ,QAAQ,CAAE,sBA3Be,CA4BzBC,WAAW,CAAE,UA5BY,CAA3B,CA8BD"},"metadata":{},"sourceType":"module"}