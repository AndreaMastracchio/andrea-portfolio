{"ast":null,"code":"'use strict';module.exports=perl;perl.displayName='perl';perl.aliases=[];function perl(Prism){Prism.languages.perl={comment:[{// POD\npattern:/(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,lookbehind:true},{pattern:/(^|[^\\\\$])#.*/,lookbehind:true}],// TODO Could be nice to handle Heredoc too.\nstring:[// q/.../\n{pattern:/\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:true},// q a...a\n{pattern:/\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:true},// q(...)\n{pattern:/\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:true},// q{...}\n{pattern:/\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,greedy:true},// q[...]\n{pattern:/\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:true},// q<...>\n{pattern:/\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:true},// \"...\", `...`\n{pattern:/(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:true},// '...'\n// FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n{pattern:/'(?:[^'\\\\\\r\\n]|\\\\.)*'/,greedy:true}],regex:[// m/.../\n{pattern:/\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,greedy:true},// m a...a\n{pattern:/\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,greedy:true},// m(...)\n{pattern:/\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,greedy:true},// m{...}\n{pattern:/\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,greedy:true},// m[...]\n{pattern:/\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,greedy:true},// m<...>\n{pattern:/\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,greedy:true},// The lookbehinds prevent -s from breaking\n// FIXME We don't handle change of separator like s(...)[...]\n// s/.../.../\n{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,lookbehind:true,greedy:true},// s a...a...a\n{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,lookbehind:true,greedy:true},// s(...)(...)\n{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,lookbehind:true,greedy:true},// s{...}{...}\n{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,lookbehind:true,greedy:true},// s[...][...]\n{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,lookbehind:true,greedy:true},// s<...><...>\n{pattern:/(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,lookbehind:true,greedy:true},// /.../\n// The look-ahead tries to prevent two divisions on\n// the same line from being highlighted as regex.\n// This does not support multi-line regex.\n{pattern:/\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,greedy:true}],// FIXME Not sure about the handling of ::, ', and #\nvariable:[// ${^POSTMATCH}\n/[&*$@%]\\{\\^[A-Z]+\\}/,// $^V\n/[&*$@%]\\^[A-Z_]/,// ${...}\n/[&*$@%]#?(?=\\{)/,// $foo\n/[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i,// $1\n/[&*$@%]\\d+/,// $_, @_, %!\n// The negative lookahead prevents from breaking the %= operator\n/(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/],filehandle:{// <>, <FOO>, _\npattern:/<(?![<=])\\S*>|\\b_\\b/,alias:'symbol'},vstring:{// v1.2, 1.2.3\npattern:/v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,alias:'string'},function:{pattern:/sub [a-z0-9_]+/i,inside:{keyword:/sub/}},keyword:/\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,number:/\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,operator:/-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,punctuation:/[{}[\\];(),:]/};}","map":{"version":3,"names":["module","exports","perl","displayName","aliases","Prism","languages","comment","pattern","lookbehind","string","greedy","regex","variable","filehandle","alias","vstring","function","inside","keyword","number","operator","punctuation"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/perl.js"],"sourcesContent":["'use strict'\n\nmodule.exports = perl\nperl.displayName = 'perl'\nperl.aliases = []\nfunction perl(Prism) {\n  Prism.languages.perl = {\n    comment: [\n      {\n        // POD\n        pattern: /(^\\s*)=\\w+[\\s\\S]*?=cut.*/m,\n        lookbehind: true\n      },\n      {\n        pattern: /(^|[^\\\\$])#.*/,\n        lookbehind: true\n      }\n    ],\n    // TODO Could be nice to handle Heredoc too.\n    string: [\n      // q/.../\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      }, // q a...a\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      }, // q(...)\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true\n      }, // q{...}\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}/,\n        greedy: true\n      }, // q[...]\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true\n      }, // q<...>\n      {\n        pattern: /\\b(?:q|qq|qx|qw)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true\n      }, // \"...\", `...`\n      {\n        pattern: /(\"|`)(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true\n      }, // '...'\n      // FIXME Multi-line single-quoted strings are not supported as they would break variables containing '\n      {\n        pattern: /'(?:[^'\\\\\\r\\n]|\\\\.)*'/,\n        greedy: true\n      }\n    ],\n    regex: [\n      // m/.../\n      {\n        pattern: /\\b(?:m|qr)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      }, // m a...a\n      {\n        pattern: /\\b(?:m|qr)\\s+([a-zA-Z0-9])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[msixpodualngc]*/,\n        greedy: true\n      }, // m(...)\n      {\n        pattern: /\\b(?:m|qr)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngc]*/,\n        greedy: true\n      }, // m{...}\n      {\n        pattern: /\\b(?:m|qr)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngc]*/,\n        greedy: true\n      }, // m[...]\n      {\n        pattern: /\\b(?:m|qr)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngc]*/,\n        greedy: true\n      }, // m<...>\n      {\n        pattern: /\\b(?:m|qr)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngc]*/,\n        greedy: true\n      }, // The lookbehinds prevent -s from breaking\n      // FIXME We don't handle change of separator like s(...)[...]\n      // s/.../.../\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s a...a...a\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s+([a-zA-Z0-9])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s(...)(...)\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)\\s*\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s{...}{...}\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}\\s*\\{(?:[^{}\\\\]|\\\\[\\s\\S])*\\}[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s[...][...]\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\]\\s*\\[(?:[^[\\]\\\\]|\\\\[\\s\\S])*\\][msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // s<...><...>\n      {\n        pattern: /(^|[^-]\\b)(?:s|tr|y)\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>\\s*<(?:[^<>\\\\]|\\\\[\\s\\S])*>[msixpodualngcer]*/,\n        lookbehind: true,\n        greedy: true\n      }, // /.../\n      // The look-ahead tries to prevent two divisions on\n      // the same line from being highlighted as regex.\n      // This does not support multi-line regex.\n      {\n        pattern: /\\/(?:[^\\/\\\\\\r\\n]|\\\\.)*\\/[msixpodualngc]*(?=\\s*(?:$|[\\r\\n,.;})&|\\-+*~<>!?^]|(lt|gt|le|ge|eq|ne|cmp|not|and|or|xor|x)\\b))/,\n        greedy: true\n      }\n    ],\n    // FIXME Not sure about the handling of ::, ', and #\n    variable: [\n      // ${^POSTMATCH}\n      /[&*$@%]\\{\\^[A-Z]+\\}/, // $^V\n      /[&*$@%]\\^[A-Z_]/, // ${...}\n      /[&*$@%]#?(?=\\{)/, // $foo\n      /[&*$@%]#?(?:(?:::)*'?(?!\\d)[\\w$]+)+(?:::)*/i, // $1\n      /[&*$@%]\\d+/, // $_, @_, %!\n      // The negative lookahead prevents from breaking the %= operator\n      /(?!%=)[$@%][!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~]/\n    ],\n    filehandle: {\n      // <>, <FOO>, _\n      pattern: /<(?![<=])\\S*>|\\b_\\b/,\n      alias: 'symbol'\n    },\n    vstring: {\n      // v1.2, 1.2.3\n      pattern: /v\\d+(?:\\.\\d+)*|\\d+(?:\\.\\d+){2,}/,\n      alias: 'string'\n    },\n    function: {\n      pattern: /sub [a-z0-9_]+/i,\n      inside: {\n        keyword: /sub/\n      }\n    },\n    keyword: /\\b(?:any|break|continue|default|delete|die|do|else|elsif|eval|for|foreach|given|goto|if|last|local|my|next|our|package|print|redo|require|return|say|state|sub|switch|undef|unless|until|use|when|while)\\b/,\n    number: /\\b(?:0x[\\dA-Fa-f](?:_?[\\dA-Fa-f])*|0b[01](?:_?[01])*|(?:\\d(?:_?\\d)*)?\\.?\\d(?:_?\\d)*(?:[Ee][+-]?\\d+)?)\\b/,\n    operator: /-[rwxoRWXOezsfdlpSbctugkTBMAC]\\b|\\+[+=]?|-[-=>]?|\\*\\*?=?|\\/\\/?=?|=[=~>]?|~[~=]?|\\|\\|?=?|&&?=?|<(?:=>?|<=?)?|>>?=?|![~=]?|[%^]=?|\\.(?:=|\\.\\.?)?|[\\\\?]|\\bx(?:=|\\b)|\\b(?:lt|gt|le|ge|eq|ne|cmp|not|and|or|xor)\\b/,\n    punctuation: /[{}[\\];(),:]/\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}