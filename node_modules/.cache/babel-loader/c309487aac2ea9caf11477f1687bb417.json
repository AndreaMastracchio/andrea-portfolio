{"ast":null,"code":"'use strict';module.exports=qore;qore.displayName='qore';qore.aliases=[];function qore(Prism){Prism.languages.qore=Prism.languages.extend('clike',{comment:{pattern:/(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,lookbehind:true},// Overridden to allow unescaped multi-line strings\nstring:{pattern:/(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,greedy:true},variable:/\\$(?!\\d)\\w+\\b/,keyword:/\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,number:/\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,boolean:/\\b(?:true|false)\\b/i,operator:{pattern:/(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,lookbehind:true},function:/\\$?\\b(?!\\d)\\w+(?=\\()/});}","map":{"version":3,"names":["module","exports","qore","displayName","aliases","Prism","languages","extend","comment","pattern","lookbehind","string","greedy","variable","keyword","number","boolean","operator","function"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/qore.js"],"sourcesContent":["'use strict'\n\nmodule.exports = qore\nqore.displayName = 'qore'\nqore.aliases = []\nfunction qore(Prism) {\n  Prism.languages.qore = Prism.languages.extend('clike', {\n    comment: {\n      pattern: /(^|[^\\\\])(?:\\/\\*[\\s\\S]*?\\*\\/|(?:\\/\\/|#).*)/,\n      lookbehind: true\n    },\n    // Overridden to allow unescaped multi-line strings\n    string: {\n      pattern: /(\"|')(\\\\[\\s\\S]|(?!\\1)[^\\\\])*\\1/,\n      greedy: true\n    },\n    variable: /\\$(?!\\d)\\w+\\b/,\n    keyword: /\\b(?:abstract|any|assert|binary|bool|boolean|break|byte|case|catch|char|class|code|const|continue|data|default|do|double|else|enum|extends|final|finally|float|for|goto|hash|if|implements|import|inherits|instanceof|int|interface|long|my|native|new|nothing|null|object|our|own|private|reference|rethrow|return|short|soft(?:int|float|number|bool|string|date|list)|static|strictfp|string|sub|super|switch|synchronized|this|throw|throws|transient|try|void|volatile|while)\\b/,\n    number: /\\b(?:0b[01]+|0x[\\da-f]*\\.?[\\da-fp\\-]+|\\d*\\.?\\d+e?\\d*[df]|\\d*\\.?\\d+)\\b/i,\n    boolean: /\\b(?:true|false)\\b/i,\n    operator: {\n      pattern: /(^|[^.])(?:\\+[+=]?|-[-=]?|[!=](?:==?|~)?|>>?=?|<(?:=>?|<=?)?|&[&=]?|\\|[|=]?|[*\\/%^]=?|[~?])/,\n      lookbehind: true\n    },\n    function: /\\$?\\b(?!\\d)\\w+(?=\\()/\n  })\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,IAAjB,CACAA,IAAI,CAACC,WAAL,CAAmB,MAAnB,CACAD,IAAI,CAACE,OAAL,CAAe,EAAf,CACA,QAASF,KAAT,CAAcG,KAAd,CAAqB,CACnBA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAuBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,CAAgC,CACrDC,OAAO,CAAE,CACPC,OAAO,CAAE,4CADF,CAEPC,UAAU,CAAE,IAFL,CAD4C,CAKrD;AACAC,MAAM,CAAE,CACNF,OAAO,CAAE,gCADH,CAENG,MAAM,CAAE,IAFF,CAN6C,CAUrDC,QAAQ,CAAE,eAV2C,CAWrDC,OAAO,CAAE,sdAX4C,CAYrDC,MAAM,CAAE,wEAZ6C,CAarDC,OAAO,CAAE,qBAb4C,CAcrDC,QAAQ,CAAE,CACRR,OAAO,CAAE,6FADD,CAERC,UAAU,CAAE,IAFJ,CAd2C,CAkBrDQ,QAAQ,CAAE,sBAlB2C,CAAhC,CAAvB,CAoBD"},"metadata":{},"sourceType":"module"}