{"ast":null,"code":"'use strict';module.exports=twig;twig.displayName='twig';twig.aliases=[];function twig(Prism){Prism.languages.twig={comment:/\\{#[\\s\\S]*?#\\}/,tag:{pattern:/\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,inside:{ld:{pattern:/^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,inside:{punctuation:/^(?:\\{\\{|\\{%)-?/,keyword:/\\w+/}},rd:{pattern:/-?(?:%\\}|\\}\\})$/,inside:{punctuation:/.+/}},string:{pattern:/(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,inside:{punctuation:/^['\"]|['\"]$/}},keyword:/\\b(?:even|if|odd)\\b/,boolean:/\\b(?:true|false|null)\\b/,number:/\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,operator:[{pattern:/(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,lookbehind:true},/[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/],property:/\\b[a-zA-Z_]\\w*\\b/,punctuation:/[()\\[\\]{}:.,]/}},// The rest can be parsed as HTML\nother:{// We want non-blank matches\npattern:/\\S(?:[\\s\\S]*\\S)?/,inside:Prism.languages.markup}};}","map":{"version":3,"names":["module","exports","twig","displayName","aliases","Prism","languages","comment","tag","pattern","inside","ld","punctuation","keyword","rd","string","boolean","number","operator","lookbehind","property","other","markup"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/twig.js"],"sourcesContent":["'use strict'\n\nmodule.exports = twig\ntwig.displayName = 'twig'\ntwig.aliases = []\nfunction twig(Prism) {\n  Prism.languages.twig = {\n    comment: /\\{#[\\s\\S]*?#\\}/,\n    tag: {\n      pattern: /\\{\\{[\\s\\S]*?\\}\\}|\\{%[\\s\\S]*?%\\}/,\n      inside: {\n        ld: {\n          pattern: /^(?:\\{\\{-?|\\{%-?\\s*\\w+)/,\n          inside: {\n            punctuation: /^(?:\\{\\{|\\{%)-?/,\n            keyword: /\\w+/\n          }\n        },\n        rd: {\n          pattern: /-?(?:%\\}|\\}\\})$/,\n          inside: {\n            punctuation: /.+/\n          }\n        },\n        string: {\n          pattern: /(\"|')(?:\\\\.|(?!\\1)[^\\\\\\r\\n])*\\1/,\n          inside: {\n            punctuation: /^['\"]|['\"]$/\n          }\n        },\n        keyword: /\\b(?:even|if|odd)\\b/,\n        boolean: /\\b(?:true|false|null)\\b/,\n        number: /\\b0x[\\dA-Fa-f]+|(?:\\b\\d+\\.?\\d*|\\B\\.\\d+)(?:[Ee][-+]?\\d+)?/,\n        operator: [\n          {\n            pattern: /(\\s)(?:and|b-and|b-xor|b-or|ends with|in|is|matches|not|or|same as|starts with)(?=\\s)/,\n            lookbehind: true\n          },\n          /[=<>]=?|!=|\\*\\*?|\\/\\/?|\\?:?|[-+~%|]/\n        ],\n        property: /\\b[a-zA-Z_]\\w*\\b/,\n        punctuation: /[()\\[\\]{}:.,]/\n      }\n    },\n    // The rest can be parsed as HTML\n    other: {\n      // We want non-blank matches\n      pattern: /\\S(?:[\\s\\S]*\\S)?/,\n      inside: Prism.languages.markup\n    }\n  }\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,IAAjB,CACAA,IAAI,CAACC,WAAL,CAAmB,MAAnB,CACAD,IAAI,CAACE,OAAL,CAAe,EAAf,CACA,QAASF,KAAT,CAAcG,KAAd,CAAqB,CACnBA,KAAK,CAACC,SAAN,CAAgBJ,IAAhB,CAAuB,CACrBK,OAAO,CAAE,gBADY,CAErBC,GAAG,CAAE,CACHC,OAAO,CAAE,iCADN,CAEHC,MAAM,CAAE,CACNC,EAAE,CAAE,CACFF,OAAO,CAAE,yBADP,CAEFC,MAAM,CAAE,CACNE,WAAW,CAAE,iBADP,CAENC,OAAO,CAAE,KAFH,CAFN,CADE,CAQNC,EAAE,CAAE,CACFL,OAAO,CAAE,iBADP,CAEFC,MAAM,CAAE,CACNE,WAAW,CAAE,IADP,CAFN,CARE,CAcNG,MAAM,CAAE,CACNN,OAAO,CAAE,iCADH,CAENC,MAAM,CAAE,CACNE,WAAW,CAAE,aADP,CAFF,CAdF,CAoBNC,OAAO,CAAE,qBApBH,CAqBNG,OAAO,CAAE,yBArBH,CAsBNC,MAAM,CAAE,0DAtBF,CAuBNC,QAAQ,CAAE,CACR,CACET,OAAO,CAAE,uFADX,CAEEU,UAAU,CAAE,IAFd,CADQ,CAKR,qCALQ,CAvBJ,CA8BNC,QAAQ,CAAE,kBA9BJ,CA+BNR,WAAW,CAAE,eA/BP,CAFL,CAFgB,CAsCrB;AACAS,KAAK,CAAE,CACL;AACAZ,OAAO,CAAE,kBAFJ,CAGLC,MAAM,CAAEL,KAAK,CAACC,SAAN,CAAgBgB,MAHnB,CAvCc,CAAvB,CA6CD"},"metadata":{},"sourceType":"module"}