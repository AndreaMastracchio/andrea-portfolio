{"ast":null,"code":"'use strict';var refractorMarkupTemplating=require('./markup-templating.js');module.exports=tt2;tt2.displayName='tt2';tt2.aliases=[];function tt2(Prism){Prism.register(refractorMarkupTemplating);(function(Prism){Prism.languages.tt2=Prism.languages.extend('clike',{comment:/#.*|\\[%#[\\s\\S]*?%\\]/,keyword:/\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,punctuation:/[[\\]{},()]/});Prism.languages.insertBefore('tt2','number',{operator:/=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,variable:{pattern:/[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i}});Prism.languages.insertBefore('tt2','keyword',{delimiter:{pattern:/^(?:\\[%|%%)-?|-?%]$/,alias:'punctuation'}});Prism.languages.insertBefore('tt2','string',{'single-quoted-string':{pattern:/'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,greedy:true,alias:'string'},'double-quoted-string':{pattern:/\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,greedy:true,alias:'string',inside:{variable:{pattern:/\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i}}}});// The different types of TT2 strings \"replace\" the C-like standard string\ndelete Prism.languages.tt2.string;Prism.hooks.add('before-tokenize',function(env){var tt2Pattern=/\\[%[\\s\\S]+?%\\]/g;Prism.languages['markup-templating'].buildPlaceholders(env,'tt2',tt2Pattern);});Prism.hooks.add('after-tokenize',function(env){Prism.languages['markup-templating'].tokenizePlaceholders(env,'tt2');});})(Prism);}","map":{"version":3,"names":["refractorMarkupTemplating","require","module","exports","tt2","displayName","aliases","Prism","register","languages","extend","comment","keyword","punctuation","insertBefore","operator","variable","pattern","delimiter","alias","greedy","inside","string","hooks","add","env","tt2Pattern","buildPlaceholders","tokenizePlaceholders"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/tt2.js"],"sourcesContent":["'use strict'\nvar refractorMarkupTemplating = require('./markup-templating.js')\nmodule.exports = tt2\ntt2.displayName = 'tt2'\ntt2.aliases = []\nfunction tt2(Prism) {\n  Prism.register(refractorMarkupTemplating)\n  ;(function(Prism) {\n    Prism.languages.tt2 = Prism.languages.extend('clike', {\n      comment: /#.*|\\[%#[\\s\\S]*?%\\]/,\n      keyword: /\\b(?:BLOCK|CALL|CASE|CATCH|CLEAR|DEBUG|DEFAULT|ELSE|ELSIF|END|FILTER|FINAL|FOREACH|GET|IF|IN|INCLUDE|INSERT|LAST|MACRO|META|NEXT|PERL|PROCESS|RAWPERL|RETURN|SET|STOP|TAGS|THROW|TRY|SWITCH|UNLESS|USE|WHILE|WRAPPER)\\b/,\n      punctuation: /[[\\]{},()]/\n    })\n    Prism.languages.insertBefore('tt2', 'number', {\n      operator: /=[>=]?|!=?|<=?|>=?|&&|\\|\\|?|\\b(?:and|or|not)\\b/,\n      variable: {\n        pattern: /[a-z]\\w*(?:\\s*\\.\\s*(?:\\d+|\\$?[a-z]\\w*))*/i\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'keyword', {\n      delimiter: {\n        pattern: /^(?:\\[%|%%)-?|-?%]$/,\n        alias: 'punctuation'\n      }\n    })\n    Prism.languages.insertBefore('tt2', 'string', {\n      'single-quoted-string': {\n        pattern: /'[^\\\\']*(?:\\\\[\\s\\S][^\\\\']*)*'/,\n        greedy: true,\n        alias: 'string'\n      },\n      'double-quoted-string': {\n        pattern: /\"[^\\\\\"]*(?:\\\\[\\s\\S][^\\\\\"]*)*\"/,\n        greedy: true,\n        alias: 'string',\n        inside: {\n          variable: {\n            pattern: /\\$(?:[a-z]\\w*(?:\\.(?:\\d+|\\$?[a-z]\\w*))*)/i\n          }\n        }\n      }\n    }) // The different types of TT2 strings \"replace\" the C-like standard string\n    delete Prism.languages.tt2.string\n    Prism.hooks.add('before-tokenize', function(env) {\n      var tt2Pattern = /\\[%[\\s\\S]+?%\\]/g\n      Prism.languages['markup-templating'].buildPlaceholders(\n        env,\n        'tt2',\n        tt2Pattern\n      )\n    })\n    Prism.hooks.add('after-tokenize', function(env) {\n      Prism.languages['markup-templating'].tokenizePlaceholders(env, 'tt2')\n    })\n  })(Prism)\n}\n"],"mappings":"AAAA,aACA,GAAIA,0BAAyB,CAAGC,OAAO,CAAC,wBAAD,CAAvC,CACAC,MAAM,CAACC,OAAP,CAAiBC,GAAjB,CACAA,GAAG,CAACC,WAAJ,CAAkB,KAAlB,CACAD,GAAG,CAACE,OAAJ,CAAc,EAAd,CACA,QAASF,IAAT,CAAaG,KAAb,CAAoB,CAClBA,KAAK,CAACC,QAAN,CAAeR,yBAAf,EACC,CAAC,SAASO,KAAT,CAAgB,CAChBA,KAAK,CAACE,SAAN,CAAgBL,GAAhB,CAAsBG,KAAK,CAACE,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,CAAgC,CACpDC,OAAO,CAAE,qBAD2C,CAEpDC,OAAO,CAAE,yNAF2C,CAGpDC,WAAW,CAAE,YAHuC,CAAhC,CAAtB,CAKAN,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,KAA7B,CAAoC,QAApC,CAA8C,CAC5CC,QAAQ,CAAE,gDADkC,CAE5CC,QAAQ,CAAE,CACRC,OAAO,CAAE,2CADD,CAFkC,CAA9C,EAMAV,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,KAA7B,CAAoC,SAApC,CAA+C,CAC7CI,SAAS,CAAE,CACTD,OAAO,CAAE,qBADA,CAETE,KAAK,CAAE,aAFE,CADkC,CAA/C,EAMAZ,KAAK,CAACE,SAAN,CAAgBK,YAAhB,CAA6B,KAA7B,CAAoC,QAApC,CAA8C,CAC5C,uBAAwB,CACtBG,OAAO,CAAE,+BADa,CAEtBG,MAAM,CAAE,IAFc,CAGtBD,KAAK,CAAE,QAHe,CADoB,CAM5C,uBAAwB,CACtBF,OAAO,CAAE,+BADa,CAEtBG,MAAM,CAAE,IAFc,CAGtBD,KAAK,CAAE,QAHe,CAItBE,MAAM,CAAE,CACNL,QAAQ,CAAE,CACRC,OAAO,CAAE,2CADD,CADJ,CAJc,CANoB,CAA9C,EAgBG;AACH,MAAOV,MAAK,CAACE,SAAN,CAAgBL,GAAhB,CAAoBkB,MAA3B,CACAf,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,iBAAhB,CAAmC,SAASC,GAAT,CAAc,CAC/C,GAAIC,WAAU,CAAG,iBAAjB,CACAnB,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCkB,iBAArC,CACEF,GADF,CAEE,KAFF,CAGEC,UAHF,EAKD,CAPD,EAQAnB,KAAK,CAACgB,KAAN,CAAYC,GAAZ,CAAgB,gBAAhB,CAAkC,SAASC,GAAT,CAAc,CAC9ClB,KAAK,CAACE,SAAN,CAAgB,mBAAhB,EAAqCmB,oBAArC,CAA0DH,GAA1D,CAA+D,KAA/D,EACD,CAFD,EAGD,CA/CA,EA+CElB,KA/CF,EAgDF"},"metadata":{},"sourceType":"module"}