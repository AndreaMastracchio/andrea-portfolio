{"ast":null,"code":"module.exports=function(hljs){return{keywords:'environ vocabularies notations constructors definitions '+'registrations theorems schemes requirements begin end definition '+'registration cluster existence pred func defpred deffunc theorem '+'proof let take assume then thus hence ex for st holds consider '+'reconsider such that and in provided of as from be being by means '+'equals implies iff redefine define now not or attr is mode '+'suppose per cases set thesis contradiction scheme reserve struct '+'correctness compatibility coherence symmetry assymetry '+'reflexivity irreflexivity connectedness uniqueness commutativity '+'idempotence involutiveness projectivity',contains:[hljs.COMMENT('::','$')]};};","map":{"version":3,"names":["module","exports","hljs","keywords","contains","COMMENT"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/mizar.js"],"sourcesContent":["module.exports = function(hljs) {\n  return {\n    keywords:\n      'environ vocabularies notations constructors definitions ' +\n      'registrations theorems schemes requirements begin end definition ' +\n      'registration cluster existence pred func defpred deffunc theorem ' +\n      'proof let take assume then thus hence ex for st holds consider ' +\n      'reconsider such that and in provided of as from be being by means ' +\n      'equals implies iff redefine define now not or attr is mode ' +\n      'suppose per cases set thesis contradiction scheme reserve struct ' +\n      'correctness compatibility coherence symmetry assymetry ' +\n      'reflexivity irreflexivity connectedness uniqueness commutativity ' +\n      'idempotence involutiveness projectivity',\n    contains: [\n      hljs.COMMENT('::', '$')\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,CAAiB,SAASC,IAAT,CAAe,CAC9B,MAAO,CACLC,QAAQ,CACN,2DACA,mEADA,CAEA,mEAFA,CAGA,iEAHA,CAIA,oEAJA,CAKA,6DALA,CAMA,mEANA,CAOA,yDAPA,CAQA,mEARA,CASA,yCAXG,CAYLC,QAAQ,CAAE,CACRF,IAAI,CAACG,OAAL,CAAa,IAAb,CAAmB,GAAnB,CADQ,CAZL,CAAP,CAgBD,CAjBD"},"metadata":{},"sourceType":"module"}