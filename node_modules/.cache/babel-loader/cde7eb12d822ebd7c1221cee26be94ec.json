{"ast":null,"code":"'use strict';module.exports=pascal;pascal.displayName='pascal';pascal.aliases=['objectpascal'];function pascal(Prism){// Based on Free Pascal\n/* TODO\nSupport inline asm ?\n*/Prism.languages.pascal={comment:[/\\(\\*[\\s\\S]+?\\*\\)/,/\\{[\\s\\S]+?\\}/,/\\/\\/.*/],string:{pattern:/(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,greedy:true},keyword:[{// Turbo Pascal\npattern:/(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,lookbehind:true},{// Free Pascal\npattern:/(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,lookbehind:true},{// Object Pascal\npattern:/(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,lookbehind:true},{// Modifiers\npattern:/(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,lookbehind:true}],number:[// Hexadecimal, octal and binary\n/(?:[&%]\\d+|\\$[a-f\\d]+)/i,// Decimal\n/\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i],operator:[/\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,{pattern:/(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,lookbehind:true}],punctuation:/\\(\\.|\\.\\)|[()\\[\\]:;,.]/};Prism.languages.objectpascal=Prism.languages.pascal;}","map":{"version":3,"names":["module","exports","pascal","displayName","aliases","Prism","languages","comment","string","pattern","greedy","keyword","lookbehind","number","operator","punctuation","objectpascal"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/pascal.js"],"sourcesContent":["'use strict'\n\nmodule.exports = pascal\npascal.displayName = 'pascal'\npascal.aliases = ['objectpascal']\nfunction pascal(Prism) {\n  // Based on Free Pascal\n  /* TODO\nSupport inline asm ?\n*/\n  Prism.languages.pascal = {\n    comment: [/\\(\\*[\\s\\S]+?\\*\\)/, /\\{[\\s\\S]+?\\}/, /\\/\\/.*/],\n    string: {\n      pattern: /(?:'(?:''|[^'\\r\\n])*'|#[&$%]?[a-f\\d]+)+|\\^[a-z]/i,\n      greedy: true\n    },\n    keyword: [\n      {\n        // Turbo Pascal\n        pattern: /(^|[^&])\\b(?:absolute|array|asm|begin|case|const|constructor|destructor|do|downto|else|end|file|for|function|goto|if|implementation|inherited|inline|interface|label|nil|object|of|operator|packed|procedure|program|record|reintroduce|repeat|self|set|string|then|to|type|unit|until|uses|var|while|with)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Free Pascal\n        pattern: /(^|[^&])\\b(?:dispose|exit|false|new|true)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Object Pascal\n        pattern: /(^|[^&])\\b(?:class|dispinterface|except|exports|finalization|finally|initialization|inline|library|on|out|packed|property|raise|resourcestring|threadvar|try)\\b/i,\n        lookbehind: true\n      },\n      {\n        // Modifiers\n        pattern: /(^|[^&])\\b(?:absolute|abstract|alias|assembler|bitpacked|break|cdecl|continue|cppdecl|cvar|default|deprecated|dynamic|enumerator|experimental|export|external|far|far16|forward|generic|helper|implements|index|interrupt|iochecks|local|message|name|near|nodefault|noreturn|nostackframe|oldfpccall|otherwise|overload|override|pascal|platform|private|protected|public|published|read|register|reintroduce|result|safecall|saveregisters|softfloat|specialize|static|stdcall|stored|strict|unaligned|unimplemented|varargs|virtual|write)\\b/i,\n        lookbehind: true\n      }\n    ],\n    number: [\n      // Hexadecimal, octal and binary\n      /(?:[&%]\\d+|\\$[a-f\\d]+)/i, // Decimal\n      /\\b\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?/i\n    ],\n    operator: [\n      /\\.\\.|\\*\\*|:=|<[<=>]?|>[>=]?|[+\\-*\\/]=?|[@^=]/i,\n      {\n        pattern: /(^|[^&])\\b(?:and|as|div|exclude|in|include|is|mod|not|or|shl|shr|xor)\\b/,\n        lookbehind: true\n      }\n    ],\n    punctuation: /\\(\\.|\\.\\)|[()\\[\\]:;,.]/\n  }\n  Prism.languages.objectpascal = Prism.languages.pascal\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,CAAC,cAAD,CAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrB;AACA;AACF;AACA,EACEA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyB,CACvBK,OAAO,CAAE,CAAC,kBAAD,CAAqB,cAArB,CAAqC,QAArC,CADc,CAEvBC,MAAM,CAAE,CACNC,OAAO,CAAE,kDADH,CAENC,MAAM,CAAE,IAFF,CAFe,CAMvBC,OAAO,CAAE,CACP,CACE;AACAF,OAAO,CAAE,gTAFX,CAGEG,UAAU,CAAE,IAHd,CADO,CAMP,CACE;AACAH,OAAO,CAAE,8CAFX,CAGEG,UAAU,CAAE,IAHd,CANO,CAWP,CACE;AACAH,OAAO,CAAE,kKAFX,CAGEG,UAAU,CAAE,IAHd,CAXO,CAgBP,CACE;AACAH,OAAO,CAAE,khBAFX,CAGEG,UAAU,CAAE,IAHd,CAhBO,CANc,CA4BvBC,MAAM,CAAE,CACN;AACA,yBAFM,CAEqB;AAC3B,gCAHM,CA5Be,CAiCvBC,QAAQ,CAAE,CACR,+CADQ,CAER,CACEL,OAAO,CAAE,yEADX,CAEEG,UAAU,CAAE,IAFd,CAFQ,CAjCa,CAwCvBG,WAAW,CAAE,wBAxCU,CAAzB,CA0CAV,KAAK,CAACC,SAAN,CAAgBU,YAAhB,CAA+BX,KAAK,CAACC,SAAN,CAAgBJ,MAA/C,CACD"},"metadata":{},"sourceType":"module"}