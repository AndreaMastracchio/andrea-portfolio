{"ast":null,"code":"module.exports=function(hljs){// Regular expression for VHDL numeric literals.\n// Decimal literal:\nvar INTEGER_RE='\\\\d(_|\\\\d)*';var EXPONENT_RE='[eE][-+]?'+INTEGER_RE;var DECIMAL_LITERAL_RE=INTEGER_RE+'(\\\\.'+INTEGER_RE+')?'+'('+EXPONENT_RE+')?';// Based literal:\nvar BASED_INTEGER_RE='\\\\w+';var BASED_LITERAL_RE=INTEGER_RE+'#'+BASED_INTEGER_RE+'(\\\\.'+BASED_INTEGER_RE+')?'+'#'+'('+EXPONENT_RE+')?';var NUMBER_RE='\\\\b('+BASED_LITERAL_RE+'|'+DECIMAL_LITERAL_RE+')';return{case_insensitive:true,keywords:{keyword:'abs access after alias all and architecture array assert assume assume_guarantee attribute '+'begin block body buffer bus case component configuration constant context cover disconnect '+'downto default else elsif end entity exit fairness file for force function generate '+'generic group guarded if impure in inertial inout is label library linkage literal '+'loop map mod nand new next nor not null of on open or others out package parameter port '+'postponed procedure process property protected pure range record register reject '+'release rem report restrict restrict_guarantee return rol ror select sequence '+'severity shared signal sla sll sra srl strong subtype then to transport type '+'unaffected units until use variable view vmode vprop vunit wait when while with xnor xor',built_in:'boolean bit character '+'integer time delay_length natural positive '+'string bit_vector file_open_kind file_open_status '+'std_logic std_logic_vector unsigned signed boolean_vector integer_vector '+'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed '+'real_vector time_vector',literal:'false true note warning error failure '+// severity_level\n'line text side width'// textio\n},illegal:'{',contains:[hljs.C_BLOCK_COMMENT_MODE,// VHDL-2008 block commenting.\nhljs.COMMENT('--','$'),hljs.QUOTE_STRING_MODE,{className:'number',begin:NUMBER_RE,relevance:0},{className:'string',begin:'\\'(U|X|0|1|Z|W|L|H|-)\\'',contains:[hljs.BACKSLASH_ESCAPE]},{className:'symbol',begin:'\\'[A-Za-z](_?[A-Za-z0-9])*',contains:[hljs.BACKSLASH_ESCAPE]}]};};","map":{"version":3,"names":["module","exports","hljs","INTEGER_RE","EXPONENT_RE","DECIMAL_LITERAL_RE","BASED_INTEGER_RE","BASED_LITERAL_RE","NUMBER_RE","case_insensitive","keywords","keyword","built_in","literal","illegal","contains","C_BLOCK_COMMENT_MODE","COMMENT","QUOTE_STRING_MODE","className","begin","relevance","BACKSLASH_ESCAPE"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/vhdl.js"],"sourcesContent":["module.exports = function(hljs) {\n  // Regular expression for VHDL numeric literals.\n\n  // Decimal literal:\n  var INTEGER_RE = '\\\\d(_|\\\\d)*';\n  var EXPONENT_RE = '[eE][-+]?' + INTEGER_RE;\n  var DECIMAL_LITERAL_RE = INTEGER_RE + '(\\\\.' + INTEGER_RE + ')?' + '(' + EXPONENT_RE + ')?';\n  // Based literal:\n  var BASED_INTEGER_RE = '\\\\w+';\n  var BASED_LITERAL_RE = INTEGER_RE + '#' + BASED_INTEGER_RE + '(\\\\.' + BASED_INTEGER_RE + ')?' + '#' + '(' + EXPONENT_RE + ')?';\n\n  var NUMBER_RE = '\\\\b(' + BASED_LITERAL_RE + '|' + DECIMAL_LITERAL_RE + ')';\n\n  return {\n    case_insensitive: true,\n    keywords: {\n      keyword:\n        'abs access after alias all and architecture array assert assume assume_guarantee attribute ' +\n        'begin block body buffer bus case component configuration constant context cover disconnect ' +\n        'downto default else elsif end entity exit fairness file for force function generate ' +\n        'generic group guarded if impure in inertial inout is label library linkage literal ' +\n        'loop map mod nand new next nor not null of on open or others out package parameter port ' +\n        'postponed procedure process property protected pure range record register reject ' +\n        'release rem report restrict restrict_guarantee return rol ror select sequence ' +\n        'severity shared signal sla sll sra srl strong subtype then to transport type ' +\n        'unaffected units until use variable view vmode vprop vunit wait when while with xnor xor',\n      built_in:\n        'boolean bit character ' +\n        'integer time delay_length natural positive ' +\n        'string bit_vector file_open_kind file_open_status ' +\n        'std_logic std_logic_vector unsigned signed boolean_vector integer_vector ' +\n        'std_ulogic std_ulogic_vector unresolved_unsigned u_unsigned unresolved_signed u_signed ' +\n        'real_vector time_vector',\n      literal:\n        'false true note warning error failure ' +  // severity_level\n        'line text side width'                      // textio\n    },\n    illegal: '{',\n    contains: [\n      hljs.C_BLOCK_COMMENT_MODE,      // VHDL-2008 block commenting.\n      hljs.COMMENT('--', '$'),\n      hljs.QUOTE_STRING_MODE,\n      {\n        className: 'number',\n        begin: NUMBER_RE,\n        relevance: 0\n      },\n      {\n        className: 'string',\n        begin: '\\'(U|X|0|1|Z|W|L|H|-)\\'',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      },\n      {\n        className: 'symbol',\n        begin: '\\'[A-Za-z](_?[A-Za-z0-9])*',\n        contains: [hljs.BACKSLASH_ESCAPE]\n      }\n    ]\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,CAAiB,SAASC,IAAT,CAAe,CAC9B;AAEA;AACA,GAAIC,WAAU,CAAG,aAAjB,CACA,GAAIC,YAAW,CAAG,YAAcD,UAAhC,CACA,GAAIE,mBAAkB,CAAGF,UAAU,CAAG,MAAb,CAAsBA,UAAtB,CAAmC,IAAnC,CAA0C,GAA1C,CAAgDC,WAAhD,CAA8D,IAAvF,CACA;AACA,GAAIE,iBAAgB,CAAG,MAAvB,CACA,GAAIC,iBAAgB,CAAGJ,UAAU,CAAG,GAAb,CAAmBG,gBAAnB,CAAsC,MAAtC,CAA+CA,gBAA/C,CAAkE,IAAlE,CAAyE,GAAzE,CAA+E,GAA/E,CAAqFF,WAArF,CAAmG,IAA1H,CAEA,GAAII,UAAS,CAAG,OAASD,gBAAT,CAA4B,GAA5B,CAAkCF,kBAAlC,CAAuD,GAAvE,CAEA,MAAO,CACLI,gBAAgB,CAAE,IADb,CAELC,QAAQ,CAAE,CACRC,OAAO,CACL,8FACA,6FADA,CAEA,sFAFA,CAGA,qFAHA,CAIA,0FAJA,CAKA,mFALA,CAMA,gFANA,CAOA,+EAPA,CAQA,0FAVM,CAWRC,QAAQ,CACN,yBACA,6CADA,CAEA,oDAFA,CAGA,2EAHA,CAIA,yFAJA,CAKA,yBAjBM,CAkBRC,OAAO,CACL,yCAA4C;AAC5C,sBAA4C;AApBtC,CAFL,CAwBLC,OAAO,CAAE,GAxBJ,CAyBLC,QAAQ,CAAE,CACRb,IAAI,CAACc,oBADG,CACwB;AAChCd,IAAI,CAACe,OAAL,CAAa,IAAb,CAAmB,GAAnB,CAFQ,CAGRf,IAAI,CAACgB,iBAHG,CAIR,CACEC,SAAS,CAAE,QADb,CAEEC,KAAK,CAAEZ,SAFT,CAGEa,SAAS,CAAE,CAHb,CAJQ,CASR,CACEF,SAAS,CAAE,QADb,CAEEC,KAAK,CAAE,yBAFT,CAGEL,QAAQ,CAAE,CAACb,IAAI,CAACoB,gBAAN,CAHZ,CATQ,CAcR,CACEH,SAAS,CAAE,QADb,CAEEC,KAAK,CAAE,4BAFT,CAGEL,QAAQ,CAAE,CAACb,IAAI,CAACoB,gBAAN,CAHZ,CAdQ,CAzBL,CAAP,CA8CD,CA3DD"},"metadata":{},"sourceType":"module"}