{"ast":null,"code":"'use strict';module.exports=autoit;autoit.displayName='autoit';autoit.aliases=[];function autoit(Prism){Prism.languages.autoit={comment:[/;.*/,{// The multi-line comments delimiters can actually be commented out with \";\"\npattern:/(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,lookbehind:true}],url:{pattern:/(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,lookbehind:true},string:{pattern:/([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,greedy:true,inside:{variable:/([%$@])\\w+\\1/}},directive:{pattern:/(^\\s*)#\\w+/m,lookbehind:true,alias:'keyword'},function:/\\b\\w+(?=\\()/,// Variables and macros\nvariable:/[$@]\\w+/,keyword:/\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,number:/\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,boolean:/\\b(?:True|False)\\b/i,operator:/<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,punctuation:/[\\[\\]().,:]/};}","map":{"version":3,"names":["module","exports","autoit","displayName","aliases","Prism","languages","comment","pattern","lookbehind","url","string","greedy","inside","variable","directive","alias","function","keyword","number","boolean","operator","punctuation"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/autoit.js"],"sourcesContent":["'use strict'\n\nmodule.exports = autoit\nautoit.displayName = 'autoit'\nautoit.aliases = []\nfunction autoit(Prism) {\n  Prism.languages.autoit = {\n    comment: [\n      /;.*/,\n      {\n        // The multi-line comments delimiters can actually be commented out with \";\"\n        pattern: /(^\\s*)#(?:comments-start|cs)[\\s\\S]*?^\\s*#(?:comments-end|ce)/m,\n        lookbehind: true\n      }\n    ],\n    url: {\n      pattern: /(^\\s*#include\\s+)(?:<[^\\r\\n>]+>|\"[^\\r\\n\"]+\")/m,\n      lookbehind: true\n    },\n    string: {\n      pattern: /([\"'])(?:\\1\\1|(?!\\1)[^\\r\\n])*\\1/,\n      greedy: true,\n      inside: {\n        variable: /([%$@])\\w+\\1/\n      }\n    },\n    directive: {\n      pattern: /(^\\s*)#\\w+/m,\n      lookbehind: true,\n      alias: 'keyword'\n    },\n    function: /\\b\\w+(?=\\()/,\n    // Variables and macros\n    variable: /[$@]\\w+/,\n    keyword: /\\b(?:Case|Const|Continue(?:Case|Loop)|Default|Dim|Do|Else(?:If)?|End(?:Func|If|Select|Switch|With)|Enum|Exit(?:Loop)?|For|Func|Global|If|In|Local|Next|Null|ReDim|Select|Static|Step|Switch|Then|To|Until|Volatile|WEnd|While|With)\\b/i,\n    number: /\\b(?:0x[\\da-f]+|\\d+(?:\\.\\d+)?(?:e[+-]?\\d+)?)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    operator: /<[=>]?|[-+*\\/=&>]=?|[?^]|\\b(?:And|Or|Not)\\b/i,\n    punctuation: /[\\[\\]().,:]/\n  }\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,EAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyB,CACvBK,OAAO,CAAE,CACP,KADO,CAEP,CACE;AACAC,OAAO,CAAE,+DAFX,CAGEC,UAAU,CAAE,IAHd,CAFO,CADc,CASvBC,GAAG,CAAE,CACHF,OAAO,CAAE,+CADN,CAEHC,UAAU,CAAE,IAFT,CATkB,CAavBE,MAAM,CAAE,CACNH,OAAO,CAAE,iCADH,CAENI,MAAM,CAAE,IAFF,CAGNC,MAAM,CAAE,CACNC,QAAQ,CAAE,cADJ,CAHF,CAbe,CAoBvBC,SAAS,CAAE,CACTP,OAAO,CAAE,aADA,CAETC,UAAU,CAAE,IAFH,CAGTO,KAAK,CAAE,SAHE,CApBY,CAyBvBC,QAAQ,CAAE,aAzBa,CA0BvB;AACAH,QAAQ,CAAE,SA3Ba,CA4BvBI,OAAO,CAAE,wOA5Bc,CA6BvBC,MAAM,CAAE,iDA7Be,CA8BvBC,OAAO,CAAE,qBA9Bc,CA+BvBC,QAAQ,CAAE,8CA/Ba,CAgCvBC,WAAW,CAAE,aAhCU,CAAzB,CAkCD"},"metadata":{},"sourceType":"module"}