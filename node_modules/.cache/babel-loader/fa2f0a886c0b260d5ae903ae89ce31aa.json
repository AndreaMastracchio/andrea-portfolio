{"ast":null,"code":"'use strict';module.exports=parigp;parigp.displayName='parigp';parigp.aliases=[];function parigp(Prism){Prism.languages.parigp={comment:/\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,string:{pattern:/\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,greedy:true},// PARI/GP does not care about white spaces at all\n// so let's process the keywords to build an appropriate regexp\n// (e.g. \"b *r *e *a *k\", etc.)\nkeyword:function(){var keywords=['breakpoint','break','dbg_down','dbg_err','dbg_up','dbg_x','forcomposite','fordiv','forell','forpart','forprime','forstep','forsubgroup','forvec','for','iferr','if','local','my','next','return','until','while'];keywords=keywords.map(function(keyword){return keyword.split('').join(' *');}).join('|');return RegExp('\\\\b(?:'+keywords+')\\\\b');}(),function:/\\w[\\w ]*?(?= *\\()/,number:{// The lookbehind and the negative lookahead prevent from breaking the .. operator\npattern:/((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,lookbehind:true},operator:/\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,punctuation:/[\\[\\]{}().,:;|]/};}","map":{"version":3,"names":["module","exports","parigp","displayName","aliases","Prism","languages","comment","string","pattern","greedy","keyword","keywords","map","split","join","RegExp","function","number","lookbehind","operator","punctuation"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/parigp.js"],"sourcesContent":["'use strict'\n\nmodule.exports = parigp\nparigp.displayName = 'parigp'\nparigp.aliases = []\nfunction parigp(Prism) {\n  Prism.languages.parigp = {\n    comment: /\\/\\*[\\s\\S]*?\\*\\/|\\\\\\\\.*/,\n    string: {\n      pattern: /\"(?:[^\"\\\\\\r\\n]|\\\\.)*\"/,\n      greedy: true\n    },\n    // PARI/GP does not care about white spaces at all\n    // so let's process the keywords to build an appropriate regexp\n    // (e.g. \"b *r *e *a *k\", etc.)\n    keyword: (function() {\n      var keywords = [\n        'breakpoint',\n        'break',\n        'dbg_down',\n        'dbg_err',\n        'dbg_up',\n        'dbg_x',\n        'forcomposite',\n        'fordiv',\n        'forell',\n        'forpart',\n        'forprime',\n        'forstep',\n        'forsubgroup',\n        'forvec',\n        'for',\n        'iferr',\n        'if',\n        'local',\n        'my',\n        'next',\n        'return',\n        'until',\n        'while'\n      ]\n      keywords = keywords\n        .map(function(keyword) {\n          return keyword.split('').join(' *')\n        })\n        .join('|')\n      return RegExp('\\\\b(?:' + keywords + ')\\\\b')\n    })(),\n    function: /\\w[\\w ]*?(?= *\\()/,\n    number: {\n      // The lookbehind and the negative lookahead prevent from breaking the .. operator\n      pattern: /((?:\\. *\\. *)?)(?:\\d(?: *\\d)*(?: *(?!\\. *\\.)\\.(?: *\\d)*)?|\\. *\\d(?: *\\d)*)(?: *e *[+-]? *\\d(?: *\\d)*)?/i,\n      lookbehind: true\n    },\n    operator: /\\. *\\.|[*\\/!](?: *=)?|%(?: *=|(?: *#)?(?: *')*)?|\\+(?: *[+=])?|-(?: *[-=>])?|<(?:(?: *<)?(?: *=)?| *>)?|>(?: *>)?(?: *=)?|=(?: *=){0,2}|\\\\(?: *\\/)?(?: *=)?|&(?: *&)?|\\| *\\||['#~^]/,\n    punctuation: /[\\[\\]{}().,:;|]/\n  }\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,EAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyB,CACvBK,OAAO,CAAE,yBADc,CAEvBC,MAAM,CAAE,CACNC,OAAO,CAAE,uBADH,CAENC,MAAM,CAAE,IAFF,CAFe,CAMvB;AACA;AACA;AACAC,OAAO,CAAG,UAAW,CACnB,GAAIC,SAAQ,CAAG,CACb,YADa,CAEb,OAFa,CAGb,UAHa,CAIb,SAJa,CAKb,QALa,CAMb,OANa,CAOb,cAPa,CAQb,QARa,CASb,QATa,CAUb,SAVa,CAWb,UAXa,CAYb,SAZa,CAab,aAba,CAcb,QAda,CAeb,KAfa,CAgBb,OAhBa,CAiBb,IAjBa,CAkBb,OAlBa,CAmBb,IAnBa,CAoBb,MApBa,CAqBb,QArBa,CAsBb,OAtBa,CAuBb,OAvBa,CAAf,CAyBAA,QAAQ,CAAGA,QAAQ,CAChBC,GADQ,CACJ,SAASF,OAAT,CAAkB,CACrB,MAAOA,QAAO,CAACG,KAAR,CAAc,EAAd,EAAkBC,IAAlB,CAAuB,IAAvB,CAAP,CACD,CAHQ,EAIRA,IAJQ,CAIH,GAJG,CAAX,CAKA,MAAOC,OAAM,CAAC,SAAWJ,QAAX,CAAsB,MAAvB,CAAb,CACD,CAhCQ,EATc,CA0CvBK,QAAQ,CAAE,mBA1Ca,CA2CvBC,MAAM,CAAE,CACN;AACAT,OAAO,CAAE,yGAFH,CAGNU,UAAU,CAAE,IAHN,CA3Ce,CAgDvBC,QAAQ,CAAE,qLAhDa,CAiDvBC,WAAW,CAAE,iBAjDU,CAAzB,CAmDD"},"metadata":{},"sourceType":"module"}