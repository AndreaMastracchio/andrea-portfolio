{"ast":null,"code":"'use strict';module.exports=kotlin;kotlin.displayName='kotlin';kotlin.aliases=[];function kotlin(Prism){;(function(Prism){Prism.languages.kotlin=Prism.languages.extend('clike',{keyword:{// The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\npattern:/(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,lookbehind:true},function:[/\\w+(?=\\s*\\()/,{pattern:/(\\.)\\w+(?=\\s*\\{)/,lookbehind:true}],number:/\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,operator:/\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/});delete Prism.languages.kotlin['class-name'];Prism.languages.insertBefore('kotlin','string',{'raw-string':{pattern:/(\"\"\"|''')[\\s\\S]*?\\1/,alias:'string'// See interpolation below\n}});Prism.languages.insertBefore('kotlin','keyword',{annotation:{pattern:/\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,alias:'builtin'}});Prism.languages.insertBefore('kotlin','function',{label:{pattern:/\\w+@|@\\w+/,alias:'symbol'}});var interpolation=[{pattern:/\\$\\{[^}]+\\}/,inside:{delimiter:{pattern:/^\\$\\{|\\}$/,alias:'variable'},rest:Prism.languages.kotlin}},{pattern:/\\$\\w+/,alias:'variable'}];Prism.languages.kotlin['string'].inside=Prism.languages.kotlin['raw-string'].inside={interpolation:interpolation};})(Prism);}","map":{"version":3,"names":["module","exports","kotlin","displayName","aliases","Prism","languages","extend","keyword","pattern","lookbehind","function","number","operator","insertBefore","alias","annotation","label","interpolation","inside","delimiter","rest"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/kotlin.js"],"sourcesContent":["'use strict'\n\nmodule.exports = kotlin\nkotlin.displayName = 'kotlin'\nkotlin.aliases = []\nfunction kotlin(Prism) {\n  ;(function(Prism) {\n    Prism.languages.kotlin = Prism.languages.extend('clike', {\n      keyword: {\n        // The lookbehind prevents wrong highlighting of e.g. kotlin.properties.get\n        pattern: /(^|[^.])\\b(?:abstract|actual|annotation|as|break|by|catch|class|companion|const|constructor|continue|crossinline|data|do|dynamic|else|enum|expect|external|final|finally|for|fun|get|if|import|in|infix|init|inline|inner|interface|internal|is|lateinit|noinline|null|object|open|operator|out|override|package|private|protected|public|reified|return|sealed|set|super|suspend|tailrec|this|throw|to|try|typealias|val|var|vararg|when|where|while)\\b/,\n        lookbehind: true\n      },\n      function: [\n        /\\w+(?=\\s*\\()/,\n        {\n          pattern: /(\\.)\\w+(?=\\s*\\{)/,\n          lookbehind: true\n        }\n      ],\n      number: /\\b(?:0[xX][\\da-fA-F]+(?:_[\\da-fA-F]+)*|0[bB][01]+(?:_[01]+)*|\\d+(?:_\\d+)*(?:\\.\\d+(?:_\\d+)*)?(?:[eE][+-]?\\d+(?:_\\d+)*)?[fFL]?)\\b/,\n      operator: /\\+[+=]?|-[-=>]?|==?=?|!(?:!|==?)?|[\\/*%<>]=?|[?:]:?|\\.\\.|&&|\\|\\||\\b(?:and|inv|or|shl|shr|ushr|xor)\\b/\n    })\n    delete Prism.languages.kotlin['class-name']\n    Prism.languages.insertBefore('kotlin', 'string', {\n      'raw-string': {\n        pattern: /(\"\"\"|''')[\\s\\S]*?\\1/,\n        alias: 'string' // See interpolation below\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'keyword', {\n      annotation: {\n        pattern: /\\B@(?:\\w+:)?(?:[A-Z]\\w*|\\[[^\\]]+\\])/,\n        alias: 'builtin'\n      }\n    })\n    Prism.languages.insertBefore('kotlin', 'function', {\n      label: {\n        pattern: /\\w+@|@\\w+/,\n        alias: 'symbol'\n      }\n    })\n    var interpolation = [\n      {\n        pattern: /\\$\\{[^}]+\\}/,\n        inside: {\n          delimiter: {\n            pattern: /^\\$\\{|\\}$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.kotlin\n        }\n      },\n      {\n        pattern: /\\$\\w+/,\n        alias: 'variable'\n      }\n    ]\n    Prism.languages.kotlin['string'].inside = Prism.languages.kotlin[\n      'raw-string'\n    ].inside = {\n      interpolation: interpolation\n    }\n  })(Prism)\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,EAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrB,CAAC,CAAC,SAASA,KAAT,CAAgB,CAChBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,OAAvB,CAAgC,CACvDC,OAAO,CAAE,CACP;AACAC,OAAO,CAAE,0bAFF,CAGPC,UAAU,CAAE,IAHL,CAD8C,CAMvDC,QAAQ,CAAE,CACR,cADQ,CAER,CACEF,OAAO,CAAE,kBADX,CAEEC,UAAU,CAAE,IAFd,CAFQ,CAN6C,CAavDE,MAAM,CAAE,iIAb+C,CAcvDC,QAAQ,CAAE,sGAd6C,CAAhC,CAAzB,CAgBA,MAAOR,MAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,YAAvB,CAAP,CACAG,KAAK,CAACC,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,CAAuC,QAAvC,CAAiD,CAC/C,aAAc,CACZL,OAAO,CAAE,qBADG,CAEZM,KAAK,CAAE,QAAS;AAFJ,CADiC,CAAjD,EAMAV,KAAK,CAACC,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,CAAuC,SAAvC,CAAkD,CAChDE,UAAU,CAAE,CACVP,OAAO,CAAE,qCADC,CAEVM,KAAK,CAAE,SAFG,CADoC,CAAlD,EAMAV,KAAK,CAACC,SAAN,CAAgBQ,YAAhB,CAA6B,QAA7B,CAAuC,UAAvC,CAAmD,CACjDG,KAAK,CAAE,CACLR,OAAO,CAAE,WADJ,CAELM,KAAK,CAAE,QAFF,CAD0C,CAAnD,EAMA,GAAIG,cAAa,CAAG,CAClB,CACET,OAAO,CAAE,aADX,CAEEU,MAAM,CAAE,CACNC,SAAS,CAAE,CACTX,OAAO,CAAE,WADA,CAETM,KAAK,CAAE,UAFE,CADL,CAKNM,IAAI,CAAEhB,KAAK,CAACC,SAAN,CAAgBJ,MALhB,CAFV,CADkB,CAWlB,CACEO,OAAO,CAAE,OADX,CAEEM,KAAK,CAAE,UAFT,CAXkB,CAApB,CAgBAV,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,QAAvB,EAAiCiB,MAAjC,CAA0Cd,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CACxC,YADwC,EAExCiB,MAFwC,CAE/B,CACTD,aAAa,CAAEA,aADN,CAFX,CAKD,CAzDA,EAyDEb,KAzDF,EA0DF"},"metadata":{},"sourceType":"module"}