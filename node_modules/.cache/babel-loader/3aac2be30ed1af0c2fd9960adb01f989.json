{"ast":null,"code":"'use strict';exports.parse=parse;exports.stringify=stringify;var comma=',';var space=' ';var empty='';// Parse comma-separated tokens to an array.\nfunction parse(value){var values=[];var input=String(value||empty);var index=input.indexOf(comma);var lastIndex=0;var end=false;var val;while(!end){if(index===-1){index=input.length;end=true;}val=input.slice(lastIndex,index).trim();if(val||!end){values.push(val);}lastIndex=index+1;index=input.indexOf(comma,lastIndex);}return values;}// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values,options){var settings=options||{};var left=settings.padLeft===false?empty:space;var right=settings.padRight?space:empty;// Ensure the last empty entry is seen.\nif(values[values.length-1]===empty){values=values.concat(empty);}return values.join(right+comma+left).trim();}","map":{"version":3,"names":["exports","parse","stringify","comma","space","empty","value","values","input","String","index","indexOf","lastIndex","end","val","length","slice","trim","push","options","settings","left","padLeft","right","padRight","concat","join"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/comma-separated-tokens/index.js"],"sourcesContent":["'use strict'\n\nexports.parse = parse\nexports.stringify = stringify\n\nvar comma = ','\nvar space = ' '\nvar empty = ''\n\n// Parse comma-separated tokens to an array.\nfunction parse(value) {\n  var values = []\n  var input = String(value || empty)\n  var index = input.indexOf(comma)\n  var lastIndex = 0\n  var end = false\n  var val\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    val = input.slice(lastIndex, index).trim()\n\n    if (val || !end) {\n      values.push(val)\n    }\n\n    lastIndex = index + 1\n    index = input.indexOf(comma, lastIndex)\n  }\n\n  return values\n}\n\n// Compile an array to comma-separated tokens.\n// `options.padLeft` (default: `true`) pads a space left of each token, and\n// `options.padRight` (default: `false`) pads a space to the right of each token.\nfunction stringify(values, options) {\n  var settings = options || {}\n  var left = settings.padLeft === false ? empty : space\n  var right = settings.padRight ? space : empty\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === empty) {\n    values = values.concat(empty)\n  }\n\n  return values.join(right + comma + left).trim()\n}\n"],"mappings":"AAAA,aAEAA,OAAO,CAACC,KAAR,CAAgBA,KAAhB,CACAD,OAAO,CAACE,SAAR,CAAoBA,SAApB,CAEA,GAAIC,MAAK,CAAG,GAAZ,CACA,GAAIC,MAAK,CAAG,GAAZ,CACA,GAAIC,MAAK,CAAG,EAAZ,CAEA;AACA,QAASJ,MAAT,CAAeK,KAAf,CAAsB,CACpB,GAAIC,OAAM,CAAG,EAAb,CACA,GAAIC,MAAK,CAAGC,MAAM,CAACH,KAAK,EAAID,KAAV,CAAlB,CACA,GAAIK,MAAK,CAAGF,KAAK,CAACG,OAAN,CAAcR,KAAd,CAAZ,CACA,GAAIS,UAAS,CAAG,CAAhB,CACA,GAAIC,IAAG,CAAG,KAAV,CACA,GAAIC,IAAJ,CAEA,MAAO,CAACD,GAAR,CAAa,CACX,GAAIH,KAAK,GAAK,CAAC,CAAf,CAAkB,CAChBA,KAAK,CAAGF,KAAK,CAACO,MAAd,CACAF,GAAG,CAAG,IAAN,CACD,CAEDC,GAAG,CAAGN,KAAK,CAACQ,KAAN,CAAYJ,SAAZ,CAAuBF,KAAvB,EAA8BO,IAA9B,EAAN,CAEA,GAAIH,GAAG,EAAI,CAACD,GAAZ,CAAiB,CACfN,MAAM,CAACW,IAAP,CAAYJ,GAAZ,EACD,CAEDF,SAAS,CAAGF,KAAK,CAAG,CAApB,CACAA,KAAK,CAAGF,KAAK,CAACG,OAAN,CAAcR,KAAd,CAAqBS,SAArB,CAAR,CACD,CAED,MAAOL,OAAP,CACD,CAED;AACA;AACA;AACA,QAASL,UAAT,CAAmBK,MAAnB,CAA2BY,OAA3B,CAAoC,CAClC,GAAIC,SAAQ,CAAGD,OAAO,EAAI,EAA1B,CACA,GAAIE,KAAI,CAAGD,QAAQ,CAACE,OAAT,GAAqB,KAArB,CAA6BjB,KAA7B,CAAqCD,KAAhD,CACA,GAAImB,MAAK,CAAGH,QAAQ,CAACI,QAAT,CAAoBpB,KAApB,CAA4BC,KAAxC,CAEA;AACA,GAAIE,MAAM,CAACA,MAAM,CAACQ,MAAP,CAAgB,CAAjB,CAAN,GAA8BV,KAAlC,CAAyC,CACvCE,MAAM,CAAGA,MAAM,CAACkB,MAAP,CAAcpB,KAAd,CAAT,CACD,CAED,MAAOE,OAAM,CAACmB,IAAP,CAAYH,KAAK,CAAGpB,KAAR,CAAgBkB,IAA5B,EAAkCJ,IAAlC,EAAP,CACD"},"metadata":{},"sourceType":"module"}