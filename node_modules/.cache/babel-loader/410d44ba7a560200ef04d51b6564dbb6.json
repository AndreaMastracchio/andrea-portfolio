{"ast":null,"code":"module.exports=function(hljs){var keywords={'builtin-name':// keywords\n'!= % %= & &= * ** **= *= *map '+'+ += , --build-class-- --import-- -= . / // //= '+'/= < << <<= <= = > >= >> >>= '+'@ @= ^ ^= abs accumulate all and any ap-compose '+'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe '+'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast '+'callable calling-module-name car case cdr chain chr coll? combinations compile '+'compress cond cons cons? continue count curry cut cycle dec '+'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn '+'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir '+'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? '+'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first '+'flatten float? fn fnc fnr for for* format fraction genexpr '+'gensym get getattr global globals group-by hasattr hash hex id '+'identity if if* if-not if-python2 import in inc input instance? '+'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even '+'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none '+'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass '+'iter iterable? iterate iterator? keyword keyword? lambda last len let '+'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all '+'map max merge-with method-decorator min multi-decorator multicombinations name neg? next '+'none? nonlocal not not-in not? nth numeric? oct odd? open '+'or ord partition permutations pos? post-route postwalk pow prewalk print '+'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str '+'recursive-replace reduce remove repeat repeatedly repr require rest round route '+'route-with-methods rwm second seq set-comp setattr setv some sorted string '+'string? sum switch symbol? take take-nth take-while tee try unless '+'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms '+'xi xor yield yield-from zero? zip zip-longest | |= ~'};var SYMBOLSTART='a-zA-Z_\\\\-!.?+*=<>&#\\'';var SYMBOL_RE='['+SYMBOLSTART+']['+SYMBOLSTART+'0-9/;:]*';var SIMPLE_NUMBER_RE='[-+]?\\\\d+(\\\\.\\\\d+)?';var SHEBANG={className:'meta',begin:'^#!',end:'$'};var SYMBOL={begin:SYMBOL_RE,relevance:0};var NUMBER={className:'number',begin:SIMPLE_NUMBER_RE,relevance:0};var STRING=hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal:null});var COMMENT=hljs.COMMENT(';','$',{relevance:0});var LITERAL={className:'literal',begin:/\\b([Tt]rue|[Ff]alse|nil|None)\\b/};var COLLECTION={begin:'[\\\\[\\\\{]',end:'[\\\\]\\\\}]'};var HINT={className:'comment',begin:'\\\\^'+SYMBOL_RE};var HINT_COL=hljs.COMMENT('\\\\^\\\\{','\\\\}');var KEY={className:'symbol',begin:'[:]{1,2}'+SYMBOL_RE};var LIST={begin:'\\\\(',end:'\\\\)'};var BODY={endsWithParent:true,relevance:0};var NAME={keywords:keywords,lexemes:SYMBOL_RE,className:'name',begin:SYMBOL_RE,starts:BODY};var DEFAULT_CONTAINS=[LIST,STRING,HINT,HINT_COL,COMMENT,KEY,COLLECTION,NUMBER,LITERAL,SYMBOL];LIST.contains=[hljs.COMMENT('comment',''),NAME,BODY];BODY.contains=DEFAULT_CONTAINS;COLLECTION.contains=DEFAULT_CONTAINS;return{aliases:['hylang'],illegal:/\\S/,contains:[SHEBANG,LIST,STRING,HINT,HINT_COL,COMMENT,KEY,COLLECTION,NUMBER,LITERAL]};};","map":{"version":3,"names":["module","exports","hljs","keywords","SYMBOLSTART","SYMBOL_RE","SIMPLE_NUMBER_RE","SHEBANG","className","begin","end","SYMBOL","relevance","NUMBER","STRING","inherit","QUOTE_STRING_MODE","illegal","COMMENT","LITERAL","COLLECTION","HINT","HINT_COL","KEY","LIST","BODY","endsWithParent","NAME","lexemes","starts","DEFAULT_CONTAINS","contains","aliases"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/hy.js"],"sourcesContent":["module.exports = function(hljs) {\n  var keywords = {\n    'builtin-name':\n      // keywords\n      '!= % %= & &= * ** **= *= *map ' +\n      '+ += , --build-class-- --import-- -= . / // //= ' +\n      '/= < << <<= <= = > >= >> >>= ' +\n      '@ @= ^ ^= abs accumulate all and any ap-compose ' +\n      'ap-dotimes ap-each ap-each-while ap-filter ap-first ap-if ap-last ap-map ap-map-when ap-pipe ' +\n      'ap-reduce ap-reject apply as-> ascii assert assoc bin break butlast ' +\n      'callable calling-module-name car case cdr chain chr coll? combinations compile ' +\n      'compress cond cons cons? continue count curry cut cycle dec ' +\n      'def default-method defclass defmacro defmacro-alias defmacro/g! defmain defmethod defmulti defn ' +\n      'defn-alias defnc defnr defreader defseq del delattr delete-route dict-comp dir ' +\n      'disassemble dispatch-reader-macro distinct divmod do doto drop drop-last drop-while empty? ' +\n      'end-sequence eval eval-and-compile eval-when-compile even? every? except exec filter first ' +\n      'flatten float? fn fnc fnr for for* format fraction genexpr ' +\n      'gensym get getattr global globals group-by hasattr hash hex id ' +\n      'identity if if* if-not if-python2 import in inc input instance? ' +\n      'integer integer-char? integer? interleave interpose is is-coll is-cons is-empty is-even ' +\n      'is-every is-float is-instance is-integer is-integer-char is-iterable is-iterator is-keyword is-neg is-none ' +\n      'is-not is-numeric is-odd is-pos is-string is-symbol is-zero isinstance islice issubclass ' +\n      'iter iterable? iterate iterator? keyword keyword? lambda last len let ' +\n      'lif lif-not list* list-comp locals loop macro-error macroexpand macroexpand-1 macroexpand-all ' +\n      'map max merge-with method-decorator min multi-decorator multicombinations name neg? next ' +\n      'none? nonlocal not not-in not? nth numeric? oct odd? open ' +\n      'or ord partition permutations pos? post-route postwalk pow prewalk print ' +\n      'product profile/calls profile/cpu put-route quasiquote quote raise range read read-str ' +\n      'recursive-replace reduce remove repeat repeatedly repr require rest round route ' +\n      'route-with-methods rwm second seq set-comp setattr setv some sorted string ' +\n      'string? sum switch symbol? take take-nth take-while tee try unless ' +\n      'unquote unquote-splicing vars walk when while with with* with-decorator with-gensyms ' +\n      'xi xor yield yield-from zero? zip zip-longest | |= ~'\n   };\n\n  var SYMBOLSTART = 'a-zA-Z_\\\\-!.?+*=<>&#\\'';\n  var SYMBOL_RE = '[' + SYMBOLSTART + '][' + SYMBOLSTART + '0-9/;:]*';\n  var SIMPLE_NUMBER_RE = '[-+]?\\\\d+(\\\\.\\\\d+)?';\n\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!', end: '$'\n  };\n\n  var SYMBOL = {\n    begin: SYMBOL_RE,\n    relevance: 0\n  };\n  var NUMBER = {\n    className: 'number', begin: SIMPLE_NUMBER_RE,\n    relevance: 0\n  };\n  var STRING = hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null});\n  var COMMENT = hljs.COMMENT(\n    ';',\n    '$',\n    {\n      relevance: 0\n    }\n  );\n  var LITERAL = {\n    className: 'literal',\n    begin: /\\b([Tt]rue|[Ff]alse|nil|None)\\b/\n  };\n  var COLLECTION = {\n    begin: '[\\\\[\\\\{]', end: '[\\\\]\\\\}]'\n  };\n  var HINT = {\n    className: 'comment',\n    begin: '\\\\^' + SYMBOL_RE\n  };\n  var HINT_COL = hljs.COMMENT('\\\\^\\\\{', '\\\\}');\n  var KEY = {\n    className: 'symbol',\n    begin: '[:]{1,2}' + SYMBOL_RE\n  };\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)'\n  };\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n  var NAME = {\n    keywords: keywords,\n    lexemes: SYMBOL_RE,\n    className: 'name', begin: SYMBOL_RE,\n    starts: BODY\n  };\n  var DEFAULT_CONTAINS = [LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL, SYMBOL];\n\n  LIST.contains = [hljs.COMMENT('comment', ''), NAME, BODY];\n  BODY.contains = DEFAULT_CONTAINS;\n  COLLECTION.contains = DEFAULT_CONTAINS;\n\n  return {\n    aliases: ['hylang'],\n    illegal: /\\S/,\n    contains: [SHEBANG, LIST, STRING, HINT, HINT_COL, COMMENT, KEY, COLLECTION, NUMBER, LITERAL]\n  }\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}