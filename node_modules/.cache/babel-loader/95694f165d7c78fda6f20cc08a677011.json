{"ast":null,"code":"module.exports=function(hljs){/* missing support for heredoc-like string (OCaml 4.0.2+) */return{aliases:['ml'],keywords:{keyword:'and as assert asr begin class constraint do done downto else end '+'exception external for fun function functor if in include '+'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method '+'mod module mutable new object of open! open or private rec sig struct '+'then to try type val! val virtual when while with '+/* camlp4 */'parser value',built_in:/* built-in types */'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit '+/* (some) types in Pervasives */'in_channel out_channel ref',literal:'true false'},illegal:/\\/\\/|>>/,lexemes:'[a-z_]\\\\w*!?',contains:[{className:'literal',begin:'\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',relevance:0},hljs.COMMENT('\\\\(\\\\*','\\\\*\\\\)',{contains:['self']}),{/* type variable */className:'symbol',begin:'\\'[A-Za-z_](?!\\')[\\\\w\\']*'/* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */},{/* polymorphic variant */className:'type',begin:'`[A-Z][\\\\w\\']*'},{/* module or constructor */className:'type',begin:'\\\\b[A-Z][\\\\w\\']*',relevance:0},{/* don't color identifiers, but safely catch all identifiers with '*/begin:'[a-z_]\\\\w*\\'[\\\\w\\']*',relevance:0},hljs.inherit(hljs.APOS_STRING_MODE,{className:'string',relevance:0}),hljs.inherit(hljs.QUOTE_STRING_MODE,{illegal:null}),{className:'number',begin:'\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|'+'0[oO][0-7_]+[Lln]?|'+'0[bB][01_]+[Lln]?|'+'[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',relevance:0},{begin:/[-=]>/ // relevance booster\n}]};};","map":{"version":3,"names":["module","exports","hljs","aliases","keywords","keyword","built_in","literal","illegal","lexemes","contains","className","begin","relevance","COMMENT","inherit","APOS_STRING_MODE","QUOTE_STRING_MODE"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/ocaml.js"],"sourcesContent":["module.exports = function(hljs) {\n  /* missing support for heredoc-like string (OCaml 4.0.2+) */\n  return {\n    aliases: ['ml'],\n    keywords: {\n      keyword:\n        'and as assert asr begin class constraint do done downto else end ' +\n        'exception external for fun function functor if in include ' +\n        'inherit! inherit initializer land lazy let lor lsl lsr lxor match method!|10 method ' +\n        'mod module mutable new object of open! open or private rec sig struct ' +\n        'then to try type val! val virtual when while with ' +\n        /* camlp4 */\n        'parser value',\n      built_in:\n        /* built-in types */\n        'array bool bytes char exn|5 float int int32 int64 list lazy_t|5 nativeint|5 string unit ' +\n        /* (some) types in Pervasives */\n        'in_channel out_channel ref',\n      literal:\n        'true false'\n    },\n    illegal: /\\/\\/|>>/,\n    lexemes: '[a-z_]\\\\w*!?',\n    contains: [\n      {\n        className: 'literal',\n        begin: '\\\\[(\\\\|\\\\|)?\\\\]|\\\\(\\\\)',\n        relevance: 0\n      },\n      hljs.COMMENT(\n        '\\\\(\\\\*',\n        '\\\\*\\\\)',\n        {\n          contains: ['self']\n        }\n      ),\n      { /* type variable */\n        className: 'symbol',\n        begin: '\\'[A-Za-z_](?!\\')[\\\\w\\']*'\n        /* the grammar is ambiguous on how 'a'b should be interpreted but not the compiler */\n      },\n      { /* polymorphic variant */\n        className: 'type',\n        begin: '`[A-Z][\\\\w\\']*'\n      },\n      { /* module or constructor */\n        className: 'type',\n        begin: '\\\\b[A-Z][\\\\w\\']*',\n        relevance: 0\n      },\n      { /* don't color identifiers, but safely catch all identifiers with '*/\n        begin: '[a-z_]\\\\w*\\'[\\\\w\\']*', relevance: 0\n      },\n      hljs.inherit(hljs.APOS_STRING_MODE, {className: 'string', relevance: 0}),\n      hljs.inherit(hljs.QUOTE_STRING_MODE, {illegal: null}),\n      {\n        className: 'number',\n        begin:\n          '\\\\b(0[xX][a-fA-F0-9_]+[Lln]?|' +\n          '0[oO][0-7_]+[Lln]?|' +\n          '0[bB][01_]+[Lln]?|' +\n          '[0-9][0-9_]*([Lln]|(\\\\.[0-9_]*)?([eE][-+]?[0-9_]+)?)?)',\n        relevance: 0\n      },\n      {\n        begin: /[-=]>/ // relevance booster\n      }\n    ]\n  }\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,CAAiB,SAASC,IAAT,CAAe,CAC9B,4DACA,MAAO,CACLC,OAAO,CAAE,CAAC,IAAD,CADJ,CAELC,QAAQ,CAAE,CACRC,OAAO,CACL,oEACA,4DADA,CAEA,sFAFA,CAGA,wEAHA,CAIA,oDAJA,CAKA,YACA,cARM,CASRC,QAAQ,CACN,oBACA,2FACA,gCACA,4BAbM,CAcRC,OAAO,CACL,YAfM,CAFL,CAmBLC,OAAO,CAAE,SAnBJ,CAoBLC,OAAO,CAAE,cApBJ,CAqBLC,QAAQ,CAAE,CACR,CACEC,SAAS,CAAE,SADb,CAEEC,KAAK,CAAE,wBAFT,CAGEC,SAAS,CAAE,CAHb,CADQ,CAMRX,IAAI,CAACY,OAAL,CACE,QADF,CAEE,QAFF,CAGE,CACEJ,QAAQ,CAAE,CAAC,MAAD,CADZ,CAHF,CANQ,CAaR,CAAE,mBACAC,SAAS,CAAE,QADb,CAEEC,KAAK,CAAE,2BACP,qFAHF,CAbQ,CAkBR,CAAE,yBACAD,SAAS,CAAE,MADb,CAEEC,KAAK,CAAE,gBAFT,CAlBQ,CAsBR,CAAE,2BACAD,SAAS,CAAE,MADb,CAEEC,KAAK,CAAE,kBAFT,CAGEC,SAAS,CAAE,CAHb,CAtBQ,CA2BR,CAAE,qEACAD,KAAK,CAAE,sBADT,CACiCC,SAAS,CAAE,CAD5C,CA3BQ,CA8BRX,IAAI,CAACa,OAAL,CAAab,IAAI,CAACc,gBAAlB,CAAoC,CAACL,SAAS,CAAE,QAAZ,CAAsBE,SAAS,CAAE,CAAjC,CAApC,CA9BQ,CA+BRX,IAAI,CAACa,OAAL,CAAab,IAAI,CAACe,iBAAlB,CAAqC,CAACT,OAAO,CAAE,IAAV,CAArC,CA/BQ,CAgCR,CACEG,SAAS,CAAE,QADb,CAEEC,KAAK,CACH,gCACA,qBADA,CAEA,oBAFA,CAGA,wDANJ,CAOEC,SAAS,CAAE,CAPb,CAhCQ,CAyCR,CACED,KAAK,CAAE,OADT,CACiB;AADjB,CAzCQ,CArBL,CAAP,CAmED,CArED"},"metadata":{},"sourceType":"module"}