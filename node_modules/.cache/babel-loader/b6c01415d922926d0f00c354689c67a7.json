{"ast":null,"code":"module.exports=/**\n * Known issues:\n *\n * - invalid hex string literals will be recognized as a double quoted strings\n *   but 'x' at the beginning of string will not be matched\n *\n * - delimited string literals are not checked for matching end delimiter\n *   (not possible to do with js regexp)\n *\n * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n *   also, content of token string is not validated to contain only valid D tokens\n *\n * - special token sequence rule is not strictly following D grammar (anything following #line\n *   up to the end of line is matched as special token sequence)\n */function(hljs){/**\n   * Language keywords\n   *\n   * @type {Object}\n   */var D_KEYWORDS={keyword:'abstract alias align asm assert auto body break byte case cast catch class '+'const continue debug default delete deprecated do else enum export extern final '+'finally for foreach foreach_reverse|10 goto if immutable import in inout int '+'interface invariant is lazy macro mixin module new nothrow out override package '+'pragma private protected public pure ref return scope shared static struct '+'super switch synchronized template this throw try typedef typeid typeof union '+'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 '+'__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',built_in:'bool cdouble cent cfloat char creal dchar delegate double dstring float function '+'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar '+'wstring',literal:'false null true'};/**\n   * Number literal regexps\n   *\n   * @type {String}\n   */var decimal_integer_re='(0|[1-9][\\\\d_]*)',decimal_integer_nosus_re='(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',binary_integer_re='0[bB][01_]+',hexadecimal_digits_re='([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',hexadecimal_integer_re='0[xX]'+hexadecimal_digits_re,decimal_exponent_re='([eE][+-]?'+decimal_integer_nosus_re+')',decimal_float_re='('+decimal_integer_nosus_re+'(\\\\.\\\\d*|'+decimal_exponent_re+')|'+'\\\\d+\\\\.'+decimal_integer_nosus_re+decimal_integer_nosus_re+'|'+'\\\\.'+decimal_integer_re+decimal_exponent_re+'?'+')',hexadecimal_float_re='(0[xX]('+hexadecimal_digits_re+'\\\\.'+hexadecimal_digits_re+'|'+'\\\\.?'+hexadecimal_digits_re+')[pP][+-]?'+decimal_integer_nosus_re+')',integer_re='('+decimal_integer_re+'|'+binary_integer_re+'|'+hexadecimal_integer_re+')',float_re='('+hexadecimal_float_re+'|'+decimal_float_re+')';/**\n   * Escape sequence supported in D string and character literals\n   *\n   * @type {String}\n   */var escape_sequence_re='\\\\\\\\('+'[\\'\"\\\\?\\\\\\\\abfnrtv]|'+// common escapes\n'u[\\\\dA-Fa-f]{4}|'+// four hex digit unicode codepoint\n'[0-7]{1,3}|'+// one to three octal digit ascii char code\n'x[\\\\dA-Fa-f]{2}|'+// two hex digit ascii char code\n'U[\\\\dA-Fa-f]{8}'+// eight hex digit unicode codepoint\n')|'+'&[a-zA-Z\\\\d]{2,};';// named character entity\n/**\n   * D integer number literals\n   *\n   * @type {Object}\n   */var D_INTEGER_MODE={className:'number',begin:'\\\\b'+integer_re+'(L|u|U|Lu|LU|uL|UL)?',relevance:0};/**\n   * [D_FLOAT_MODE description]\n   * @type {Object}\n   */var D_FLOAT_MODE={className:'number',begin:'\\\\b('+float_re+'([fF]|L|i|[fF]i|Li)?|'+integer_re+'(i|[fF]i|Li)'+')',relevance:0};/**\n   * D character literal\n   *\n   * @type {Object}\n   */var D_CHARACTER_MODE={className:'string',begin:'\\'('+escape_sequence_re+'|.)',end:'\\'',illegal:'.'};/**\n   * D string escape sequence\n   *\n   * @type {Object}\n   */var D_ESCAPE_SEQUENCE={begin:escape_sequence_re,relevance:0};/**\n   * D double quoted string literal\n   *\n   * @type {Object}\n   */var D_STRING_MODE={className:'string',begin:'\"',contains:[D_ESCAPE_SEQUENCE],end:'\"[cwd]?'};/**\n   * D wysiwyg and delimited string literals\n   *\n   * @type {Object}\n   */var D_WYSIWYG_DELIMITED_STRING_MODE={className:'string',begin:'[rq]\"',end:'\"[cwd]?',relevance:5};/**\n   * D alternate wysiwyg string literal\n   *\n   * @type {Object}\n   */var D_ALTERNATE_WYSIWYG_STRING_MODE={className:'string',begin:'`',end:'`[cwd]?'};/**\n   * D hexadecimal string literal\n   *\n   * @type {Object}\n   */var D_HEX_STRING_MODE={className:'string',begin:'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',relevance:10};/**\n   * D delimited string literal\n   *\n   * @type {Object}\n   */var D_TOKEN_STRING_MODE={className:'string',begin:'q\"\\\\{',end:'\\\\}\"'};/**\n   * Hashbang support\n   *\n   * @type {Object}\n   */var D_HASHBANG_MODE={className:'meta',begin:'^#!',end:'$',relevance:5};/**\n   * D special token sequence\n   *\n   * @type {Object}\n   */var D_SPECIAL_TOKEN_SEQUENCE_MODE={className:'meta',begin:'#(line)',end:'$',relevance:5};/**\n   * D attributes\n   *\n   * @type {Object}\n   */var D_ATTRIBUTE_MODE={className:'keyword',begin:'@[a-zA-Z_][a-zA-Z_\\\\d]*'};/**\n   * D nesting comment\n   *\n   * @type {Object}\n   */var D_NESTING_COMMENT_MODE=hljs.COMMENT('\\\\/\\\\+','\\\\+\\\\/',{contains:['self'],relevance:10});return{lexemes:hljs.UNDERSCORE_IDENT_RE,keywords:D_KEYWORDS,contains:[hljs.C_LINE_COMMENT_MODE,hljs.C_BLOCK_COMMENT_MODE,D_NESTING_COMMENT_MODE,D_HEX_STRING_MODE,D_STRING_MODE,D_WYSIWYG_DELIMITED_STRING_MODE,D_ALTERNATE_WYSIWYG_STRING_MODE,D_TOKEN_STRING_MODE,D_FLOAT_MODE,D_INTEGER_MODE,D_CHARACTER_MODE,D_HASHBANG_MODE,D_SPECIAL_TOKEN_SEQUENCE_MODE,D_ATTRIBUTE_MODE]};};","map":{"version":3,"names":["module","exports","hljs","D_KEYWORDS","keyword","built_in","literal","decimal_integer_re","decimal_integer_nosus_re","binary_integer_re","hexadecimal_digits_re","hexadecimal_integer_re","decimal_exponent_re","decimal_float_re","hexadecimal_float_re","integer_re","float_re","escape_sequence_re","D_INTEGER_MODE","className","begin","relevance","D_FLOAT_MODE","D_CHARACTER_MODE","end","illegal","D_ESCAPE_SEQUENCE","D_STRING_MODE","contains","D_WYSIWYG_DELIMITED_STRING_MODE","D_ALTERNATE_WYSIWYG_STRING_MODE","D_HEX_STRING_MODE","D_TOKEN_STRING_MODE","D_HASHBANG_MODE","D_SPECIAL_TOKEN_SEQUENCE_MODE","D_ATTRIBUTE_MODE","D_NESTING_COMMENT_MODE","COMMENT","lexemes","UNDERSCORE_IDENT_RE","keywords","C_LINE_COMMENT_MODE","C_BLOCK_COMMENT_MODE"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/d.js"],"sourcesContent":["module.exports = /**\n * Known issues:\n *\n * - invalid hex string literals will be recognized as a double quoted strings\n *   but 'x' at the beginning of string will not be matched\n *\n * - delimited string literals are not checked for matching end delimiter\n *   (not possible to do with js regexp)\n *\n * - content of token string is colored as a string (i.e. no keyword coloring inside a token string)\n *   also, content of token string is not validated to contain only valid D tokens\n *\n * - special token sequence rule is not strictly following D grammar (anything following #line\n *   up to the end of line is matched as special token sequence)\n */\n\nfunction(hljs) {\n  /**\n   * Language keywords\n   *\n   * @type {Object}\n   */\n  var D_KEYWORDS = {\n    keyword:\n      'abstract alias align asm assert auto body break byte case cast catch class ' +\n      'const continue debug default delete deprecated do else enum export extern final ' +\n      'finally for foreach foreach_reverse|10 goto if immutable import in inout int ' +\n      'interface invariant is lazy macro mixin module new nothrow out override package ' +\n      'pragma private protected public pure ref return scope shared static struct ' +\n      'super switch synchronized template this throw try typedef typeid typeof union ' +\n      'unittest version void volatile while with __FILE__ __LINE__ __gshared|10 ' +\n      '__thread __traits __DATE__ __EOF__ __TIME__ __TIMESTAMP__ __VENDOR__ __VERSION__',\n    built_in:\n      'bool cdouble cent cfloat char creal dchar delegate double dstring float function ' +\n      'idouble ifloat ireal long real short string ubyte ucent uint ulong ushort wchar ' +\n      'wstring',\n    literal:\n      'false null true'\n  };\n\n  /**\n   * Number literal regexps\n   *\n   * @type {String}\n   */\n  var decimal_integer_re = '(0|[1-9][\\\\d_]*)',\n    decimal_integer_nosus_re = '(0|[1-9][\\\\d_]*|\\\\d[\\\\d_]*|[\\\\d_]+?\\\\d)',\n    binary_integer_re = '0[bB][01_]+',\n    hexadecimal_digits_re = '([\\\\da-fA-F][\\\\da-fA-F_]*|_[\\\\da-fA-F][\\\\da-fA-F_]*)',\n    hexadecimal_integer_re = '0[xX]' + hexadecimal_digits_re,\n\n    decimal_exponent_re = '([eE][+-]?' + decimal_integer_nosus_re + ')',\n    decimal_float_re = '(' + decimal_integer_nosus_re + '(\\\\.\\\\d*|' + decimal_exponent_re + ')|' +\n                '\\\\d+\\\\.' + decimal_integer_nosus_re + decimal_integer_nosus_re + '|' +\n                '\\\\.' + decimal_integer_re + decimal_exponent_re + '?' +\n              ')',\n    hexadecimal_float_re = '(0[xX](' +\n                  hexadecimal_digits_re + '\\\\.' + hexadecimal_digits_re + '|'+\n                  '\\\\.?' + hexadecimal_digits_re +\n                 ')[pP][+-]?' + decimal_integer_nosus_re + ')',\n\n    integer_re = '(' +\n      decimal_integer_re + '|' +\n      binary_integer_re  + '|' +\n       hexadecimal_integer_re   +\n    ')',\n\n    float_re = '(' +\n      hexadecimal_float_re + '|' +\n      decimal_float_re  +\n    ')';\n\n  /**\n   * Escape sequence supported in D string and character literals\n   *\n   * @type {String}\n   */\n  var escape_sequence_re = '\\\\\\\\(' +\n              '[\\'\"\\\\?\\\\\\\\abfnrtv]|' +  // common escapes\n              'u[\\\\dA-Fa-f]{4}|' +     // four hex digit unicode codepoint\n              '[0-7]{1,3}|' +       // one to three octal digit ascii char code\n              'x[\\\\dA-Fa-f]{2}|' +    // two hex digit ascii char code\n              'U[\\\\dA-Fa-f]{8}' +      // eight hex digit unicode codepoint\n              ')|' +\n              '&[a-zA-Z\\\\d]{2,};';      // named character entity\n\n  /**\n   * D integer number literals\n   *\n   * @type {Object}\n   */\n  var D_INTEGER_MODE = {\n    className: 'number',\n      begin: '\\\\b' + integer_re + '(L|u|U|Lu|LU|uL|UL)?',\n      relevance: 0\n  };\n\n  /**\n   * [D_FLOAT_MODE description]\n   * @type {Object}\n   */\n  var D_FLOAT_MODE = {\n    className: 'number',\n    begin: '\\\\b(' +\n        float_re + '([fF]|L|i|[fF]i|Li)?|' +\n        integer_re + '(i|[fF]i|Li)' +\n      ')',\n    relevance: 0\n  };\n\n  /**\n   * D character literal\n   *\n   * @type {Object}\n   */\n  var D_CHARACTER_MODE = {\n    className: 'string',\n    begin: '\\'(' + escape_sequence_re + '|.)', end: '\\'',\n    illegal: '.'\n  };\n\n  /**\n   * D string escape sequence\n   *\n   * @type {Object}\n   */\n  var D_ESCAPE_SEQUENCE = {\n    begin: escape_sequence_re,\n    relevance: 0\n  };\n\n  /**\n   * D double quoted string literal\n   *\n   * @type {Object}\n   */\n  var D_STRING_MODE = {\n    className: 'string',\n    begin: '\"',\n    contains: [D_ESCAPE_SEQUENCE],\n    end: '\"[cwd]?'\n  };\n\n  /**\n   * D wysiwyg and delimited string literals\n   *\n   * @type {Object}\n   */\n  var D_WYSIWYG_DELIMITED_STRING_MODE = {\n    className: 'string',\n    begin: '[rq]\"',\n    end: '\"[cwd]?',\n    relevance: 5\n  };\n\n  /**\n   * D alternate wysiwyg string literal\n   *\n   * @type {Object}\n   */\n  var D_ALTERNATE_WYSIWYG_STRING_MODE = {\n    className: 'string',\n    begin: '`',\n    end: '`[cwd]?'\n  };\n\n  /**\n   * D hexadecimal string literal\n   *\n   * @type {Object}\n   */\n  var D_HEX_STRING_MODE = {\n    className: 'string',\n    begin: 'x\"[\\\\da-fA-F\\\\s\\\\n\\\\r]*\"[cwd]?',\n    relevance: 10\n  };\n\n  /**\n   * D delimited string literal\n   *\n   * @type {Object}\n   */\n  var D_TOKEN_STRING_MODE = {\n    className: 'string',\n    begin: 'q\"\\\\{',\n    end: '\\\\}\"'\n  };\n\n  /**\n   * Hashbang support\n   *\n   * @type {Object}\n   */\n  var D_HASHBANG_MODE = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D special token sequence\n   *\n   * @type {Object}\n   */\n  var D_SPECIAL_TOKEN_SEQUENCE_MODE = {\n    className: 'meta',\n    begin: '#(line)',\n    end: '$',\n    relevance: 5\n  };\n\n  /**\n   * D attributes\n   *\n   * @type {Object}\n   */\n  var D_ATTRIBUTE_MODE = {\n    className: 'keyword',\n    begin: '@[a-zA-Z_][a-zA-Z_\\\\d]*'\n  };\n\n  /**\n   * D nesting comment\n   *\n   * @type {Object}\n   */\n  var D_NESTING_COMMENT_MODE = hljs.COMMENT(\n    '\\\\/\\\\+',\n    '\\\\+\\\\/',\n    {\n      contains: ['self'],\n      relevance: 10\n    }\n  );\n\n  return {\n    lexemes: hljs.UNDERSCORE_IDENT_RE,\n    keywords: D_KEYWORDS,\n    contains: [\n      hljs.C_LINE_COMMENT_MODE,\n        hljs.C_BLOCK_COMMENT_MODE,\n        D_NESTING_COMMENT_MODE,\n        D_HEX_STRING_MODE,\n        D_STRING_MODE,\n        D_WYSIWYG_DELIMITED_STRING_MODE,\n        D_ALTERNATE_WYSIWYG_STRING_MODE,\n        D_TOKEN_STRING_MODE,\n        D_FLOAT_MODE,\n        D_INTEGER_MODE,\n        D_CHARACTER_MODE,\n        D_HASHBANG_MODE,\n        D_SPECIAL_TOKEN_SEQUENCE_MODE,\n        D_ATTRIBUTE_MODE\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}