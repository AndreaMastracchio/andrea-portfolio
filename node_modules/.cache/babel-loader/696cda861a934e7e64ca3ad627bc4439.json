{"ast":null,"code":"module.exports=function(hljs){var KEYWORDS={keyword:// JS keywords\n'in if for while finally new do return else break catch instanceof throw try this '+'switch continue typeof delete debugger super yield import export from as default await '+// Coffee keywords\n'then unless until loop of by when and or is isnt not',literal:// JS literals\n'true false null undefined '+// Coffee literals\n'yes no on off',built_in:'npm require console print module global window document'};var JS_IDENT_RE='[A-Za-z$_][0-9A-Za-z$_]*';var SUBST={className:'subst',begin:/#\\{/,end:/}/,keywords:KEYWORDS};var EXPRESSIONS=[hljs.BINARY_NUMBER_MODE,hljs.inherit(hljs.C_NUMBER_MODE,{starts:{end:'(\\\\s*/)?',relevance:0}}),// a number tries to eat the following slash to prevent treating it as a regexp\n{className:'string',variants:[{begin:/'''/,end:/'''/,contains:[hljs.BACKSLASH_ESCAPE]},{begin:/'/,end:/'/,contains:[hljs.BACKSLASH_ESCAPE]},{begin:/\"\"\"/,end:/\"\"\"/,contains:[hljs.BACKSLASH_ESCAPE,SUBST]},{begin:/\"/,end:/\"/,contains:[hljs.BACKSLASH_ESCAPE,SUBST]}]},{className:'regexp',variants:[{begin:'///',end:'///',contains:[SUBST,hljs.HASH_COMMENT_MODE]},{begin:'//[gim]*',relevance:0},{// regex can't start with space to parse x / 2 / 3 as two divisions\n// regex can't start with *, and it supports an \"illegal\" in the main mode\nbegin:/\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/}]},{begin:'@'+JS_IDENT_RE// relevance booster\n},{subLanguage:'javascript',excludeBegin:true,excludeEnd:true,variants:[{begin:'```',end:'```'},{begin:'`',end:'`'}]}];SUBST.contains=EXPRESSIONS;var TITLE=hljs.inherit(hljs.TITLE_MODE,{begin:JS_IDENT_RE});var PARAMS_RE='(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';var PARAMS={className:'params',begin:'\\\\([^\\\\(]',returnBegin:true,/* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */contains:[{begin:/\\(/,end:/\\)/,keywords:KEYWORDS,contains:['self'].concat(EXPRESSIONS)}]};return{aliases:['coffee','cson','iced'],keywords:KEYWORDS,illegal:/\\/\\*/,contains:EXPRESSIONS.concat([hljs.COMMENT('###','###'),hljs.HASH_COMMENT_MODE,{className:'function',begin:'^\\\\s*'+JS_IDENT_RE+'\\\\s*=\\\\s*'+PARAMS_RE,end:'[-=]>',returnBegin:true,contains:[TITLE,PARAMS]},{// anonymous function start\nbegin:/[:\\(,=]\\s*/,relevance:0,contains:[{className:'function',begin:PARAMS_RE,end:'[-=]>',returnBegin:true,contains:[PARAMS]}]},{className:'class',beginKeywords:'class',end:'$',illegal:/[:=\"\\[\\]]/,contains:[{beginKeywords:'extends',endsWithParent:true,illegal:/[:=\"\\[\\]]/,contains:[TITLE]},TITLE]},{begin:JS_IDENT_RE+':',end:':',returnBegin:true,returnEnd:true,relevance:0}])};};","map":{"version":3,"names":["module","exports","hljs","KEYWORDS","keyword","literal","built_in","JS_IDENT_RE","SUBST","className","begin","end","keywords","EXPRESSIONS","BINARY_NUMBER_MODE","inherit","C_NUMBER_MODE","starts","relevance","variants","contains","BACKSLASH_ESCAPE","HASH_COMMENT_MODE","subLanguage","excludeBegin","excludeEnd","TITLE","TITLE_MODE","PARAMS_RE","PARAMS","returnBegin","concat","aliases","illegal","COMMENT","beginKeywords","endsWithParent","returnEnd"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/coffeescript.js"],"sourcesContent":["module.exports = function(hljs) {\n  var KEYWORDS = {\n    keyword:\n      // JS keywords\n      'in if for while finally new do return else break catch instanceof throw try this ' +\n      'switch continue typeof delete debugger super yield import export from as default await ' +\n      // Coffee keywords\n      'then unless until loop of by when and or is isnt not',\n    literal:\n      // JS literals\n      'true false null undefined ' +\n      // Coffee literals\n      'yes no on off',\n    built_in:\n      'npm require console print module global window document'\n  };\n  var JS_IDENT_RE = '[A-Za-z$_][0-9A-Za-z$_]*';\n  var SUBST = {\n    className: 'subst',\n    begin: /#\\{/, end: /}/,\n    keywords: KEYWORDS\n  };\n  var EXPRESSIONS = [\n    hljs.BINARY_NUMBER_MODE,\n    hljs.inherit(hljs.C_NUMBER_MODE, {starts: {end: '(\\\\s*/)?', relevance: 0}}), // a number tries to eat the following slash to prevent treating it as a regexp\n    {\n      className: 'string',\n      variants: [\n        {\n          begin: /'''/, end: /'''/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /'/, end: /'/,\n          contains: [hljs.BACKSLASH_ESCAPE]\n        },\n        {\n          begin: /\"\"\"/, end: /\"\"\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        },\n        {\n          begin: /\"/, end: /\"/,\n          contains: [hljs.BACKSLASH_ESCAPE, SUBST]\n        }\n      ]\n    },\n    {\n      className: 'regexp',\n      variants: [\n        {\n          begin: '///', end: '///',\n          contains: [SUBST, hljs.HASH_COMMENT_MODE]\n        },\n        {\n          begin: '//[gim]*',\n          relevance: 0\n        },\n        {\n          // regex can't start with space to parse x / 2 / 3 as two divisions\n          // regex can't start with *, and it supports an \"illegal\" in the main mode\n          begin: /\\/(?![ *])(\\\\\\/|.)*?\\/[gim]*(?=\\W|$)/\n        }\n      ]\n    },\n    {\n      begin: '@' + JS_IDENT_RE // relevance booster\n    },\n    {\n      subLanguage: 'javascript',\n      excludeBegin: true, excludeEnd: true,\n      variants: [\n        {\n          begin: '```', end: '```',\n        },\n        {\n          begin: '`', end: '`',\n        }\n      ]\n    }\n  ];\n  SUBST.contains = EXPRESSIONS;\n\n  var TITLE = hljs.inherit(hljs.TITLE_MODE, {begin: JS_IDENT_RE});\n  var PARAMS_RE = '(\\\\(.*\\\\))?\\\\s*\\\\B[-=]>';\n  var PARAMS = {\n    className: 'params',\n    begin: '\\\\([^\\\\(]', returnBegin: true,\n    /* We need another contained nameless mode to not have every nested\n    pair of parens to be called \"params\" */\n    contains: [{\n      begin: /\\(/, end: /\\)/,\n      keywords: KEYWORDS,\n      contains: ['self'].concat(EXPRESSIONS)\n    }]\n  };\n\n  return {\n    aliases: ['coffee', 'cson', 'iced'],\n    keywords: KEYWORDS,\n    illegal: /\\/\\*/,\n    contains: EXPRESSIONS.concat([\n      hljs.COMMENT('###', '###'),\n      hljs.HASH_COMMENT_MODE,\n      {\n        className: 'function',\n        begin: '^\\\\s*' + JS_IDENT_RE + '\\\\s*=\\\\s*' + PARAMS_RE, end: '[-=]>',\n        returnBegin: true,\n        contains: [TITLE, PARAMS]\n      },\n      {\n        // anonymous function start\n        begin: /[:\\(,=]\\s*/,\n        relevance: 0,\n        contains: [\n          {\n            className: 'function',\n            begin: PARAMS_RE, end: '[-=]>',\n            returnBegin: true,\n            contains: [PARAMS]\n          }\n        ]\n      },\n      {\n        className: 'class',\n        beginKeywords: 'class',\n        end: '$',\n        illegal: /[:=\"\\[\\]]/,\n        contains: [\n          {\n            beginKeywords: 'extends',\n            endsWithParent: true,\n            illegal: /[:=\"\\[\\]]/,\n            contains: [TITLE]\n          },\n          TITLE\n        ]\n      },\n      {\n        begin: JS_IDENT_RE + ':', end: ':',\n        returnBegin: true, returnEnd: true,\n        relevance: 0\n      }\n    ])\n  };\n};"],"mappings":"AAAAA,MAAM,CAACC,OAAP,CAAiB,SAASC,IAAT,CAAe,CAC9B,GAAIC,SAAQ,CAAG,CACbC,OAAO,CACL;AACA,oFACA,yFADA,CAEA;AACA,sDANW,CAObC,OAAO,CACL;AACA,6BACA;AACA,eAXW,CAYbC,QAAQ,CACN,yDAbW,CAAf,CAeA,GAAIC,YAAW,CAAG,0BAAlB,CACA,GAAIC,MAAK,CAAG,CACVC,SAAS,CAAE,OADD,CAEVC,KAAK,CAAE,KAFG,CAEIC,GAAG,CAAE,GAFT,CAGVC,QAAQ,CAAET,QAHA,CAAZ,CAKA,GAAIU,YAAW,CAAG,CAChBX,IAAI,CAACY,kBADW,CAEhBZ,IAAI,CAACa,OAAL,CAAab,IAAI,CAACc,aAAlB,CAAiC,CAACC,MAAM,CAAE,CAACN,GAAG,CAAE,UAAN,CAAkBO,SAAS,CAAE,CAA7B,CAAT,CAAjC,CAFgB,CAE6D;AAC7E,CACET,SAAS,CAAE,QADb,CAEEU,QAAQ,CAAE,CACR,CACET,KAAK,CAAE,KADT,CACgBC,GAAG,CAAE,KADrB,CAEES,QAAQ,CAAE,CAAClB,IAAI,CAACmB,gBAAN,CAFZ,CADQ,CAKR,CACEX,KAAK,CAAE,GADT,CACcC,GAAG,CAAE,GADnB,CAEES,QAAQ,CAAE,CAAClB,IAAI,CAACmB,gBAAN,CAFZ,CALQ,CASR,CACEX,KAAK,CAAE,KADT,CACgBC,GAAG,CAAE,KADrB,CAEES,QAAQ,CAAE,CAAClB,IAAI,CAACmB,gBAAN,CAAwBb,KAAxB,CAFZ,CATQ,CAaR,CACEE,KAAK,CAAE,GADT,CACcC,GAAG,CAAE,GADnB,CAEES,QAAQ,CAAE,CAAClB,IAAI,CAACmB,gBAAN,CAAwBb,KAAxB,CAFZ,CAbQ,CAFZ,CAHgB,CAwBhB,CACEC,SAAS,CAAE,QADb,CAEEU,QAAQ,CAAE,CACR,CACET,KAAK,CAAE,KADT,CACgBC,GAAG,CAAE,KADrB,CAEES,QAAQ,CAAE,CAACZ,KAAD,CAAQN,IAAI,CAACoB,iBAAb,CAFZ,CADQ,CAKR,CACEZ,KAAK,CAAE,UADT,CAEEQ,SAAS,CAAE,CAFb,CALQ,CASR,CACE;AACA;AACAR,KAAK,CAAE,sCAHT,CATQ,CAFZ,CAxBgB,CA0ChB,CACEA,KAAK,CAAE,IAAMH,WAAY;AAD3B,CA1CgB,CA6ChB,CACEgB,WAAW,CAAE,YADf,CAEEC,YAAY,CAAE,IAFhB,CAEsBC,UAAU,CAAE,IAFlC,CAGEN,QAAQ,CAAE,CACR,CACET,KAAK,CAAE,KADT,CACgBC,GAAG,CAAE,KADrB,CADQ,CAIR,CACED,KAAK,CAAE,GADT,CACcC,GAAG,CAAE,GADnB,CAJQ,CAHZ,CA7CgB,CAAlB,CA0DAH,KAAK,CAACY,QAAN,CAAiBP,WAAjB,CAEA,GAAIa,MAAK,CAAGxB,IAAI,CAACa,OAAL,CAAab,IAAI,CAACyB,UAAlB,CAA8B,CAACjB,KAAK,CAAEH,WAAR,CAA9B,CAAZ,CACA,GAAIqB,UAAS,CAAG,yBAAhB,CACA,GAAIC,OAAM,CAAG,CACXpB,SAAS,CAAE,QADA,CAEXC,KAAK,CAAE,WAFI,CAESoB,WAAW,CAAE,IAFtB,CAGX;AACJ,2CACIV,QAAQ,CAAE,CAAC,CACTV,KAAK,CAAE,IADE,CACIC,GAAG,CAAE,IADT,CAETC,QAAQ,CAAET,QAFD,CAGTiB,QAAQ,CAAE,CAAC,MAAD,EAASW,MAAT,CAAgBlB,WAAhB,CAHD,CAAD,CALC,CAAb,CAYA,MAAO,CACLmB,OAAO,CAAE,CAAC,QAAD,CAAW,MAAX,CAAmB,MAAnB,CADJ,CAELpB,QAAQ,CAAET,QAFL,CAGL8B,OAAO,CAAE,MAHJ,CAILb,QAAQ,CAAEP,WAAW,CAACkB,MAAZ,CAAmB,CAC3B7B,IAAI,CAACgC,OAAL,CAAa,KAAb,CAAoB,KAApB,CAD2B,CAE3BhC,IAAI,CAACoB,iBAFsB,CAG3B,CACEb,SAAS,CAAE,UADb,CAEEC,KAAK,CAAE,QAAUH,WAAV,CAAwB,WAAxB,CAAsCqB,SAF/C,CAE0DjB,GAAG,CAAE,OAF/D,CAGEmB,WAAW,CAAE,IAHf,CAIEV,QAAQ,CAAE,CAACM,KAAD,CAAQG,MAAR,CAJZ,CAH2B,CAS3B,CACE;AACAnB,KAAK,CAAE,YAFT,CAGEQ,SAAS,CAAE,CAHb,CAIEE,QAAQ,CAAE,CACR,CACEX,SAAS,CAAE,UADb,CAEEC,KAAK,CAAEkB,SAFT,CAEoBjB,GAAG,CAAE,OAFzB,CAGEmB,WAAW,CAAE,IAHf,CAIEV,QAAQ,CAAE,CAACS,MAAD,CAJZ,CADQ,CAJZ,CAT2B,CAsB3B,CACEpB,SAAS,CAAE,OADb,CAEE0B,aAAa,CAAE,OAFjB,CAGExB,GAAG,CAAE,GAHP,CAIEsB,OAAO,CAAE,WAJX,CAKEb,QAAQ,CAAE,CACR,CACEe,aAAa,CAAE,SADjB,CAEEC,cAAc,CAAE,IAFlB,CAGEH,OAAO,CAAE,WAHX,CAIEb,QAAQ,CAAE,CAACM,KAAD,CAJZ,CADQ,CAORA,KAPQ,CALZ,CAtB2B,CAqC3B,CACEhB,KAAK,CAAEH,WAAW,CAAG,GADvB,CAC4BI,GAAG,CAAE,GADjC,CAEEmB,WAAW,CAAE,IAFf,CAEqBO,SAAS,CAAE,IAFhC,CAGEnB,SAAS,CAAE,CAHb,CArC2B,CAAnB,CAJL,CAAP,CAgDD,CAhJD"},"metadata":{},"sourceType":"module"}