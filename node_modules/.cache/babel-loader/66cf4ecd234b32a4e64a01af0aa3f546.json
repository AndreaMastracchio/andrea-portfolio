{"ast":null,"code":"'use strict';module.exports=parser;parser.displayName='parser';parser.aliases=[];function parser(Prism){;(function(Prism){var parser=Prism.languages.parser=Prism.languages.extend('markup',{keyword:{pattern:/(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,lookbehind:true},variable:{pattern:/(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,lookbehind:true,inside:{punctuation:/\\.|:+/}},function:{pattern:/(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,lookbehind:true,inside:{keyword:{pattern:/(^@)(?:GET_|SET_)/,lookbehind:true},punctuation:/\\.|:+/}},escape:{pattern:/\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,alias:'builtin'},punctuation:/[\\[\\](){};]/});parser=Prism.languages.insertBefore('parser','keyword',{'parser-comment':{pattern:/(\\s)#.*/,lookbehind:true,alias:'comment'},expression:{// Allow for 3 levels of depth\npattern:/(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,greedy:true,lookbehind:true,inside:{string:{pattern:/(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,lookbehind:true},keyword:parser.keyword,variable:parser.variable,function:parser.function,boolean:/\\b(?:true|false)\\b/,number:/\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,escape:parser.escape,operator:/[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,punctuation:parser.punctuation}}});parser=Prism.languages.insertBefore('inside','punctuation',{expression:parser.expression,keyword:parser.keyword,variable:parser.variable,function:parser.function,escape:parser.escape,'parser-punctuation':{pattern:parser.punctuation,alias:'punctuation'}},parser['tag'].inside['attr-value']);})(Prism);}","map":{"version":3,"names":["module","exports","parser","displayName","aliases","Prism","languages","extend","keyword","pattern","lookbehind","variable","inside","punctuation","function","escape","alias","insertBefore","expression","greedy","string","boolean","number","operator"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/parser.js"],"sourcesContent":["'use strict'\n\nmodule.exports = parser\nparser.displayName = 'parser'\nparser.aliases = []\nfunction parser(Prism) {\n  ;(function(Prism) {\n    var parser = (Prism.languages.parser = Prism.languages.extend('markup', {\n      keyword: {\n        pattern: /(^|[^^])(?:\\^(?:case|eval|for|if|switch|throw)\\b|@(?:BASE|CLASS|GET(?:_DEFAULT)?|OPTIONS|SET_DEFAULT|USE)\\b)/,\n        lookbehind: true\n      },\n      variable: {\n        pattern: /(^|[^^])\\B\\$(?:\\w+|(?=[.{]))(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          punctuation: /\\.|:+/\n        }\n      },\n      function: {\n        pattern: /(^|[^^])\\B[@^]\\w+(?:(?:\\.|::?)\\w+)*(?:\\.|::?)?/,\n        lookbehind: true,\n        inside: {\n          keyword: {\n            pattern: /(^@)(?:GET_|SET_)/,\n            lookbehind: true\n          },\n          punctuation: /\\.|:+/\n        }\n      },\n      escape: {\n        pattern: /\\^(?:[$^;@()\\[\\]{}\"':]|#[a-f\\d]*)/i,\n        alias: 'builtin'\n      },\n      punctuation: /[\\[\\](){};]/\n    }))\n    parser = Prism.languages.insertBefore('parser', 'keyword', {\n      'parser-comment': {\n        pattern: /(\\s)#.*/,\n        lookbehind: true,\n        alias: 'comment'\n      },\n      expression: {\n        // Allow for 3 levels of depth\n        pattern: /(^|[^^])\\((?:[^()]|\\((?:[^()]|\\((?:[^()])*\\))*\\))*\\)/,\n        greedy: true,\n        lookbehind: true,\n        inside: {\n          string: {\n            pattern: /(^|[^^])([\"'])(?:(?!\\2)[^^]|\\^[\\s\\S])*\\2/,\n            lookbehind: true\n          },\n          keyword: parser.keyword,\n          variable: parser.variable,\n          function: parser.function,\n          boolean: /\\b(?:true|false)\\b/,\n          number: /\\b(?:0x[a-f\\d]+|\\d+\\.?\\d*(?:e[+-]?\\d+)?)\\b/i,\n          escape: parser.escape,\n          operator: /[~+*\\/\\\\%]|!(?:\\|\\|?|=)?|&&?|\\|\\|?|==|<[<=]?|>[>=]?|-[fd]?|\\b(?:def|eq|ge|gt|in|is|le|lt|ne)\\b/,\n          punctuation: parser.punctuation\n        }\n      }\n    })\n    parser = Prism.languages.insertBefore(\n      'inside',\n      'punctuation',\n      {\n        expression: parser.expression,\n        keyword: parser.keyword,\n        variable: parser.variable,\n        function: parser.function,\n        escape: parser.escape,\n        'parser-punctuation': {\n          pattern: parser.punctuation,\n          alias: 'punctuation'\n        }\n      },\n      parser['tag'].inside['attr-value']\n    )\n  })(Prism)\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,EAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrB,CAAC,CAAC,SAASA,KAAT,CAAgB,CAChB,GAAIH,OAAM,CAAIG,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyBG,KAAK,CAACC,SAAN,CAAgBC,MAAhB,CAAuB,QAAvB,CAAiC,CACtEC,OAAO,CAAE,CACPC,OAAO,CAAE,8GADF,CAEPC,UAAU,CAAE,IAFL,CAD6D,CAKtEC,QAAQ,CAAE,CACRF,OAAO,CAAE,2DADD,CAERC,UAAU,CAAE,IAFJ,CAGRE,MAAM,CAAE,CACNC,WAAW,CAAE,OADP,CAHA,CAL4D,CAYtEC,QAAQ,CAAE,CACRL,OAAO,CAAE,gDADD,CAERC,UAAU,CAAE,IAFJ,CAGRE,MAAM,CAAE,CACNJ,OAAO,CAAE,CACPC,OAAO,CAAE,mBADF,CAEPC,UAAU,CAAE,IAFL,CADH,CAKNG,WAAW,CAAE,OALP,CAHA,CAZ4D,CAuBtEE,MAAM,CAAE,CACNN,OAAO,CAAE,oCADH,CAENO,KAAK,CAAE,SAFD,CAvB8D,CA2BtEH,WAAW,CAAE,aA3ByD,CAAjC,CAAvC,CA6BAX,MAAM,CAAGG,KAAK,CAACC,SAAN,CAAgBW,YAAhB,CAA6B,QAA7B,CAAuC,SAAvC,CAAkD,CACzD,iBAAkB,CAChBR,OAAO,CAAE,SADO,CAEhBC,UAAU,CAAE,IAFI,CAGhBM,KAAK,CAAE,SAHS,CADuC,CAMzDE,UAAU,CAAE,CACV;AACAT,OAAO,CAAE,sDAFC,CAGVU,MAAM,CAAE,IAHE,CAIVT,UAAU,CAAE,IAJF,CAKVE,MAAM,CAAE,CACNQ,MAAM,CAAE,CACNX,OAAO,CAAE,0CADH,CAENC,UAAU,CAAE,IAFN,CADF,CAKNF,OAAO,CAAEN,MAAM,CAACM,OALV,CAMNG,QAAQ,CAAET,MAAM,CAACS,QANX,CAONG,QAAQ,CAAEZ,MAAM,CAACY,QAPX,CAQNO,OAAO,CAAE,oBARH,CASNC,MAAM,CAAE,6CATF,CAUNP,MAAM,CAAEb,MAAM,CAACa,MAVT,CAWNQ,QAAQ,CAAE,gGAXJ,CAYNV,WAAW,CAAEX,MAAM,CAACW,WAZd,CALE,CAN6C,CAAlD,CAAT,CA2BAX,MAAM,CAAGG,KAAK,CAACC,SAAN,CAAgBW,YAAhB,CACP,QADO,CAEP,aAFO,CAGP,CACEC,UAAU,CAAEhB,MAAM,CAACgB,UADrB,CAEEV,OAAO,CAAEN,MAAM,CAACM,OAFlB,CAGEG,QAAQ,CAAET,MAAM,CAACS,QAHnB,CAIEG,QAAQ,CAAEZ,MAAM,CAACY,QAJnB,CAKEC,MAAM,CAAEb,MAAM,CAACa,MALjB,CAME,qBAAsB,CACpBN,OAAO,CAAEP,MAAM,CAACW,WADI,CAEpBG,KAAK,CAAE,aAFa,CANxB,CAHO,CAcPd,MAAM,CAAC,KAAD,CAAN,CAAcU,MAAd,CAAqB,YAArB,CAdO,CAAT,CAgBD,CAzEA,EAyEEP,KAzEF,EA0EF"},"metadata":{},"sourceType":"module"}