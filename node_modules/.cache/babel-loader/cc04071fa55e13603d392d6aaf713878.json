{"ast":null,"code":"module.exports=function(hljs){var COMMENT={variants:[hljs.COMMENT('--','$'),hljs.COMMENT('{-','-}',{contains:['self']})]};var PRAGMA={className:'meta',begin:'{-#',end:'#-}'};var PREPROCESSOR={className:'meta',begin:'^#',end:'$'};var CONSTRUCTOR={className:'type',begin:'\\\\b[A-Z][\\\\w\\']*',// TODO: other constructors (build-in, infix).\nrelevance:0};var LIST={begin:'\\\\(',end:'\\\\)',illegal:'\"',contains:[PRAGMA,PREPROCESSOR,{className:'type',begin:'\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},hljs.inherit(hljs.TITLE_MODE,{begin:'[_a-z][\\\\w\\']*'}),COMMENT]};var RECORD={begin:'{',end:'}',contains:LIST.contains};return{aliases:['hs'],keywords:'let in if then else case of where do module import hiding '+'qualified type data newtype deriving class instance as default '+'infix infixl infixr foreign export ccall stdcall cplusplus '+'jvm dotnet safe unsafe family forall mdo proc rec',contains:[// Top-level constructions.\n{beginKeywords:'module',end:'where',keywords:'module where',contains:[LIST,COMMENT],illegal:'\\\\W\\\\.|;'},{begin:'\\\\bimport\\\\b',end:'$',keywords:'import qualified as hiding',contains:[LIST,COMMENT],illegal:'\\\\W\\\\.|;'},{className:'class',begin:'^(\\\\s*)?(class|instance)\\\\b',end:'where',keywords:'class family instance where',contains:[CONSTRUCTOR,LIST,COMMENT]},{className:'class',begin:'\\\\b(data|(new)?type)\\\\b',end:'$',keywords:'data family type newtype deriving',contains:[PRAGMA,CONSTRUCTOR,LIST,RECORD,COMMENT]},{beginKeywords:'default',end:'$',contains:[CONSTRUCTOR,LIST,COMMENT]},{beginKeywords:'infix infixl infixr',end:'$',contains:[hljs.C_NUMBER_MODE,COMMENT]},{begin:'\\\\bforeign\\\\b',end:'$',keywords:'foreign import export ccall stdcall cplusplus jvm '+'dotnet safe unsafe',contains:[CONSTRUCTOR,hljs.QUOTE_STRING_MODE,COMMENT]},{className:'meta',begin:'#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell',end:'$'},// \"Whitespaces\".\nPRAGMA,PREPROCESSOR,// Literals and names.\n// TODO: characters.\nhljs.QUOTE_STRING_MODE,hljs.C_NUMBER_MODE,CONSTRUCTOR,hljs.inherit(hljs.TITLE_MODE,{begin:'^[_a-z][\\\\w\\']*'}),COMMENT,{begin:'->|<-'}// No markup, relevance booster\n]};};","map":{"version":3,"names":["module","exports","hljs","COMMENT","variants","contains","PRAGMA","className","begin","end","PREPROCESSOR","CONSTRUCTOR","relevance","LIST","illegal","inherit","TITLE_MODE","RECORD","aliases","keywords","beginKeywords","C_NUMBER_MODE","QUOTE_STRING_MODE"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/haskell.js"],"sourcesContent":["module.exports = function(hljs) {\n  var COMMENT = {\n    variants: [\n      hljs.COMMENT('--', '$'),\n      hljs.COMMENT(\n        '{-',\n        '-}',\n        {\n          contains: ['self']\n        }\n      )\n    ]\n  };\n\n  var PRAGMA = {\n    className: 'meta',\n    begin: '{-#', end: '#-}'\n  };\n\n  var PREPROCESSOR = {\n    className: 'meta',\n    begin: '^#', end: '$'\n  };\n\n  var CONSTRUCTOR = {\n    className: 'type',\n    begin: '\\\\b[A-Z][\\\\w\\']*', // TODO: other constructors (build-in, infix).\n    relevance: 0\n  };\n\n  var LIST = {\n    begin: '\\\\(', end: '\\\\)',\n    illegal: '\"',\n    contains: [\n      PRAGMA,\n      PREPROCESSOR,\n      {className: 'type', begin: '\\\\b[A-Z][\\\\w]*(\\\\((\\\\.\\\\.|,|\\\\w+)\\\\))?'},\n      hljs.inherit(hljs.TITLE_MODE, {begin: '[_a-z][\\\\w\\']*'}),\n      COMMENT\n    ]\n  };\n\n  var RECORD = {\n    begin: '{', end: '}',\n    contains: LIST.contains\n  };\n\n  return {\n    aliases: ['hs'],\n    keywords:\n      'let in if then else case of where do module import hiding ' +\n      'qualified type data newtype deriving class instance as default ' +\n      'infix infixl infixr foreign export ccall stdcall cplusplus ' +\n      'jvm dotnet safe unsafe family forall mdo proc rec',\n    contains: [\n\n      // Top-level constructions.\n\n      {\n        beginKeywords: 'module', end: 'where',\n        keywords: 'module where',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n      {\n        begin: '\\\\bimport\\\\b', end: '$',\n        keywords: 'import qualified as hiding',\n        contains: [LIST, COMMENT],\n        illegal: '\\\\W\\\\.|;'\n      },\n\n      {\n        className: 'class',\n        begin: '^(\\\\s*)?(class|instance)\\\\b', end: 'where',\n        keywords: 'class family instance where',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        className: 'class',\n        begin: '\\\\b(data|(new)?type)\\\\b', end: '$',\n        keywords: 'data family type newtype deriving',\n        contains: [PRAGMA, CONSTRUCTOR, LIST, RECORD, COMMENT]\n      },\n      {\n        beginKeywords: 'default', end: '$',\n        contains: [CONSTRUCTOR, LIST, COMMENT]\n      },\n      {\n        beginKeywords: 'infix infixl infixr', end: '$',\n        contains: [hljs.C_NUMBER_MODE, COMMENT]\n      },\n      {\n        begin: '\\\\bforeign\\\\b', end: '$',\n        keywords: 'foreign import export ccall stdcall cplusplus jvm ' +\n                  'dotnet safe unsafe',\n        contains: [CONSTRUCTOR, hljs.QUOTE_STRING_MODE, COMMENT]\n      },\n      {\n        className: 'meta',\n        begin: '#!\\\\/usr\\\\/bin\\\\/env\\ runhaskell', end: '$'\n      },\n\n      // \"Whitespaces\".\n\n      PRAGMA,\n      PREPROCESSOR,\n\n      // Literals and names.\n\n      // TODO: characters.\n      hljs.QUOTE_STRING_MODE,\n      hljs.C_NUMBER_MODE,\n      CONSTRUCTOR,\n      hljs.inherit(hljs.TITLE_MODE, {begin: '^[_a-z][\\\\w\\']*'}),\n\n      COMMENT,\n\n      {begin: '->|<-'} // No markup, relevance booster\n    ]\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}