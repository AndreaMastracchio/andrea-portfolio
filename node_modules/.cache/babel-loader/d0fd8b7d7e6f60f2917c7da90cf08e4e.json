{"ast":null,"code":"module.exports=function(hljs){var SCHEME_IDENT_RE='[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';var SCHEME_SIMPLE_NUMBER_RE='(\\\\-|\\\\+)?\\\\d+([./]\\\\d+)?';var SCHEME_COMPLEX_NUMBER_RE=SCHEME_SIMPLE_NUMBER_RE+'[+\\\\-]'+SCHEME_SIMPLE_NUMBER_RE+'i';var BUILTINS={'builtin-name':'case-lambda call/cc class define-class exit-handler field import '+'inherit init-field interface let*-values let-values let/ec mixin '+'opt-lambda override protect provide public rename require '+'require-for-syntax syntax syntax-case syntax-error unit/sig unless '+'when with-syntax and begin call-with-current-continuation '+'call-with-input-file call-with-output-file case cond define '+'define-syntax delay do dynamic-wind else for-each if lambda let let* '+'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / '+'; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan '+'boolean? caar cadr call-with-input-file call-with-output-file '+'call-with-values car cdddar cddddr cdr ceiling char->integer '+'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? '+'char-downcase char-lower-case? char-numeric? char-ready? char-upcase '+'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? '+'char? close-input-port close-output-port complex? cons cos '+'current-input-port current-output-port denominator display eof-object? '+'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor '+'force gcd imag-part inexact->exact inexact? input-port? integer->char '+'integer? interaction-environment lcm length list list->string '+'list->vector list-ref list-tail list? load log magnitude make-polar '+'make-rectangular make-string make-vector max member memq memv min '+'modulo negative? newline not null-environment null? number->string '+'number? numerator odd? open-input-file open-output-file output-port? '+'pair? peek-char port? positive? procedure? quasiquote quote quotient '+'rational? rationalize read read-char real-part real? remainder reverse '+'round scheme-report-environment set! set-car! set-cdr! sin sqrt string '+'string->list string->number string->symbol string-append string-ci<=? '+'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy '+'string-fill! string-length string-ref string-set! string<=? string<? '+'string=? string>=? string>? string? substring symbol->string symbol? '+'tan transcript-off transcript-on truncate values vector '+'vector->list vector-fill! vector-length vector-ref vector-set! '+'with-input-from-file with-output-to-file write write-char zero?'};var SHEBANG={className:'meta',begin:'^#!',end:'$'};var LITERAL={className:'literal',begin:'(#t|#f|#\\\\\\\\'+SCHEME_IDENT_RE+'|#\\\\\\\\.)'};var NUMBER={className:'number',variants:[{begin:SCHEME_SIMPLE_NUMBER_RE,relevance:0},{begin:SCHEME_COMPLEX_NUMBER_RE,relevance:0},{begin:'#b[0-1]+(/[0-1]+)?'},{begin:'#o[0-7]+(/[0-7]+)?'},{begin:'#x[0-9a-f]+(/[0-9a-f]+)?'}]};var STRING=hljs.QUOTE_STRING_MODE;var REGULAR_EXPRESSION={className:'regexp',begin:'#[pr]x\"',end:'[^\\\\\\\\]\"'};var COMMENT_MODES=[hljs.COMMENT(';','$',{relevance:0}),hljs.COMMENT('#\\\\|','\\\\|#')];var IDENT={begin:SCHEME_IDENT_RE,relevance:0};var QUOTED_IDENT={className:'symbol',begin:'\\''+SCHEME_IDENT_RE};var BODY={endsWithParent:true,relevance:0};var QUOTED_LIST={variants:[{begin:/'/},{begin:'`'}],contains:[{begin:'\\\\(',end:'\\\\)',contains:['self',LITERAL,STRING,NUMBER,IDENT,QUOTED_IDENT]}]};var NAME={className:'name',begin:SCHEME_IDENT_RE,lexemes:SCHEME_IDENT_RE,keywords:BUILTINS};var LAMBDA={begin:/lambda/,endsWithParent:true,returnBegin:true,contains:[NAME,{begin:/\\(/,end:/\\)/,endsParent:true,contains:[IDENT]}]};var LIST={variants:[{begin:'\\\\(',end:'\\\\)'},{begin:'\\\\[',end:'\\\\]'}],contains:[LAMBDA,NAME,BODY]};BODY.contains=[LITERAL,NUMBER,STRING,IDENT,QUOTED_IDENT,QUOTED_LIST,LIST].concat(COMMENT_MODES);return{illegal:/\\S/,contains:[SHEBANG,NUMBER,STRING,QUOTED_IDENT,QUOTED_LIST,LIST].concat(COMMENT_MODES)};};","map":{"version":3,"names":["module","exports","hljs","SCHEME_IDENT_RE","SCHEME_SIMPLE_NUMBER_RE","SCHEME_COMPLEX_NUMBER_RE","BUILTINS","SHEBANG","className","begin","end","LITERAL","NUMBER","variants","relevance","STRING","QUOTE_STRING_MODE","REGULAR_EXPRESSION","COMMENT_MODES","COMMENT","IDENT","QUOTED_IDENT","BODY","endsWithParent","QUOTED_LIST","contains","NAME","lexemes","keywords","LAMBDA","returnBegin","endsParent","LIST","concat","illegal"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/highlight.js/lib/languages/scheme.js"],"sourcesContent":["module.exports = function(hljs) {\n  var SCHEME_IDENT_RE = '[^\\\\(\\\\)\\\\[\\\\]\\\\{\\\\}\",\\'`;#|\\\\\\\\\\\\s]+';\n  var SCHEME_SIMPLE_NUMBER_RE = '(\\\\-|\\\\+)?\\\\d+([./]\\\\d+)?';\n  var SCHEME_COMPLEX_NUMBER_RE = SCHEME_SIMPLE_NUMBER_RE + '[+\\\\-]' + SCHEME_SIMPLE_NUMBER_RE + 'i';\n  var BUILTINS = {\n    'builtin-name':\n      'case-lambda call/cc class define-class exit-handler field import ' +\n      'inherit init-field interface let*-values let-values let/ec mixin ' +\n      'opt-lambda override protect provide public rename require ' +\n      'require-for-syntax syntax syntax-case syntax-error unit/sig unless ' +\n      'when with-syntax and begin call-with-current-continuation ' +\n      'call-with-input-file call-with-output-file case cond define ' +\n      'define-syntax delay do dynamic-wind else for-each if lambda let let* ' +\n      'let-syntax letrec letrec-syntax map or syntax-rules \\' * + , ,@ - ... / ' +\n      '; < <= = => > >= ` abs acos angle append apply asin assoc assq assv atan ' +\n      'boolean? caar cadr call-with-input-file call-with-output-file ' +\n      'call-with-values car cdddar cddddr cdr ceiling char->integer ' +\n      'char-alphabetic? char-ci<=? char-ci<? char-ci=? char-ci>=? char-ci>? ' +\n      'char-downcase char-lower-case? char-numeric? char-ready? char-upcase ' +\n      'char-upper-case? char-whitespace? char<=? char<? char=? char>=? char>? ' +\n      'char? close-input-port close-output-port complex? cons cos ' +\n      'current-input-port current-output-port denominator display eof-object? ' +\n      'eq? equal? eqv? eval even? exact->inexact exact? exp expt floor ' +\n      'force gcd imag-part inexact->exact inexact? input-port? integer->char ' +\n      'integer? interaction-environment lcm length list list->string ' +\n      'list->vector list-ref list-tail list? load log magnitude make-polar ' +\n      'make-rectangular make-string make-vector max member memq memv min ' +\n      'modulo negative? newline not null-environment null? number->string ' +\n      'number? numerator odd? open-input-file open-output-file output-port? ' +\n      'pair? peek-char port? positive? procedure? quasiquote quote quotient ' +\n      'rational? rationalize read read-char real-part real? remainder reverse ' +\n      'round scheme-report-environment set! set-car! set-cdr! sin sqrt string ' +\n      'string->list string->number string->symbol string-append string-ci<=? ' +\n      'string-ci<? string-ci=? string-ci>=? string-ci>? string-copy ' +\n      'string-fill! string-length string-ref string-set! string<=? string<? ' +\n      'string=? string>=? string>? string? substring symbol->string symbol? ' +\n      'tan transcript-off transcript-on truncate values vector ' +\n      'vector->list vector-fill! vector-length vector-ref vector-set! ' +\n      'with-input-from-file with-output-to-file write write-char zero?'\n  };\n\n  var SHEBANG = {\n    className: 'meta',\n    begin: '^#!',\n    end: '$'\n  };\n\n  var LITERAL = {\n    className: 'literal',\n    begin: '(#t|#f|#\\\\\\\\' + SCHEME_IDENT_RE + '|#\\\\\\\\.)'\n  };\n\n  var NUMBER = {\n    className: 'number',\n    variants: [\n      { begin: SCHEME_SIMPLE_NUMBER_RE, relevance: 0 },\n      { begin: SCHEME_COMPLEX_NUMBER_RE, relevance: 0 },\n      { begin: '#b[0-1]+(/[0-1]+)?' },\n      { begin: '#o[0-7]+(/[0-7]+)?' },\n      { begin: '#x[0-9a-f]+(/[0-9a-f]+)?' }\n    ]\n  };\n\n  var STRING = hljs.QUOTE_STRING_MODE;\n\n  var REGULAR_EXPRESSION = {\n    className: 'regexp',\n    begin: '#[pr]x\"',\n    end: '[^\\\\\\\\]\"'\n  };\n\n  var COMMENT_MODES = [\n    hljs.COMMENT(\n      ';',\n      '$',\n      {\n        relevance: 0\n      }\n    ),\n    hljs.COMMENT('#\\\\|', '\\\\|#')\n  ];\n\n  var IDENT = {\n    begin: SCHEME_IDENT_RE,\n    relevance: 0\n  };\n\n  var QUOTED_IDENT = {\n    className: 'symbol',\n    begin: '\\'' + SCHEME_IDENT_RE\n  };\n\n  var BODY = {\n    endsWithParent: true,\n    relevance: 0\n  };\n\n  var QUOTED_LIST = {\n    variants: [\n      { begin: /'/ },\n      { begin: '`' }\n    ],\n    contains: [\n      {\n        begin: '\\\\(', end: '\\\\)',\n        contains: ['self', LITERAL, STRING, NUMBER, IDENT, QUOTED_IDENT]\n      }\n    ]\n  };\n\n  var NAME = {\n    className: 'name',\n    begin: SCHEME_IDENT_RE,\n    lexemes: SCHEME_IDENT_RE,\n    keywords: BUILTINS\n  };\n\n  var LAMBDA = {\n    begin: /lambda/, endsWithParent: true, returnBegin: true,\n    contains: [\n      NAME,\n      {\n        begin: /\\(/, end: /\\)/, endsParent: true,\n        contains: [IDENT],\n      }\n    ]\n  };\n\n  var LIST = {\n    variants: [\n      { begin: '\\\\(', end: '\\\\)' },\n      { begin: '\\\\[', end: '\\\\]' }\n    ],\n    contains: [LAMBDA, NAME, BODY]\n  };\n\n  BODY.contains = [LITERAL, NUMBER, STRING, IDENT, QUOTED_IDENT, QUOTED_LIST, LIST].concat(COMMENT_MODES);\n\n  return {\n    illegal: /\\S/,\n    contains: [SHEBANG, NUMBER, STRING, QUOTED_IDENT, QUOTED_LIST, LIST].concat(COMMENT_MODES)\n  };\n};"],"mappings":"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"},"metadata":{},"sourceType":"module"}