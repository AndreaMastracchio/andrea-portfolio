{"ast":null,"code":"'use strict';module.exports=puppet;puppet.displayName='puppet';puppet.aliases=[];function puppet(Prism){;(function(Prism){Prism.languages.puppet={heredoc:[// Matches the content of a quoted heredoc string (subject to interpolation)\n{pattern:/(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,lookbehind:true,alias:'string',inside:{// Matches the end tag\npunctuation:/(?=\\S).*\\S(?= *$)/ // See interpolation below\n}},// Matches the content of an unquoted heredoc string (no interpolation)\n{pattern:/(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,lookbehind:true,greedy:true,alias:'string',inside:{// Matches the end tag\npunctuation:/(?=\\S).*\\S(?= *$)/}},// Matches the start tag of heredoc strings\n{pattern:/@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,alias:'string',inside:{punctuation:{pattern:/(\\().+?(?=\\))/,lookbehind:true}}}],'multiline-comment':{pattern:/(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,lookbehind:true,greedy:true,alias:'comment'},regex:{// Must be prefixed with the keyword \"node\" or a non-word char\npattern:/((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,lookbehind:true,greedy:true,inside:{// Extended regexes must have the x flag. They can contain single-line comments.\n'extended-regex':{pattern:/^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,inside:{comment:/#.*/}}}},comment:{pattern:/(^|[^\\\\])#.*/,lookbehind:true,greedy:true},string:{// Allow for one nested level of double quotes inside interpolation\npattern:/([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:true,inside:{'double-quoted':{pattern:/^\"[\\s\\S]*\"$/,inside:{// See interpolation below\n}}}},variable:{pattern:/\\$(?:::)?\\w+(?:::\\w+)*/,inside:{punctuation:/::/}},'attr-name':/(?:\\w+|\\*)(?=\\s*=>)/,function:[{pattern:/(\\.)(?!\\d)\\w+/,lookbehind:true},/\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/],number:/\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,boolean:/\\b(?:true|false)\\b/,// Includes words reserved for future use\nkeyword:/\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,datatype:{pattern:/\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,alias:'symbol'},operator:/=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,punctuation:/[\\[\\]{}().,;]|:+/};var interpolation=[{// Allow for one nested level of braces inside interpolation\npattern:/(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,lookbehind:true,inside:{'short-variable':{// Negative look-ahead prevent wrong highlighting of functions\npattern:/(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,lookbehind:true,alias:'variable',inside:{punctuation:/::/}},delimiter:{pattern:/^\\$/,alias:'variable'},rest:Prism.languages.puppet}},{pattern:/(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,lookbehind:true,alias:'variable',inside:{punctuation:/::/}}];Prism.languages.puppet['heredoc'][0].inside.interpolation=interpolation;Prism.languages.puppet['string'].inside['double-quoted'].inside.interpolation=interpolation;})(Prism);}","map":{"version":3,"names":["module","exports","puppet","displayName","aliases","Prism","languages","heredoc","pattern","lookbehind","alias","inside","punctuation","greedy","regex","comment","string","variable","function","number","boolean","keyword","datatype","operator","interpolation","delimiter","rest"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/puppet.js"],"sourcesContent":["'use strict'\n\nmodule.exports = puppet\npuppet.displayName = 'puppet'\npuppet.aliases = []\nfunction puppet(Prism) {\n  ;(function(Prism) {\n    Prism.languages.puppet = {\n      heredoc: [\n        // Matches the content of a quoted heredoc string (subject to interpolation)\n        {\n          pattern: /(@\\(\"([^\"\\r\\n\\/):]+)\"(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/ // See interpolation below\n          }\n        }, // Matches the content of an unquoted heredoc string (no interpolation)\n        {\n          pattern: /(@\\(([^\"\\r\\n\\/):]+)(?:\\/[nrts$uL]*)?\\).*(?:\\r?\\n|\\r))(?:.*(?:\\r?\\n|\\r))*?[ \\t]*\\|?[ \\t]*-?[ \\t]*\\2/,\n          lookbehind: true,\n          greedy: true,\n          alias: 'string',\n          inside: {\n            // Matches the end tag\n            punctuation: /(?=\\S).*\\S(?= *$)/\n          }\n        }, // Matches the start tag of heredoc strings\n        {\n          pattern: /@\\(\"?(?:[^\"\\r\\n\\/):]+)\"?(?:\\/[nrts$uL]*)?\\)/,\n          alias: 'string',\n          inside: {\n            punctuation: {\n              pattern: /(\\().+?(?=\\))/,\n              lookbehind: true\n            }\n          }\n        }\n      ],\n      'multiline-comment': {\n        pattern: /(^|[^\\\\])\\/\\*[\\s\\S]*?\\*\\//,\n        lookbehind: true,\n        greedy: true,\n        alias: 'comment'\n      },\n      regex: {\n        // Must be prefixed with the keyword \"node\" or a non-word char\n        pattern: /((?:\\bnode\\s+|[~=\\(\\[\\{,]\\s*|[=+]>\\s*|^\\s*))\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/(?:[imx]+\\b|\\B)/,\n        lookbehind: true,\n        greedy: true,\n        inside: {\n          // Extended regexes must have the x flag. They can contain single-line comments.\n          'extended-regex': {\n            pattern: /^\\/(?:[^\\/\\\\]|\\\\[\\s\\S])+\\/[im]*x[im]*$/,\n            inside: {\n              comment: /#.*/\n            }\n          }\n        }\n      },\n      comment: {\n        pattern: /(^|[^\\\\])#.*/,\n        lookbehind: true,\n        greedy: true\n      },\n      string: {\n        // Allow for one nested level of double quotes inside interpolation\n        pattern: /([\"'])(?:\\$\\{(?:[^'\"}]|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}|(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          'double-quoted': {\n            pattern: /^\"[\\s\\S]*\"$/,\n            inside: {\n              // See interpolation below\n            }\n          }\n        }\n      },\n      variable: {\n        pattern: /\\$(?:::)?\\w+(?:::\\w+)*/,\n        inside: {\n          punctuation: /::/\n        }\n      },\n      'attr-name': /(?:\\w+|\\*)(?=\\s*=>)/,\n      function: [\n        {\n          pattern: /(\\.)(?!\\d)\\w+/,\n          lookbehind: true\n        },\n        /\\b(?:contain|debug|err|fail|include|info|notice|realize|require|tag|warning)\\b|\\b(?!\\d)\\w+(?=\\()/\n      ],\n      number: /\\b(?:0x[a-f\\d]+|\\d+(?:\\.\\d+)?(?:e-?\\d+)?)\\b/i,\n      boolean: /\\b(?:true|false)\\b/,\n      // Includes words reserved for future use\n      keyword: /\\b(?:application|attr|case|class|consumes|default|define|else|elsif|function|if|import|inherits|node|private|produces|type|undef|unless)\\b/,\n      datatype: {\n        pattern: /\\b(?:Any|Array|Boolean|Callable|Catalogentry|Class|Collection|Data|Default|Enum|Float|Hash|Integer|NotUndef|Numeric|Optional|Pattern|Regexp|Resource|Runtime|Scalar|String|Struct|Tuple|Type|Undef|Variant)\\b/,\n        alias: 'symbol'\n      },\n      operator: /=[=~>]?|![=~]?|<(?:<\\|?|[=~|-])?|>[>=]?|->?|~>|\\|>?>?|[*\\/%+?]|\\b(?:and|in|or)\\b/,\n      punctuation: /[\\[\\]{}().,;]|:+/\n    }\n    var interpolation = [\n      {\n        // Allow for one nested level of braces inside interpolation\n        pattern: /(^|[^\\\\])\\$\\{(?:[^'\"{}]|\\{[^}]*\\}|([\"'])(?:(?!\\2)[^\\\\]|\\\\[\\s\\S])*\\2)+\\}/,\n        lookbehind: true,\n        inside: {\n          'short-variable': {\n            // Negative look-ahead prevent wrong highlighting of functions\n            pattern: /(^\\$\\{)(?!\\w+\\()(?:::)?\\w+(?:::\\w+)*/,\n            lookbehind: true,\n            alias: 'variable',\n            inside: {\n              punctuation: /::/\n            }\n          },\n          delimiter: {\n            pattern: /^\\$/,\n            alias: 'variable'\n          },\n          rest: Prism.languages.puppet\n        }\n      },\n      {\n        pattern: /(^|[^\\\\])\\$(?:::)?\\w+(?:::\\w+)*/,\n        lookbehind: true,\n        alias: 'variable',\n        inside: {\n          punctuation: /::/\n        }\n      }\n    ]\n    Prism.languages.puppet['heredoc'][0].inside.interpolation = interpolation\n    Prism.languages.puppet['string'].inside[\n      'double-quoted'\n    ].inside.interpolation = interpolation\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}