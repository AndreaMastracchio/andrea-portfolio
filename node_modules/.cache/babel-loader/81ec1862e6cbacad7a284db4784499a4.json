{"ast":null,"code":"'use strict';module.exports=eiffel;eiffel.displayName='eiffel';eiffel.aliases=[];function eiffel(Prism){Prism.languages.eiffel={comment:/--.*/,string:[// Aligned-verbatim-strings\n{pattern:/\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,greedy:true},// Non-aligned-verbatim-strings\n{pattern:/\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,greedy:true},// Single-line string\n{pattern:/\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,greedy:true}],// normal char | special char | char code\nchar:/'(?:%.|[^%'\\r\\n])+'/,keyword:/\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,boolean:/\\b(?:True|False)\\b/i,// Convention: class-names are always all upper-case characters\n'class-name':{pattern:/\\b[A-Z][\\dA-Z_]*\\b/,alias:'builtin'},number:[// hexa | octal | bin\n/\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i,// Decimal\n/(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i],punctuation:/:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,operator:/\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/};}","map":{"version":3,"names":["module","exports","eiffel","displayName","aliases","Prism","languages","comment","string","pattern","greedy","char","keyword","boolean","alias","number","punctuation","operator"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/eiffel.js"],"sourcesContent":["'use strict'\n\nmodule.exports = eiffel\neiffel.displayName = 'eiffel'\neiffel.aliases = []\nfunction eiffel(Prism) {\n  Prism.languages.eiffel = {\n    comment: /--.*/,\n    string: [\n      // Aligned-verbatim-strings\n      {\n        pattern: /\"([^[]*)\\[[\\s\\S]*?\\]\\1\"/,\n        greedy: true\n      }, // Non-aligned-verbatim-strings\n      {\n        pattern: /\"([^{]*)\\{[\\s\\S]*?\\}\\1\"/,\n        greedy: true\n      }, // Single-line string\n      {\n        pattern: /\"(?:%\\s+%|%.|[^%\"\\r\\n])*\"/,\n        greedy: true\n      }\n    ],\n    // normal char | special char | char code\n    char: /'(?:%.|[^%'\\r\\n])+'/,\n    keyword: /\\b(?:across|agent|alias|all|and|attached|as|assign|attribute|check|class|convert|create|Current|debug|deferred|detachable|do|else|elseif|end|ensure|expanded|export|external|feature|from|frozen|if|implies|inherit|inspect|invariant|like|local|loop|not|note|obsolete|old|once|or|Precursor|redefine|rename|require|rescue|Result|retry|select|separate|some|then|undefine|until|variant|Void|when|xor)\\b/i,\n    boolean: /\\b(?:True|False)\\b/i,\n    // Convention: class-names are always all upper-case characters\n    'class-name': {\n      pattern: /\\b[A-Z][\\dA-Z_]*\\b/,\n      alias: 'builtin'\n    },\n    number: [\n      // hexa | octal | bin\n      /\\b0[xcb][\\da-f](?:_*[\\da-f])*\\b/i, // Decimal\n      /(?:\\d(?:_*\\d)*)?\\.(?:(?:\\d(?:_*\\d)*)?e[+-]?)?\\d(?:_*\\d)*|\\d(?:_*\\d)*\\.?/i\n    ],\n    punctuation: /:=|<<|>>|\\(\\||\\|\\)|->|\\.(?=\\w)|[{}[\\];(),:?]/,\n    operator: /\\\\\\\\|\\|\\.\\.\\||\\.\\.|\\/[~\\/=]?|[><]=?|[-+*^=~]/\n  }\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,EAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyB,CACvBK,OAAO,CAAE,MADc,CAEvBC,MAAM,CAAE,CACN;AACA,CACEC,OAAO,CAAE,yBADX,CAEEC,MAAM,CAAE,IAFV,CAFM,CAKH;AACH,CACED,OAAO,CAAE,yBADX,CAEEC,MAAM,CAAE,IAFV,CANM,CASH;AACH,CACED,OAAO,CAAE,2BADX,CAEEC,MAAM,CAAE,IAFV,CAVM,CAFe,CAiBvB;AACAC,IAAI,CAAE,qBAlBiB,CAmBvBC,OAAO,CAAE,8YAnBc,CAoBvBC,OAAO,CAAE,qBApBc,CAqBvB;AACA,aAAc,CACZJ,OAAO,CAAE,oBADG,CAEZK,KAAK,CAAE,SAFK,CAtBS,CA0BvBC,MAAM,CAAE,CACN;AACA,kCAFM,CAE8B;AACpC,0EAHM,CA1Be,CA+BvBC,WAAW,CAAE,8CA/BU,CAgCvBC,QAAQ,CAAE,8CAhCa,CAAzB,CAkCD"},"metadata":{},"sourceType":"module"}