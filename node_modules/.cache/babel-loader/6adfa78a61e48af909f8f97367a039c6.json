{"ast":null,"code":"'use strict';module.exports=ruby;ruby.displayName='ruby';ruby.aliases=['rb'];function ruby(Prism){/**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */;(function(Prism){Prism.languages.ruby=Prism.languages.extend('clike',{comment:[/#.*/,{pattern:/^=begin\\s[\\s\\S]*?^=end/m,greedy:true}],keyword:/\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/});var interpolation={pattern:/#\\{[^}]+\\}/,inside:{delimiter:{pattern:/^#\\{|\\}$/,alias:'tag'},rest:Prism.languages.ruby}};delete Prism.languages.ruby.function;Prism.languages.insertBefore('ruby','keyword',{regex:[{pattern:/%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,greedy:true,inside:{interpolation:interpolation}},{pattern:/%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,greedy:true,inside:{interpolation:interpolation}},{// Here we need to specifically allow interpolation\npattern:/%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,greedy:true,inside:{interpolation:interpolation}},{pattern:/%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,greedy:true,inside:{interpolation:interpolation}},{pattern:/%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,greedy:true,inside:{interpolation:interpolation}},{pattern:/(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,lookbehind:true,greedy:true}],variable:/[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,symbol:{pattern:/(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,lookbehind:true},'method-definition':{pattern:/(\\bdef\\s+)[\\w.]+/,lookbehind:true,inside:{function:/\\w+$/,rest:Prism.languages.ruby}}});Prism.languages.insertBefore('ruby','number',{builtin:/\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,constant:/\\b[A-Z]\\w*(?:[?!]|\\b)/});Prism.languages.ruby.string=[{pattern:/%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,greedy:true,inside:{interpolation:interpolation}},{pattern:/%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,greedy:true,inside:{interpolation:interpolation}},{// Here we need to specifically allow interpolation\npattern:/%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,greedy:true,inside:{interpolation:interpolation}},{pattern:/%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,greedy:true,inside:{interpolation:interpolation}},{pattern:/%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,greedy:true,inside:{interpolation:interpolation}},{pattern:/(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,greedy:true,inside:{interpolation:interpolation}}];Prism.languages.rb=Prism.languages.ruby;})(Prism);}","map":{"version":3,"names":["module","exports","ruby","displayName","aliases","Prism","languages","extend","comment","pattern","greedy","keyword","interpolation","inside","delimiter","alias","rest","function","insertBefore","regex","lookbehind","variable","symbol","builtin","constant","string","rb"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/ruby.js"],"sourcesContent":["'use strict'\n\nmodule.exports = ruby\nruby.displayName = 'ruby'\nruby.aliases = ['rb']\nfunction ruby(Prism) {\n  /**\n   * Original by Samuel Flores\n   *\n   * Adds the following new token classes:\n   *      constant, builtin, variable, symbol, regex\n   */\n  ;(function(Prism) {\n    Prism.languages.ruby = Prism.languages.extend('clike', {\n      comment: [\n        /#.*/,\n        {\n          pattern: /^=begin\\s[\\s\\S]*?^=end/m,\n          greedy: true\n        }\n      ],\n      keyword: /\\b(?:alias|and|BEGIN|begin|break|case|class|def|define_method|defined|do|each|else|elsif|END|end|ensure|false|for|if|in|module|new|next|nil|not|or|protected|private|public|raise|redo|require|rescue|retry|return|self|super|then|throw|true|undef|unless|until|when|while|yield)\\b/\n    })\n    var interpolation = {\n      pattern: /#\\{[^}]+\\}/,\n      inside: {\n        delimiter: {\n          pattern: /^#\\{|\\}$/,\n          alias: 'tag'\n        },\n        rest: Prism.languages.ruby\n      }\n    }\n    delete Prism.languages.ruby.function\n    Prism.languages.insertBefore('ruby', 'keyword', {\n      regex: [\n        {\n          pattern: /%r([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          // Here we need to specifically allow interpolation\n          pattern: /%r\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\][gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /%r<(?:[^<>\\\\]|\\\\[\\s\\S])*>[gim]{0,3}/,\n          greedy: true,\n          inside: {\n            interpolation: interpolation\n          }\n        },\n        {\n          pattern: /(^|[^/])\\/(?!\\/)(\\[.+?]|\\\\.|[^/\\\\\\r\\n])+\\/[gim]{0,3}(?=\\s*($|[\\r\\n,.;})]))/,\n          lookbehind: true,\n          greedy: true\n        }\n      ],\n      variable: /[@$]+[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n      symbol: {\n        pattern: /(^|[^:]):[a-zA-Z_]\\w*(?:[?!]|\\b)/,\n        lookbehind: true\n      },\n      'method-definition': {\n        pattern: /(\\bdef\\s+)[\\w.]+/,\n        lookbehind: true,\n        inside: {\n          function: /\\w+$/,\n          rest: Prism.languages.ruby\n        }\n      }\n    })\n    Prism.languages.insertBefore('ruby', 'number', {\n      builtin: /\\b(?:Array|Bignum|Binding|Class|Continuation|Dir|Exception|FalseClass|File|Stat|Fixnum|Float|Hash|Integer|IO|MatchData|Method|Module|NilClass|Numeric|Object|Proc|Range|Regexp|String|Struct|TMS|Symbol|ThreadGroup|Thread|Time|TrueClass)\\b/,\n      constant: /\\b[A-Z]\\w*(?:[?!]|\\b)/\n    })\n    Prism.languages.ruby.string = [\n      {\n        pattern: /%[qQiIwWxs]?([^a-zA-Z0-9\\s{(\\[<])(?:(?!\\1)[^\\\\]|\\\\[\\s\\S])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\((?:[^()\\\\]|\\\\[\\s\\S])*\\)/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        // Here we need to specifically allow interpolation\n        pattern: /%[qQiIwWxs]?\\{(?:[^#{}\\\\]|#(?:\\{[^}]+\\})?|\\\\[\\s\\S])*\\}/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?\\[(?:[^\\[\\]\\\\]|\\\\[\\s\\S])*\\]/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /%[qQiIwWxs]?<(?:[^<>\\\\]|\\\\[\\s\\S])*>/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      },\n      {\n        pattern: /(\"|')(?:#\\{[^}]+\\}|\\\\(?:\\r\\n|[\\s\\S])|(?!\\1)[^\\\\\\r\\n])*\\1/,\n        greedy: true,\n        inside: {\n          interpolation: interpolation\n        }\n      }\n    ]\n    Prism.languages.rb = Prism.languages.ruby\n  })(Prism)\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}