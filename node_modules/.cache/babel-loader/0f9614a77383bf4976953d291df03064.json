{"ast":null,"code":"'use strict';module.exports=markup;markup.displayName='markup';markup.aliases=['xml','html','mathml','svg'];function markup(Prism){Prism.languages.markup={comment:/<!--[\\s\\S]*?-->/,prolog:/<\\?[\\s\\S]+?\\?>/,doctype:/<!DOCTYPE[\\s\\S]+?>/i,cdata:/<!\\[CDATA\\[[\\s\\S]*?]]>/i,tag:{pattern:/<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,greedy:true,inside:{tag:{pattern:/^<\\/?[^\\s>\\/]+/i,inside:{punctuation:/^<\\/?/,namespace:/^[^\\s>\\/:]+:/}},'attr-value':{pattern:/=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,inside:{punctuation:[/^=/,{pattern:/^(\\s*)[\"']|[\"']$/,lookbehind:true}]}},punctuation:/\\/?>/,'attr-name':{pattern:/[^\\s>\\/]+/,inside:{namespace:/^[^\\s>\\/:]+:/}}}},entity:/&#?[\\da-z]{1,8};/i};Prism.languages.markup['tag'].inside['attr-value'].inside['entity']=Prism.languages.markup['entity'];// Plugin to make entity title show the real entity, idea by Roman Komarov\nPrism.hooks.add('wrap',function(env){if(env.type==='entity'){env.attributes['title']=env.content.value.replace(/&amp;/,'&');}});Object.defineProperty(Prism.languages.markup.tag,'addInlined',{/**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */value:function addInlined(tagName,lang){var includedCdataInside={};includedCdataInside['language-'+lang]={pattern:/(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,lookbehind:true,inside:Prism.languages[lang]};includedCdataInside['cdata']=/^<!\\[CDATA\\[|\\]\\]>$/i;var inside={'included-cdata':{pattern:/<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,inside:includedCdataInside}};inside['language-'+lang]={pattern:/[\\s\\S]+/,inside:Prism.languages[lang]};var def={};def[tagName]={pattern:RegExp(/(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(/__/g,tagName),'i'),lookbehind:true,greedy:true,inside:inside};Prism.languages.insertBefore('markup','cdata',def);}});Prism.languages.xml=Prism.languages.extend('markup',{});Prism.languages.html=Prism.languages.markup;Prism.languages.mathml=Prism.languages.markup;Prism.languages.svg=Prism.languages.markup;}","map":{"version":3,"names":["module","exports","markup","displayName","aliases","Prism","languages","comment","prolog","doctype","cdata","tag","pattern","greedy","inside","punctuation","namespace","lookbehind","entity","hooks","add","env","type","attributes","content","value","replace","Object","defineProperty","addInlined","tagName","lang","includedCdataInside","def","RegExp","source","insertBefore","xml","extend","html","mathml","svg"],"sources":["/home/andrea/progetti/andrea-portfolio/frontend/node_modules/refractor/lang/markup.js"],"sourcesContent":["'use strict'\n\nmodule.exports = markup\nmarkup.displayName = 'markup'\nmarkup.aliases = ['xml', 'html', 'mathml', 'svg']\nfunction markup(Prism) {\n  Prism.languages.markup = {\n    comment: /<!--[\\s\\S]*?-->/,\n    prolog: /<\\?[\\s\\S]+?\\?>/,\n    doctype: /<!DOCTYPE[\\s\\S]+?>/i,\n    cdata: /<!\\[CDATA\\[[\\s\\S]*?]]>/i,\n    tag: {\n      pattern: /<\\/?(?!\\d)[^\\s>\\/=$<%]+(?:\\s(?:\\s*[^\\s>\\/=]+(?:\\s*=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+(?=[\\s>]))|(?=[\\s/>])))+)?\\s*\\/?>/i,\n      greedy: true,\n      inside: {\n        tag: {\n          pattern: /^<\\/?[^\\s>\\/]+/i,\n          inside: {\n            punctuation: /^<\\/?/,\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        },\n        'attr-value': {\n          pattern: /=\\s*(?:\"[^\"]*\"|'[^']*'|[^\\s'\">=]+)/i,\n          inside: {\n            punctuation: [\n              /^=/,\n              {\n                pattern: /^(\\s*)[\"']|[\"']$/,\n                lookbehind: true\n              }\n            ]\n          }\n        },\n        punctuation: /\\/?>/,\n        'attr-name': {\n          pattern: /[^\\s>\\/]+/,\n          inside: {\n            namespace: /^[^\\s>\\/:]+:/\n          }\n        }\n      }\n    },\n    entity: /&#?[\\da-z]{1,8};/i\n  }\n  Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =\n    Prism.languages.markup['entity'] // Plugin to make entity title show the real entity, idea by Roman Komarov\n  Prism.hooks.add('wrap', function(env) {\n    if (env.type === 'entity') {\n      env.attributes['title'] = env.content.value.replace(/&amp;/, '&')\n    }\n  })\n  Object.defineProperty(Prism.languages.markup.tag, 'addInlined', {\n    /**\n     * Adds an inlined language to markup.\n     *\n     * An example of an inlined language is CSS with `<style>` tags.\n     *\n     * @param {string} tagName The name of the tag that contains the inlined language. This name will be treated as\n     * case insensitive.\n     * @param {string} lang The language key.\n     * @example\n     * addInlined('style', 'css');\n     */\n    value: function addInlined(tagName, lang) {\n      var includedCdataInside = {}\n      includedCdataInside['language-' + lang] = {\n        pattern: /(^<!\\[CDATA\\[)[\\s\\S]+?(?=\\]\\]>$)/i,\n        lookbehind: true,\n        inside: Prism.languages[lang]\n      }\n      includedCdataInside['cdata'] = /^<!\\[CDATA\\[|\\]\\]>$/i\n      var inside = {\n        'included-cdata': {\n          pattern: /<!\\[CDATA\\[[\\s\\S]*?\\]\\]>/i,\n          inside: includedCdataInside\n        }\n      }\n      inside['language-' + lang] = {\n        pattern: /[\\s\\S]+/,\n        inside: Prism.languages[lang]\n      }\n      var def = {}\n      def[tagName] = {\n        pattern: RegExp(\n          /(<__[\\s\\S]*?>)(?:<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\s*|[\\s\\S])*?(?=<\\/__>)/.source.replace(\n            /__/g,\n            tagName\n          ),\n          'i'\n        ),\n        lookbehind: true,\n        greedy: true,\n        inside: inside\n      }\n      Prism.languages.insertBefore('markup', 'cdata', def)\n    }\n  })\n  Prism.languages.xml = Prism.languages.extend('markup', {})\n  Prism.languages.html = Prism.languages.markup\n  Prism.languages.mathml = Prism.languages.markup\n  Prism.languages.svg = Prism.languages.markup\n}\n"],"mappings":"AAAA,aAEAA,MAAM,CAACC,OAAP,CAAiBC,MAAjB,CACAA,MAAM,CAACC,WAAP,CAAqB,QAArB,CACAD,MAAM,CAACE,OAAP,CAAiB,CAAC,KAAD,CAAQ,MAAR,CAAgB,QAAhB,CAA0B,KAA1B,CAAjB,CACA,QAASF,OAAT,CAAgBG,KAAhB,CAAuB,CACrBA,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAyB,CACvBK,OAAO,CAAE,iBADc,CAEvBC,MAAM,CAAE,gBAFe,CAGvBC,OAAO,CAAE,qBAHc,CAIvBC,KAAK,CAAE,yBAJgB,CAKvBC,GAAG,CAAE,CACHC,OAAO,CAAE,uHADN,CAEHC,MAAM,CAAE,IAFL,CAGHC,MAAM,CAAE,CACNH,GAAG,CAAE,CACHC,OAAO,CAAE,iBADN,CAEHE,MAAM,CAAE,CACNC,WAAW,CAAE,OADP,CAENC,SAAS,CAAE,cAFL,CAFL,CADC,CAQN,aAAc,CACZJ,OAAO,CAAE,qCADG,CAEZE,MAAM,CAAE,CACNC,WAAW,CAAE,CACX,IADW,CAEX,CACEH,OAAO,CAAE,kBADX,CAEEK,UAAU,CAAE,IAFd,CAFW,CADP,CAFI,CARR,CAoBNF,WAAW,CAAE,MApBP,CAqBN,YAAa,CACXH,OAAO,CAAE,WADE,CAEXE,MAAM,CAAE,CACNE,SAAS,CAAE,cADL,CAFG,CArBP,CAHL,CALkB,CAqCvBE,MAAM,CAAE,mBArCe,CAAzB,CAuCAb,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,KAAvB,EAA8BY,MAA9B,CAAqC,YAArC,EAAmDA,MAAnD,CAA0D,QAA1D,EACET,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuB,QAAvB,CADF,CACmC;AACnCG,KAAK,CAACc,KAAN,CAAYC,GAAZ,CAAgB,MAAhB,CAAwB,SAASC,GAAT,CAAc,CACpC,GAAIA,GAAG,CAACC,IAAJ,GAAa,QAAjB,CAA2B,CACzBD,GAAG,CAACE,UAAJ,CAAe,OAAf,EAA0BF,GAAG,CAACG,OAAJ,CAAYC,KAAZ,CAAkBC,OAAlB,CAA0B,OAA1B,CAAmC,GAAnC,CAA1B,CACD,CACF,CAJD,EAKAC,MAAM,CAACC,cAAP,CAAsBvB,KAAK,CAACC,SAAN,CAAgBJ,MAAhB,CAAuBS,GAA7C,CAAkD,YAAlD,CAAgE,CAC9D;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OACIc,KAAK,CAAE,QAASI,WAAT,CAAoBC,OAApB,CAA6BC,IAA7B,CAAmC,CACxC,GAAIC,oBAAmB,CAAG,EAA1B,CACAA,mBAAmB,CAAC,YAAcD,IAAf,CAAnB,CAA0C,CACxCnB,OAAO,CAAE,mCAD+B,CAExCK,UAAU,CAAE,IAF4B,CAGxCH,MAAM,CAAET,KAAK,CAACC,SAAN,CAAgByB,IAAhB,CAHgC,CAA1C,CAKAC,mBAAmB,CAAC,OAAD,CAAnB,CAA+B,sBAA/B,CACA,GAAIlB,OAAM,CAAG,CACX,iBAAkB,CAChBF,OAAO,CAAE,2BADO,CAEhBE,MAAM,CAAEkB,mBAFQ,CADP,CAAb,CAMAlB,MAAM,CAAC,YAAciB,IAAf,CAAN,CAA6B,CAC3BnB,OAAO,CAAE,SADkB,CAE3BE,MAAM,CAAET,KAAK,CAACC,SAAN,CAAgByB,IAAhB,CAFmB,CAA7B,CAIA,GAAIE,IAAG,CAAG,EAAV,CACAA,GAAG,CAACH,OAAD,CAAH,CAAe,CACblB,OAAO,CAAEsB,MAAM,CACb,mEAAmEC,MAAnE,CAA0ET,OAA1E,CACE,KADF,CAEEI,OAFF,CADa,CAKb,GALa,CADF,CAQbb,UAAU,CAAE,IARC,CASbJ,MAAM,CAAE,IATK,CAUbC,MAAM,CAAEA,MAVK,CAAf,CAYAT,KAAK,CAACC,SAAN,CAAgB8B,YAAhB,CAA6B,QAA7B,CAAuC,OAAvC,CAAgDH,GAAhD,EACD,CA5C6D,CAAhE,EA8CA5B,KAAK,CAACC,SAAN,CAAgB+B,GAAhB,CAAsBhC,KAAK,CAACC,SAAN,CAAgBgC,MAAhB,CAAuB,QAAvB,CAAiC,EAAjC,CAAtB,CACAjC,KAAK,CAACC,SAAN,CAAgBiC,IAAhB,CAAuBlC,KAAK,CAACC,SAAN,CAAgBJ,MAAvC,CACAG,KAAK,CAACC,SAAN,CAAgBkC,MAAhB,CAAyBnC,KAAK,CAACC,SAAN,CAAgBJ,MAAzC,CACAG,KAAK,CAACC,SAAN,CAAgBmC,GAAhB,CAAsBpC,KAAK,CAACC,SAAN,CAAgBJ,MAAtC,CACD"},"metadata":{},"sourceType":"module"}